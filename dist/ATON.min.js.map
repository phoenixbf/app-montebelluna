{"version":3,"sources":["ATON.node.js","ATON.pov.js","ATON.lightprobe.js","ATON.eventhub.js","ATON.mathub.js","ATON.utils.js","ATON.scenehub.js","ATON.audiohub.js","ATON.nav.js","ATON.xr.js","ATON.sui.button.js","ATON.sui.label.js","ATON.sui.js","ATON.avatar.js","ATON.vroadcast.js","ATON.semfactory.js","ATON.fe.js","ATON.mediarec.js","ATON.geoloc.js","ATON.apphub.js","ATON.js"],"names":["Node","THREE","Group","constructor","id","type","traverse","o","isMesh","geometry","LP","userData","undefined","update","material","envMap","getEnvTex","ATON","NTYPES","SCENE","enablePicking","_rootG","_rootVisible","_nodes","snodes","SEM","_rootSem","semnodes","UI","_rootUI","uinodes","as","kwords","_bCloneOnLoadHit","_tlist","_aniMixers","castShadow","receiveShadow","onHover","onLeave","onSelect","ROOT_NID","nid","name","setAsRoot","setCloneOnLoadHit","b","addKeywords","kw","K","split","k","trim","length","c","children","C","hasKeyword","setDescription","s","description","getDescription","setAudio","au","audio","getAudio","hide","visible","Utils","setPicking","_renderer","shadowMap","enabled","_dMainL","shadow","needsUpdate","show","bPickable","toggle","disablePicking","setPickable","setMaterial","M","cMat","getMaterial","setDefaultAndHighlightMaterials","matSTD","matHL","highlight","restoreDefaultMaterial","setOpacity","f","opacity","setShadowCast","setShadowReceive","setEnvMap","envtex","assignLightProbe","assignLightProbeToMesh","assignLightProbesByProximity","_lps","Vector3","cLP","Box3","setFromObject","getCenter","mdist","i","d","distanceToSquared","pos","duplicate","clone","delete","p","parent","removeChild","dispose","remove","removeChildren","attachTo","node","N","add","attachToRoot","getBound","bb","bs","Sphere","getBoundingSphere","setPosition","x","y","z","position","copy","set","setScale","sx","sy","sz","scale","setRotation","rx","ry","rz","rotation","orientToCamera","quaternion","Nav","_qOri","setYup","addTransform","T","TT","parseTransformString","push","load","url","onComplete","resolveCollectionURL","endsWith","loadTileSet","_bqScene","_assetsManager","then","modelVisitor","t","console","log","_assetReqNew","P","Promise","resolve","reject","_aLoader","data","model","scene","registerAniMixers","ccExtract","_assetReqComplete","_bqSem","err","exportAs","filename","exportNode","setOnHover","h","setOnLeave","setOnSelect","POV","target","up","STD_UPVECTOR","fov","nextPOV","prevPOV","povlist","setTarget","setFOV","setNextPOV","pov","setPrevPOV","LightProbe","res","near","far","_res","_near","_far","STD_FAR","_envtex","_prevCCtarget","setNear","setFar","CCtarget","WebGLCubeRenderTarget","format","RGBEFormat","generateMipmaps","minFilter","LinearMipmapLinearFilter","encoding","sRGBEncoding","CC","CubeCamera","_rootVisibleGlobal","texture","assignToNode","EventHub","evLocal","evNetwork","on","fireEvent","clearEventHandlers","evtname","ehList","handler","handlerLocal","handlerNetwork","evhLocal","VRoadcast","bReplicate","executeHandlers","MatHub","materials","colors","_loader","MaterialLoader","_uSem","time","value","tint","Vector4","addDefaults","white","Color","black","green","yellow","red","blue","orange","defUI","sem","darksem","fullyTransparent","MeshBasicMaterial","transparent","depthWrite","ShaderMaterial","uniforms","color","vertexShader","getDefVertexShader","fragmentShader","selector","controllerRay","teleportLoc","side","DoubleSide","textureLoader","PATH_RES","map","measurement","depthTest","semanticShape","semanticShapeHL","semanticShapeEdit","semIcon","SpriteMaterial","TextureLoader","lp","lpIcon","sizeAttenuation","mat","jsonfile","addMaterial","_dt","device","geomUnitSphere","SphereGeometry","exporterGLTF","exporterOBJ","_dlink","document","createElement","style","display","body","appendChild","prefix","Math","random","toString","substr","window","location","href","isSecureContext","isMobile","test","navigator","userAgent","detectMobile","xrSupported","xr","isSessionSupported","filepath","lastIndexOf","toLowerCase","replace","ext","getFileExtension","index","substring","startsWith","string","urls","match","forEach","PATH_COLLECTION","endpoint","obj","onReceive","onFail","$","ajax","xhrFields","withCredentials","JSON","stringify","contentType","dataType","success","fail","object","updateMatrixWorld","g","applyMatrix4","matrixWorld","toNonIndexed","mergedGeometries","BufferGeometryUtils","mergeBufferGeometries","mergedGeometry","mergeVertices","center","group","mesh","Mesh","layers","enable","disable","cam","_camera","nts","_tsets","ts","TS","cameras","deleteCamera","setCamera","setResolution","tsurl","TILES","TilesRenderer","fetchOptions","mode","setResolutionFromRenderer","bFirst","onLoadModel","_onAllReqsCompleted","magFilter","LinearFilter","onDisposeModel","parentNode","computeBoundsTree","anisotropy","_maxAnisotropy","bAnimations","animations","mixer","AnimationMixer","clip","clipAction","play","asset","extras","cc","_ccModels","tstr","values","TSTRING_SEPARATOR","numValues","parseFloat","v","prec","toPrecision","PATH_RESTAPI","mstr","str","elem","documentElement","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","blob","URL","createObjectURL","download","click","downloadBlob","Blob","jsonobj","downloadText","buffer","bBin","opts","binary","GLTFExporter","parse","output","ArrayBuffer","downloadArrayBuffer","downloadJSONobj","OBJExporter","size","img","Image","aspect","updateProjectionMatrix","setSize","render","_mainRoot","b64img","domElement","toDataURL","src","_onResize","noLP","BoxBufferGeometry","MeshStandardMaterial","tex","createSceneNode","metalness","metalnessMap","roughnessMap","normalMap","dx","dz","PlaneBufferGeometry","rotateX","PI","SceneHub","currID","currData","_bEdit","_bLoading","_title","_descr","initBaseParsers","reqpath","sid","onSuccess","getJSON","parseScene","sobj","_jsonParsers","getSemanticNode","getSceneNode","child","nodes","edges","n","semid","S","SL","sphere","FLOAT_PREC","CL","semesh","_convexPoints","title","setTitle","descr","environment","env","pano","mainpano","setMainPanorama","setMainPanoramaRotation","bgcolor","setBackgroundColor","L","mainlight","direction","setMainLightDirection","intensity","shadows","toggleShadows","toggleMainLight","lps","lightprobes","auto","setAutoLP","exposure","setExposure","soundscape","global","setGlobalAudio","loop","navmode","setNavMode","measurements","m","measure","points","A","B","SUI","addMeasurementPoint","viewpoints","povs","setHomePOV","scenegraph","sg","G","getOrCreateSceneNode","transform","list","Array","isArray","u","shadowcast","shadowreceive","toYup","keywords","parid","childid","semanticgraph","getOrCreateSemanticNode","createSemanticNode","spheres","loc","SemFactory","createSphere","convexshapes","createConvexShape","nopicking","key","parser","patch","MODE_ADD","O","MODE_DEL","jstr","r","AudioHub","_listener","AudioListener","AudioLoader","audioURL","Audio","setBuffer","COSINOIDAL_DIST","cos","_mode","POVtransitionDuration","STD_POV_TRANS_DURATION","_rotSpeedOrbit","_rotSpeedFP","_inertia","_bControl","_bInteracting","_prevMode","setOrbitControl","_currPOV","STD_FOV","_fromPOV","_reqPOV","homePOV","_tPOVcall","_tPOVprogress","_vDir","Quaternion","_motionAmt","_motionDir","_bValidLocomotion","_queryDataScene","_controls","_cOrbit","_cFirstPerson","setUserControl","MODE_ORBIT","MODE_FP","MODE_DEVORI","setFirstPersonControl","setDeviceOrientationControl","XR","isPresenting","_camOrbit","PerspectiveCamera","innerWidth","innerHeight","STD_NEAR","enableAll","OrbitControls","rotateSpeed","enablePan","enableDamping","dampingFactor","screenSpacePanning","enableZoom","minDistance","maxDistance","addEventListener","updateTSetsCamera","syncCurrCamera","getSelectorRadius","setSelectorRadius","_camFP","_screenPointerCoords","_cDevOri","_camDevOri","DeviceOrientationControls","alphaOffset","_cam","getCamera","getWorldPosition","getWorldQuaternion","getWorldDirection","ctrl","handleXRtransition","handlePOVtransition","isTransitioning","controller0","negate","fv","multiplyScalar","_clock","elapsedTime","lerpVectors","MathUtils","lerp","_currPos","_reqPos","_fromPos","tgt","subVectors","normalize","FP_EPS","syncCurrPOV","handlePOV","duration","E","radius","requestPOV","requestPOVbyBound","point","normal","distanceTo","dv","sceneBS","getRootScene","eye","computeDefaultHome","scope","reorder","deviceOrientation","screenOrientation","absolute","alphaOffsetDevice","alphaOffsetScreen","onDeviceOrientationChangeEvent","event","onDeviceOrientationAbsoluteChangeEvent","onScreenOrientationChangeEvent","orientation","setObjectQuaternion","zee","euler","Euler","q0","q1","sqrt","alpha","beta","gamma","orient","setFromEuler","multiply","setFromAxisAngle","connect","disconnect","removeEventListener","getDirection","degToRad","iOSOrientationPermission","DeviceOrientationEvent","requestPermission","permissionState","catch","error","webkitCompassHeading","getDirectionMap","setReferenceSpaceType","setFramebufferScaleFactor","_stdpxd","MOBILE_DENSITY_F","_bPresenting","currSession","_sessionType","rig","gControllers","controller1","controller0pos","controller1pos","controller0dir","controller1dir","_lastPosR","_lastPosL","_pointerLineGeom","_pointerLineMesh","gpad0","gpad1","_urlHand","HAND_R","_stdActivation","uid","rh","getUINode","lh","avMats","avatars","am","currentQueryValidForLocomotion","userHeight","STD_TELEP_DURATION","rc","getCurrentEyeLocation","getCurrentDirection","bAddRep","setupControllerUI","HAND_L","session","onSessionEnded","MediaRec","stopMediaStreaming","setSession","background","_mMainPano","getController","bXRconfig","e","hand","handedness","_setupControllerL","_setupControllerR","setRefSpaceLocation","setTimeout","requestHome","sessionInit","optionalFeatures","requestSession","onSessionStarted","end","raytick","rhand","lhand","createUINode","CylinderBufferGeometry","translate","raylen","H","getControllerGrip","prev","lengthSq","Button","uiid","ratio","fsize","baseColor","switchColor","baseOpacity","hoverOpacity","_bSwitched","container","ThreeMeshUI","Block","width","height","padding","borderRadius","backgroundColor","backgroundOpacity","fontFamily","PATH_FONT_JSON","fontTexture","PATH_FONT_TEX","justifyContent","alignContent","uiText","Text","content","fontSize","fontColor","trw","STD_BTN_SIZE","trh","_trigger","PlaneGeometry","setBaseColor","setSwitchColor","setBackgroundOpacity","setText","text","switch","setIcon","bNoBackground","Label","setTextColor","init","mainSelector","_mSelectorSphere","renderOrder","fpTeleport","gTeleport","mTeleport","gMeasures","_prevMPoint","_measLabels","mLine","BufferGeometry","setFromPoints","_measLine","Line","gPoints","buildInfoNode","bShowInfo","_labelScale","_labelScaleVR","setInfoNodeText","gSemIcons","_sync","enableLPIcons","gLPIcons","enableSemIcons","_selectorRad","setSelectorModel","path","bUseStdMat","setSelectorColor","addSemIcon","meshape","semicon","Sprite","addLPIcon","rn","lpicon","setSemIconsOpacity","infoNode","infoContainer","infoNodeText","getInfoNode","txt","createToolbar","buttonlist","num","cont","button","linetick","mlArr","attributes","array","gLine","getHumanReadableDistance","R","clearMeasurements","_updateMeasurements","ml","_bPauseQuery","_hoveredSemNode","isOrbit","_queryDataUI","_queryDataSem","ls","_bStreamFocus","ss","Avatar","userid","username","message","_auTalk","PositionalAudio","setRefDistance","_bPlayingAudio","_auChunks","_tStateCall","_tProgress","_tFocCall","_currFocusPos","_tgtFocusPos","_currState","_tgtState","realize","setTalkDistance","getAvatarMaterialByUID","avaMats","usermaterial","smesh","usermeshnode","userauinode","uspritemats","userfpnode","ufocmats","userlabelnode","labelcontainer","usernametext","ucolors","usermessagetext","_focNodes","focGroup","destroy","loadRepresentation","setUsername","getUsername","setMessage","msg","setTalkVolume","vol","hideFocalPoint","requestFocus","fp","_tgtFocusRad","handleFocusTransition","D","USER_STATE_FREQ","requestStateTransition","handleStateTransition","cs","slerp","avol","_handleTalk","shift","onended","address","origin","initMaterials","socket","_connected","_username","_numUsers","avatarList","avaGroup","bSendState","setInterval","sendState","_lastStateSent","_bShowAvaG","enableChatLog","_elChat","getNumUsers","ucolorsdark","ucolorhex","MM","texAUI","smat","texFocP","sock","emit","REPLICATED_EVT","evhNetwork","isConnected","hasID","joinSession","ssid","requestSceneState","setAvatarsVisibility","protocol","secure","rejectUnauthorized","io","connected","_registerSocketHandlers","_onConnected","append","_msg","scrollTop","scrollHeight","numUsers","touchAvatar","decodeState","uname","isPlaying","stop","setLoop","encodeState","Float32Array","binData","Int8Array","w","view","a","setFocusStreaming","cpov","getSceneQueriedPoint","fx","fy","fz","lastPos","lastOri","dPos","dOri","angleTo","THRES_STATE_POS","THRES_STATE_ORI","getAvatar","destroyAvatar","clearAllAvatars","bConvexBuilding","convexPoints","convexNode","currConvexMesh","currSemNode","resetMaterial","_numShapes","currMaterial","pp","equals","numPoints","geom","ConvexGeometry","currSemesh","setVectorPrecision","pop","udMesh","offset","addConvexPoint","Object3D","FE","PATH_RES_ICONS","_bPopup","popupBlurBG","_userAuth","_bControlLight","_bControlSelScale","_cLightDir","_auSemNode","_auSemNodePlaying","_bReqHome","_vrcAddr","_bVRCsetup","urlParams","URLSearchParams","search","_uiSetupBase","_uiProfiles","_uiCurrProfile","_selRanges","_selRefRadius","uiSwitchButton","ddens","get","setDefaultPixelDensity","computeAndRequestDefaultHome","computeSelectorRanges","_handleHomeReq","addUpdateRoutine","_update","_kModCtrl","ff","getFOV","_kModShift","reqstr","PATH_RESTAPI_SCENE","attr","PATH_SCENES","sin","uiAddButton","toggleFullScreen","isConnectionSecure","popupClose","html","idcontainer","icon","onPress","tooltip","iconurl","iconid","slice","elid","el","addClass","removeClass","isFirstPerson","isDevOri","restorePreviousNavMode","popupNav","isAudioRecording","startMediaStreaming","popupQR","popupSceneInfo","isFullscreen","kwList","onAddKeyword","onRemoveKeyword","htmlcode","uiAttachInputFilterID","kwsObj","addKWtoBox","val","keypress","keycode","keyCode","which","getVRCclassFromID","checkAuth","sstate","popupVRC","_setupVRCevents","popupUser","uiFunction","idbutton","inputid","regReplace","RegExp","htmlcontent","chk","auLib","cssClasses","clstr","htcont","stopPropagation","fadeIn","POPUP_DELAY","_bListenKeyboardEvents","setPixelRatio","bNoAnim","resetPixelDensity","fadeOut","focusOn3DView","popupFunc","popupShow","QRCode","getElementById","cover","takeScreenshot","parseInt","postJSON","Object","keys","uip","setEditMode","goToURL","uiLoadProfile","password","head","getTitle","rad","hr","uiAddButtonFirstPerson","uiAddButtonDeviceOrientation","uiAddButtonVR","_bAudioRecording","_bStreaming","recorder","reset","mediaDevices","_ds","_streamChunk","auStreamInterval","getUserMedia","video","channelCount","echoCancellation","stream","RecordRTC","mimeType","auType","bitsPerSecond","auBitsPerSecond","audioBitsPerSecond","sampleRate","desiredSampRate","disableLogs","numberOfAudioChannels","onFinish","stopRecording","getDataURL","b64","compress","rblob","_auAVGvolume","realizeAudioRecorder","startRecording","getBlob","reader","FileReader","readAsDataURL","onloadend","base64data","result","_stopRecAndSend","GeoLoc","EARTH_D_KM","EARTH_R_KM","_bActive","_wpid","Vector2","_POIs","_currPOI","_closestPOI","_maxError","enableTracking","geolocation","watchPosition","_onPosition","_onError","enableHighAccuracy","disableTracking","clearWatch","setMaxError","coords","acc","accuracy","latitude","longitude","_handlePOIs","numPOIs","_closestPOIdist","POI","distance","getCurrentLocation","locationFromLatLon","lat","lon","distance_orig","latlonA","latlonB","dLat","DEG2RAD","dLon","atan2","asin","addPOI","getPOIbyIndex","getClosestPOI","getClosestPOIdistance","AppHub","_appid","_appdata","PATCH_ADD","wappid","fid","PATCH_DEL","_sendDataPatch","PATH_WAPPS","RAD2DEG","PATH_MODS","PATH_DRACO_LIB","PATH_BASIS_LIB","PATH_IFC_LIB","PATH_FE","SHADOWS_NEAR","SHADOWS_FAR","SHADOWS_SIZE","SHADOWS_RES","AMB_L","setPathCollection","setPathScenes","_onUserInteraction","_elPanoVideo","_vpanoPlaying","context","state","resume","_setupBaseListeners","onorientationchange","_readDeviceOrientationMode","screenfull","isEnabled","_bFS","_updateScreenMove","_onMouseWheel","_bPointerDown","_handleQueries","touches","Hammer","srcEvent","_hoveredUI","defaultDoubleTapFromScreenCoords","max","preventDefault","deltaY","focus","_SUIactivation","U","teleportOnQueriedPoint","playAudioFromSemanticNode","bFPtrans","currDir","feye","ftgt","hsn","requestPOVbyNode","requestRetarget","_handleQueryScene","profileDevice","Clock","WebGLRenderer","antialias","powerPreference","_fps","_dtAccum","_avgFPScount","_avgFPSaccum","_avgFPS","_bDynamicDensity","outputEncoding","toneMapping","LinearToneMapping","toneMappingExposure","setAnimationLoop","_onFrame","capabilities","getMaxAnisotropy","Cache","canvas","outline","border","_bUserInts","GLTFLoader","_dracoLoader","DRACOLoader","setDecoderPath","setDRACOLoader","_numReqLoad","_updRoutines","_bAutoLP","_envMapInt","_bShadowsFixedBound","_shadowsNear","_shadowsFar","_shadowsSize","_shadowsRes","initGraphs","_bQuerySemOcclusion","_bQueryNormals","_tgiDur","_tgiPer","_tHover","_bMainPanoInfinite","_matMainPano","_rcScene","Raycaster","_rcSemantics","_rcUI","_registerRCS","_wappID","setTimedGazeDuration","dt","getTimedGazeProgress","getElapsedTime","renderPause","renderResume","_setupLoadManager","_loadManager","LoadingManager","onStart","itemsLoaded","itemsTotal","onLoad","onProgress","onError","abs","getRootSemantics","getRootUI","adjustShadowsParamsFromSceneBounds","updateDirShadows","addLightProbe","_postAllReqsCompleted","updateLightProbes","autoUpdate","Scene","ambLight","AmbientLight","bg","setNeutralAmbientLight","_indLP","LightProbeGenerator","fromCubeRenderTarget","combine","AddOperation","envMapIntensity","tpano","_gMainPano","SphereBufferGeometry","frustumCulled","setMainPanoramaRadius","isVideo","innerHTML","crossOrigin","playsinline","cssText","autoplay","onplaying","VideoTexture","_realizeOrUpdateMainPano","onAfterRender","setMainPanoramaInfinite","setMainPanoramaLocation","DirectionalLight","_dMainLtgt","_dMainLpos","_dMainLdir","getMainLightDirection","ld","isMainLightEnabled","getExposure","camera","left","right","bottom","top","mapSize","bias","PCFShadowMap","PCFSoftShadowMap","_updateEnvironment","bLoop","_auMain","_markFPS","fps","getPixelRatio","getDelta","_updateAniMixers","_updateRoutines","_updateTSets","deleteAllUpdateRoutines","clientX","clientY","_rcRR","_rcHandlers","_handleQuerySemantics","_handleQueryUI","locomotionValidator","hitsnum","setupQueryRay","setFromCamera","_hitsScene","intersectObjects","face","Matrix3","getNormalMatrix","applyMatrix3","getSceneQueriedDistance","getSceneQueriedNormal","_hitsSem","sp","_hitsUI","hui"],"mappings":"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","file":"ATON.min.js","sourceRoot":"..\\src","sourcesContent":["/*\r\n    ATON Node Class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n//import Period from \"./ATON.period.js\";\r\n\r\n\r\n/**\r\nClass representing an ATON node.\r\nConstructor allows to create different types (scene nodes, semantic nodes and UI nodes)\r\n@class Node\r\n@example \r\nlet myNode = new ATON.Node(\"someID\")\r\n*/\r\nclass Node extends THREE.Group {\r\n\r\nconstructor(id, type){\r\n    super();\r\n\r\n    this.type = type? type : ATON.NTYPES.SCENE;\r\n    \r\n    this.enablePicking();\r\n\r\n    if (this.type === ATON.NTYPES.SCENE){\r\n        this._rootG = ATON._rootVisible;\r\n        this._nodes = ATON.snodes;\r\n        //this.period = undefined; // TODO: assign period object (read-only, centralized) - NOT USED FOR NOW\r\n    }\r\n    if (this.type === ATON.NTYPES.SEM){\r\n        this._rootG = ATON._rootSem;\r\n        this._nodes = ATON.semnodes;\r\n        //this.period = undefined;\r\n    }\r\n\r\n    if (this.type === ATON.NTYPES.UI){\r\n        this._rootG = ATON._rootUI;\r\n        this._nodes = ATON.uinodes;\r\n    }\r\n\r\n    // Register\r\n    this.as(id);\r\n\r\n    this.kwords = undefined;\r\n\r\n    this._bCloneOnLoadHit = true;\r\n\r\n    // Transform list (instancing)\r\n    this._tlist = undefined;\r\n\r\n    // Animation mixers\r\n    this._aniMixers = undefined;\r\n\r\n    // Shadows\r\n    this.castShadow    = false;\r\n    this.receiveShadow = false;\r\n\r\n    // Local handlers\r\n    this.onHover  = undefined;\r\n    this.onLeave  = undefined;\r\n    this.onSelect = undefined;\r\n}\r\n\r\n/**\r\n(Re)assign node ID\r\n@param {string} id - the new ID\r\n@example\r\nmyNode.as(\"newID\")\r\n*/\r\nas(id){\r\n    if (id === undefined) return;\r\n    if (id === ATON.ROOT_NID) return;\r\n\r\n    this._nodes[id] = this;\r\n    this.nid  = id;\r\n    this.name = id;\r\n\r\n    return this;\r\n}\r\n\r\nsetAsRoot(){\r\n    this._nodes[ATON.ROOT_NID] = this;\r\n    this.nid = ATON.ROOT_NID;\r\n\r\n    return this;\r\n}\r\n\r\nsetCloneOnLoadHit(b){\r\n    this._bCloneOnLoadHit = b;\r\n    return this;\r\n}\r\n\r\n/**\r\nAdd keyword(s) to this node. Keywords are also recursively added into the sub-graph\r\n@param {string} kw - the keyword or comma-separated list of keywords\r\n@example\r\nmyNode.addKeywords(\"heritage,reconstruction\");\r\n*/\r\naddKeywords(kw){\r\n    let K = kw.split(\",\");\r\n\r\n    if (this.kwords === undefined) this.kwords = {};\r\n    for (let k in K){\r\n        let kw = K[k].trim();\r\n        if (kw.length > 0) this.kwords[kw] = true;\r\n    }\r\n\r\n    // recurse into ATON nodes\r\n    for (let c in this.children){\r\n        let C = this.children[c];\r\n        if (C.type !== undefined) C.addKeywords(kw);\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nReturns true if this node has specific keyword\r\n@param {string} kw - the keyword\r\n@returns {boolean}\r\n@example\r\nif (myNode.hasKeyword(\"heritage\")){ ... }\r\n*/\r\nhasKeyword(kw){\r\n    if (this.kwords === undefined) return;\r\n    return (this.kwords[kw] !== undefined);\r\n}\r\n\r\n/**\r\nSet custom description (string) to the node\r\n@param {string} s - content\r\n@example\r\nmyNode.setDescription(\"This is a small description\");\r\n*/\r\nsetDescription(s){\r\n    this.userData.description = s;\r\n    return this;\r\n}\r\n\r\n/**\r\nGet node description (string) if any\r\n@returns {string}\r\n@example\r\nlet desc = myNode.getDescription();\r\n*/\r\ngetDescription(){\r\n    return this.userData.description;\r\n}\r\n\r\nsetAudio(au){\r\n    this.userData.audio = au;\r\n    return this;\r\n}\r\n\r\ngetAudio(){\r\n    return this.userData.audio;\r\n}\r\n\r\n/**\r\nHide this node (and sub-graph), also invisible to queries (ray casting, picking)\r\n@example\r\nmyNode.hide()\r\n*/\r\nhide(){\r\n    this.visible = false;\r\n\r\n    //this.traverse((o) => { o.layers.disable(this.type); });\r\n    ATON.Utils.setPicking(this, this.type, false);\r\n\r\n    if (ATON._renderer.shadowMap.enabled){\r\n        ATON._dMainL.shadow.needsUpdate = true;\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nShow this node (and sub-graph). If pickable, becomes sensible to queries (ray casting)\r\n@example\r\nmyNode.show()\r\n*/\r\nshow(){\r\n    this.visible = true;\r\n\r\n    //if (this.bPickable) ATON.Utils.setPicking(this, this.type, true); //this.traverse((o) => { o.layers.enable(this.type); });\r\n    ATON.Utils.setPicking(this, this.type, this.bPickable);\r\n\r\n    if (ATON._renderer.shadowMap.enabled){\r\n        ATON._dMainL.shadow.needsUpdate = true;\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nToggle node visibility. If visible, becomes invisible, and viceversa.\r\n@example\r\nmyNode.toggle()\r\n*/\r\ntoggle(b){\r\n    if (b === undefined){\r\n        if (this.visible) return this.hide();\r\n        else return this.show();\r\n    }\r\n\r\n    if (b) return this.show();\r\n    else return this.hide();\r\n}\r\n\r\n/**\r\nDisable this node for runtime queries (ray casters). Useful for instance on vegetation, etc...\r\n@example\r\nmyNode.load(\"somevegetation.gltf\").disablePicking()\r\n*/\r\ndisablePicking(){\r\n    this.bPickable = false;\r\n    ATON.Utils.setPicking(this, this.type, this.bPickable);\r\n\r\n    return this;  \r\n}\r\n\r\n/**\r\nEnable this node for runtime queries (ray casters)\r\n@example\r\nmyNode.enablePicking()\r\n*/\r\nenablePicking(){\r\n    this.bPickable = true;\r\n    ATON.Utils.setPicking(this, this.type, this.bPickable);\r\n\r\n    return this;\r\n}\r\n\r\nsetPickable(b){\r\n    if (b) this.enablePicking();\r\n    else this.disablePicking();\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet cascading material. Note this applies to this node and all children (even all those still loading)\r\n@param {THREE.Material} M - the Material\r\n@example\r\nmyNode.setMaterial( new THREE.MeshBasicMaterial({ transparent: true, opacity: 0.2, wireframe: true }) )\r\n*/\r\nsetMaterial(M){\r\n    this.userData.cMat = M;\r\n\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n            o.material = M;\r\n            ///o.material.needsUpdate = true;\r\n            //console.log(o);\r\n        }\r\n\r\n        if (o.type) this.userData.cMat = M;\r\n    });\r\n\r\n    // children\r\n    for (let c in this.children){\r\n        let C = this.children[c];\r\n        if (C.setMaterial) C.setMaterial(M);\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\n/** \r\nGet cascading material\r\n@returns {THREE.Material}\r\n*/\r\ngetMaterial(){\r\n    return this.userData.cMat;\r\n}\r\n\r\n// Set default and highlight materials\r\nsetDefaultAndHighlightMaterials(matSTD, matHL){\r\n    this.userData.matSTD = matSTD;\r\n    this.userData.matHL  = matHL;\r\n\r\n    return this;\r\n}\r\nhighlight(){\r\n    if (this.userData.matHL) this.setMaterial(this.userData.matHL);\r\n    return this;\r\n}\r\nrestoreDefaultMaterial(){\r\n    if (this.userData.matSTD) this.setMaterial(this.userData.matSTD);\r\n    return this;\r\n}\r\n\r\n// Set cascading opacity\r\nsetOpacity(f){\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n            o.material.opacity = f;\r\n            //o.material.needsUpdate = true;\r\n        }\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\n// FIXME: not working\r\nsetShadowCast(b){\r\n    this.castShadow = b;\r\n\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n            o.castShadow = b;\r\n        }\r\n    });\r\n\r\n    return this;\r\n};\r\nsetShadowReceive(b){\r\n    this.receiveShadow = b;\r\n\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n            o.receiveShadow = b;\r\n        }\r\n    });\r\n\r\n    return this;\r\n};\r\n\r\nsetEnvMap(envtex){\r\n    this.traverse((o) => {\r\n        if (o.isMesh){\r\n\t\t\to.material.envMap  = envtex;\r\n\t\t\t//o.material.combine = THREE.MultiplyOperation;\r\n            //o.material.needsUpdate = true;\r\n        }\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\nassignLightProbe(LP){\r\n    this.traverse((o) => {\r\n        if (o.isMesh && o.geometry) ATON.Utils.assignLightProbeToMesh(LP, o);\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\n// (re)assign LPs for each mesh depending on proximity\r\nassignLightProbesByProximity(){\r\n    if (ATON._lps.length === 0) return this;\r\n\r\n    this.traverse((o) => {\r\n        if (o.isMesh && o.geometry){\r\n            let c = new THREE.Vector3();\r\n            let bbox = new THREE.Box3().setFromObject(o).getCenter(c);\r\n\r\n            let cLP   = undefined;\r\n            let mdist = undefined;\r\n\r\n            for (let i in ATON._lps){\r\n                let LP = ATON._lps[i];\r\n                let d = c.distanceToSquared(LP.pos);\r\n\r\n                if (cLP === undefined || d < mdist){\r\n                    mdist = d;\r\n                    cLP = LP;\r\n                }\r\n            }\r\n\r\n            if (cLP) ATON.Utils.assignLightProbeToMesh(cLP, o);\r\n        }\r\n    });\r\n\r\n    return this;\r\n};\r\n\r\n// Find & update all LPs under this subgraph\r\n// FIXME: not working\r\nupdateLightProbes = ()=>{\r\n    this.traverse((o) => {\r\n        if (o.isMesh && o.geometry){\r\n            let LP = o.userData.LP;\r\n\r\n            if (LP !== undefined){\r\n                LP.update();\r\n                o.material.envMap = LP.getEnvTex();\r\n                //o.material.envMapIntensity = 5.0;\r\n                //console.log(\"x\");\r\n            }\r\n        }\r\n    });\r\n\r\n    return this;\r\n};\r\n\r\n// Deep clone\r\nduplicate(){\r\n    let C = this.clone();\r\n\r\n    C.traverse((o)=>{\r\n        if (o.isMesh){\r\n            o.material = o.material.clone();\r\n        }\r\n    });\r\n\r\n    return C;\r\n}\r\n\r\n\r\n// FIXME: xxx\r\ndelete(){\r\n    let p = this.parent;\r\n\r\n    if (p !== undefined && p.nid !== undefined) p.removeChild( this );\r\n}\r\n\r\nremoveChild(c){\r\n    if (c === undefined) return;\r\n\r\n    let nid = c.nid;\r\n    if (c.nid !== undefined) this._nodes[c.nid] = undefined;\r\n\r\n    c.parent = undefined;\r\n\r\n    c.traverse((o) => {\r\n        if (o.geometry) o.geometry.dispose();\r\n        if (o.material) o.material.dispose();\r\n    });\r\n\r\n    this.remove(c);\r\n\r\n    return this;\r\n}\r\n/**\r\nDelete all children of this node\r\n*/\r\nremoveChildren(){\r\n    let num = this.children.length;\r\n    for (let i=(num-1); i>=0; i--) this.removeChild(this.children[i]);\r\n\r\n    return this;\r\n}\r\n\r\n\r\n/**\r\nAttach this node to parent by providing ID (string) or node object\r\n@param {string|Node} node - the parent node\r\n@example\r\nmyNode.attachTo(\"someGroupID\")\r\n@example\r\nmyNode.attachTo(myParentGroup)\r\n*/\r\nattachTo(node){\r\n    let N = (typeof node === 'string')? this._nodes[node] : node;\r\n    if (N){\r\n        N.add(this);\r\n        if (N.userData.cMat !== undefined) this.userData.cMat = N.userData.cMat; // this.setMaterial(N.userData.cMat);\r\n        if (N.bPickable !== undefined) this.bPickable = N.bPickable;\r\n\r\n        //this.toggle(N.visible);\r\n    }\r\n    \r\n    return N;\r\n}\r\n\r\n/**\r\nAttach this node to main root. This is usually mandatory in order to visualize the node and all its descendants.\r\nDepending on node type this will be the scene root (visible scene-graph), the semantic-graph root or UI root\r\n@example\r\nmyNode.attachToRoot()\r\n*/\r\nattachToRoot(){\r\n    this._rootG.add(this);\r\n    if (this._rootG.userData.cMat !== undefined) this.userData.cMat = this._rootG.userData.cMat;\r\n    if (this._rootG.bPickable !== undefined) this.bPickable = this._rootG.bPickable;\r\n\r\n    //this.toggle(this._rootG.visible);\r\n    \r\n    return this._rootG;\r\n}\r\n\r\n/**\r\nReturn bounding sphere of this node\r\n@returns {THREE.Sphere}\r\n@example\r\nlet bs = myNode.getBound()\r\n*/\r\ngetBound(){\r\n    let bb = new THREE.Box3().setFromObject( this );\r\n    let bs = new THREE.Sphere();\r\n    bb.getBoundingSphere(bs);\r\n\r\n    return bs;\r\n}\r\n\r\n/**\r\nSet location (translation) of this node\r\n@example\r\nmyNode.setPosition(1.0,3.0,0.0)\r\n@example\r\nmyNode.setPosition( new THREE.Vector3(1.0,3.0,0.0) )\r\n*/\r\nsetPosition(x,y,z){\r\n    if (x instanceof THREE.Vector3) this.position.copy(x);\r\n    else this.position.set(x,y,z);\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet scale of this node\r\n@example\r\nmyNode.setScale(3.0,2.0,1.0)\r\n@example\r\nmyNode.setScale(2.0)\r\n@example\r\nmyNode.setScale( new THREE.Vector3(3.0,2.0,1.0) )\r\n*/\r\nsetScale(sx,sy,sz){\r\n    if (sx instanceof THREE.Vector3) this.scale.copy(sx);\r\n    else {\r\n        if (sy === undefined){ sy = sx; sz = sx; }\r\n        this.scale.set(sx,sy,sz);\r\n        }\r\n    \r\n    return this;\r\n}\r\n\r\n/**\r\nSet rotation of this node (Euler rx,ry,rz) in radians\r\n@example\r\nmyNode.setRotation(3.0,2.0,1.0)\r\n@example\r\nmyNode.setRotation( new THREE.Vector3(3.0,2.0,1.0) )\r\n*/\r\nsetRotation(rx,ry,rz){\r\n    if (rx instanceof THREE.Vector3) this.rotation.copy(rx);\r\n    else this.rotation.set(rx,ry,rz);\r\n    \r\n    return this;\r\n}\r\n/**\r\nOrient this node to current camera\r\n*/\r\norientToCamera(){\r\n    this.quaternion.copy( ATON.Nav._qOri );\r\n    return this;\r\n}\r\n\r\nsetYup(){\r\n    this.rotation.set(-1.57079632679,0.0,0.0);\r\n    return this;  \r\n}\r\n\r\n/**\r\nAdd a transform for this node.\r\nAdding multiple transforms before loading a 3D model will result in instancing these resources\r\n@param {string} T - the transform string to be added\r\n@example\r\nmyNode.addTransform(\"10 0 0\").addTransform(\"-5 0 0\").load(\"mymodel.gltf\").attachToRoot()\r\n*/\r\naddTransform(T){\r\n    let TT = undefined;\r\n\r\n    if (typeof T === \"string\"){\r\n        TT = ATON.Utils.parseTransformString(T);\r\n    }\r\n\r\n    if (TT === undefined) return this;\r\n\r\n    if (this._tlist === undefined) this._tlist = [];\r\n    this._tlist.push(TT);\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nLoad a 3D model under this node, with optional onComplete handler.\r\nNote the system will take care of loading the resources in background, and will manage duplicate requests to same resources avoiding waste of bandwidth\r\n@param {string} url - the url of the 3D model (local to collection or complete)\r\n@param {function} onComplete - the optional handler to be fired on completion\r\n@example\r\nmyNode.load(\"mymodel.gltf\", ()=>{ console.log(\"completed!\") })\r\n*/\r\nload(url, onComplete){\r\n    if (url === undefined) return this;\r\n\r\n    url = ATON.Utils.resolveCollectionURL(url);\r\n\r\n    let N = this;\r\n\r\n    if (url.endsWith(\"tileset.json\")){\r\n        ATON.Utils.loadTileSet(url, N);\r\n        ATON._bqScene = true;\r\n        if (onComplete) onComplete();\r\n        return N;\r\n    }\r\n\r\n    // [C] Promise already requested\r\n    if ( N._bCloneOnLoadHit && ATON._assetsManager[url] !== undefined ){\r\n        ATON._assetsManager[url].then(( o ) =>{\r\n            let C = o.clone();\r\n\r\n            ATON.Utils.modelVisitor(N, C);\r\n            \r\n            if (N._tlist !== undefined){\r\n                for (let t in N._tlist){\r\n                    N._tlist[t].add(C.clone());\r\n                    N.add(N._tlist[t]);\r\n                }\r\n            }\r\n            else N.add( C );\r\n\r\n            // animations\r\n            //ATON.Utils.registerAniMixers(N, data);\r\n\r\n            //N.setPickable(N.bPickable);\r\n            //N.toggle(N.visible);\r\n\r\n            if (onComplete) onComplete();\r\n        });\r\n\r\n        console.log(\"HIT!\");\r\n        return N;\r\n    }\r\n\r\n    // Fire request\r\n    /*if (N.type === ATON.NTYPES.SCENE)*/ ATON._assetReqNew(url);\r\n\r\n    let P = new Promise( ( resolve, reject ) => {\r\n        ATON._aLoader.load( url, (data)=>{\r\n            let model = data.scene || data.scene[0];\r\n\r\n            // Visit loaded model\r\n            ATON.Utils.modelVisitor(N, model);\r\n\r\n            if (N._tlist !== undefined){\r\n                for (let t in N._tlist){\r\n                    N._tlist[t].add(model.clone());\r\n                    N.add(N._tlist[t]);\r\n                }\r\n            }\r\n            else N.add( model );\r\n\r\n            // animations\r\n            ATON.Utils.registerAniMixers(N, data);\r\n\r\n            // CC manager\r\n            ATON.Utils.ccExtract(data);\r\n\r\n            resolve(model);\r\n            console.log(\"Model \"+url+\" loaded\");\r\n            \r\n            /*if (N.type === ATON.NTYPES.SCENE)*/ ATON._assetReqComplete(url);\r\n\r\n            // post-visit (FIXME:)\r\n            //N.setPickable(N.bPickable);\r\n            //N.toggle(N.visible);\r\n\r\n            if (N.type === ATON.NTYPES.SCENE) ATON._bqScene = true;\r\n            if (N.type === ATON.NTYPES.SEM)   ATON._bqSem = true;\r\n\r\n            //\r\n            if (N.bPickable) N.enablePicking();\r\n\r\n            if (onComplete) onComplete();\r\n        },\r\n        undefined,\r\n        (err)=>{\r\n            //console.log(err);\r\n            //reject(model);\r\n\r\n            /*if (N.type === ATON.NTYPES.SCENE)*/ ATON._assetReqComplete(url);\r\n            if (onComplete) onComplete();\r\n        });\r\n\r\n/*\r\n        ATON._aLoader.load( url+\"__LOD2-d.gltf\", (data)=>{\r\n            let model = data.scene || data.scene[0];\r\n            ATON._modelVisitor(model);\r\n\r\n            let C = new THREE.Vector3();\r\n            let bb = new THREE.Box3().setFromObject( model ).getCenter(C);\r\n            model.position.set(-C.x,-C.y,-C.z);\r\n\r\n            let lod = new THREE.LOD();\r\n            lod.position.set(C.x,C.y,C.z);\r\n            lod.matrixAutoUpdate = true;\r\n            lod.addLevel(model, 40.0);\r\n            N.add(lod);\r\n\r\n            //N.add( model );\r\n\r\n            resolve(model);\r\n            console.log(\"ATON model \"+url+\" loaded\");\r\n\r\n            ATON._aLoader.load( url+\"__LOD1-d.gltf\", (data2)=>{\r\n                let model2 = data2.scene || data2.scene[0];\r\n                ATON._modelVisitor(model2);\r\n\r\n                model2.position.set(-C.x,-C.y,-C.z);\r\n                \r\n                lod.addLevel(model2, 0.0);\r\n            });\r\n            \r\n            ATON._assetReqComplete(url);\r\n        });\r\n*/\r\n    });\r\n\r\n    // Register\r\n    if (N._bCloneOnLoadHit) ATON._assetsManager[url] = P;\r\n\r\n    return this;\r\n}\r\n\r\nexportAs( filename ){\r\n    ATON.Utils.exportNode(this, filename);\r\n\r\n    return this;\r\n}\r\n\r\nsetOnHover( h ){\r\n    this.onHover = f;\r\n    return this;\r\n}\r\nsetOnLeave( h ){\r\n    this.onLeave = f;\r\n    return this;\r\n}\r\nsetOnSelect( h ){\r\n    this.onSelect = f;\r\n    return this;\r\n}\r\n\r\n// Assign a period to this node\r\n// TODO: \r\n/*\r\nsetPeriod(p){\r\n    if (this.type === ATON.NTYPES.UI) return this; // not on UI nodes\r\n\r\n    let P = (typeof p === 'string')? ATON.periods[p] : p;\r\n    if (P === undefined) return this;\r\n\r\n    this.period = P;\r\n    return this;\r\n}\r\n\r\nfilterByPeriodID(id){\r\n    if (this.period === undefined) return this;\r\n\r\n    if (this.period.id !== id){\r\n        this.hide();\r\n        return this;\r\n        }\r\n    else {\r\n        this.show();\r\n        return this;\r\n    }\r\n\r\n    this.traverse((o) => {\r\n        if (o.period){\r\n            if (o.period.id === id) this.show();\r\n            else this.hide();\r\n        }\r\n    });\r\n\r\n    return this;\r\n}\r\n*/\r\n\r\n}\r\n\r\nexport default Node;","/*\r\n    ATON Viewpoint Class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nClass representing a Viewpoint (POV) in the 3D space, abstracting from device used (mobile, desktop or immersive XR).\r\nConstructor allows to assign the POV a unique ID (`string`)\r\n@class POV\r\n@example \r\nnew ATON.POV(\"myView\")\r\n*/\r\nclass POV {\r\n\r\nconstructor(id){\r\n    this.pos    = new THREE.Vector3(1,0,0);\r\n    this.target = new THREE.Vector3(0,0,0);\r\n    this.up     = ATON.STD_UPVECTOR;\r\n    this.fov    = undefined; //ATON.Nav.STD_FOV;\r\n\r\n    this.nextPOV = undefined;\r\n    this.prevPOV = undefined;\r\n\r\n    // Register\r\n    this.as(id);\r\n}\r\n\r\n/**\r\n(Re)assign POV ID\r\n@param {string} id - the new ID\r\n@example\r\nmypov.as(\"newID\")\r\n*/\r\nas(id){\r\n    if (id === undefined) return;\r\n\r\n    ATON.Nav.povlist[id] = this;\r\n    this.id = id;\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet eye position\r\n@example\r\nnew ATON.POV(\"myView\").setPosition(2.0,6.0,1.5)\r\n@example\r\nmypov.setPosition( new THREE.Vector3(2.0,6.0,1.5) )\r\n*/\r\nsetPosition(x,y,z){\r\n    if (x instanceof THREE.Vector3) this.pos.copy(x);\r\n    else this.pos.set(x,y,z);\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet target position\r\n@example\r\nnew ATON.POV(\"myView\").setTarget(8.0,6.0,1.5)\r\n@example\r\nmypov.setTarget( new THREE.Vector3(8.0,6.0,1.5) ).setPosition(2.0,6.0,1.5)\r\n*/\r\nsetTarget(x,y,z){\r\n    if (x instanceof THREE.Vector3) this.target.copy(x);\r\n    else this.target.set(x,y,z);\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet field of view (FOV) in degrees\r\n@param {number} f\r\n@example\r\nnew ATON.POV(\"myView\").setFOV(70.0)\r\n*/\r\nsetFOV(f){\r\n    this.fov = f;\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nAdd keyword(s) to this viewpoint\r\n@param {string} kw - a keyword or comma-separated list of keywords\r\n@example\r\nmypov.addKeywords(\"heritage,architecture\")\r\n*/\r\naddKeywords(kw){\r\n    let K = kw.split(\",\");\r\n\r\n    if (this.kwords === undefined) this.kwords = {};\r\n    for (let k in K){\r\n        let kw = K[k].trim();\r\n        if (kw.length > 0) this.kwords[kw] = true;\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nReturns true if this viewpoint has specific keyword\r\n@param {string} kw - the keyword\r\n@returns {boolean}\r\n@example\r\nif (myPOV.hasKeyword(\"heritage\")){ ... }\r\n*/\r\nhasKeyword(kw){\r\n    if (this.kwords === undefined) return;\r\n    return (this.kwords[kw] !== undefined);\r\n}\r\n\r\n/**\r\nSet an optional next POV\r\n@param {POV} pov - the next POV\r\n*/\r\nsetNextPOV(pov){\r\n    if (!pov) return;\r\n    this.nextPOV = pov;\r\n\r\n    return this;\r\n}\r\n\r\n/**\r\nSet an optional previous POV\r\n@param {POV} pov - the previous POV\r\n*/\r\nsetPrevPOV(pov){\r\n    if (!pov) return;\r\n    this.prevPOV = pov;\r\n\r\n    return this;\r\n}\r\n\r\n}\r\n\r\nexport default POV;","/*\r\n    ATON Light Probe Class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nClass representing a light probe (LP), can be static or updated at runtime\r\n@class LightProbe\r\n@param {number} res - Resolution in pixel of lightprobe (default 64)\r\n@param {number} near - Capture near (default 1m)\r\n@param {number} far - Capture far (default 1Km)\r\n@example \r\nlet LP = new ATON.LightProbe()\r\n*/\r\nclass LightProbe {\r\n\r\nconstructor(res, near, far){\r\n    this.pos = new THREE.Vector3(0,0,0);\r\n\r\n    this._res  = (res !== undefined)?  res  : 64;\r\n    this._near = (near !== undefined)? near : 1.0;\r\n    this._far  = (far !== undefined)?  far  : ATON.Nav.STD_FAR;\r\n/*\r\n    this._LPtarget0 = undefined;\r\n    this._LPtarget1 = undefined;\r\n\r\n    this._LP0 = undefined;\r\n    this._LP1 = undefined;\r\n\r\n    this._flipLP = false;\r\n*/\r\n    this._envtex = undefined;\r\n    this._prevCCtarget = undefined;\r\n/*\r\n    this._LP = new THREE.LightProbe();\r\n    this._LP.intensity = 10;\r\n    ATON._mainRoot.add( this._LP );\r\n*/\r\n    \r\n    //this._pmremGenerator = new THREE.PMREMGenerator(ATON._renderer);\r\n\r\n    //this.realize();\r\n}\r\n\r\n/*\r\nrealize(){\r\n    this._LPtarget0 = new THREE.WebGLCubeRenderTarget( this._res, {\r\n        format: THREE.RGBFormat,\r\n        generateMipmaps: true,\r\n        minFilter: THREE.LinearMipmapLinearFilter,\r\n        encoding: THREE.sRGBEncoding // prevent the material's shader from recompiling every frame\r\n    });\r\n\r\n    this._LPtarget1 = new THREE.WebGLCubeRenderTarget( this._res, {\r\n        format: THREE.RGBFormat,\r\n        generateMipmaps: true,\r\n        minFilter: THREE.LinearMipmapLinearFilter,\r\n        encoding: THREE.sRGBEncoding\r\n    });\r\n\r\n    this._LP0 = new THREE.CubeCamera( this._near, this._far, this._LPtarget0 );\r\n    this._LP1 = new THREE.CubeCamera( this._near, this._far, this._LPtarget1 );\r\n\r\n    return this;\r\n}\r\n*/\r\n\r\n/**\r\nSet LP position\r\n@example\r\nLP.setPosition(2.0,6.0,1.5)\r\n@example\r\nLP.setPosition( new THREE.Vector3(2.0,6.0,1.5) )\r\n*/\r\nsetPosition(x,y,z){\r\n    if (x instanceof THREE.Vector3) this.pos.copy(x);\r\n    else this.pos.set(x,y,z);\r\n\r\n    //this._LP.position.copy(this.pos);\r\n\r\n    return this;\r\n}\r\n\r\nsetNear(near){\r\n    this._near = near;\r\n    return this;\r\n}\r\nsetFar(far){ \r\n    this._far = far;\r\n    return this;\r\n}\r\n\r\n/**\r\nUpdate LP capture. Typically called when all 3D models are loaded and arranged into the scene.\r\nCan be called at runtime or whenever there is some change in the 3D scene\r\n@example\r\nLP.update()\r\n*/\r\nupdate(){\r\n    if (this._envtex) this._envtex.dispose();\r\n    if (this._prevCCtarget) this._prevCCtarget.dispose();\r\n\r\n    let CCtarget = new THREE.WebGLCubeRenderTarget( this._res, {\r\n        format: THREE.RGBEFormat, //THREE.RGBEFormat,\r\n        generateMipmaps: true,\r\n        minFilter: THREE.LinearMipmapLinearFilter,\r\n        encoding: THREE.sRGBEncoding // prevent the material's shader from recompiling every frame\r\n    });\r\n\r\n    let CC = new THREE.CubeCamera( this._near, this._far, CCtarget );\r\n    CC.position.copy(this.pos);\r\n    //CC.layers.set(ATON.NTYPES.SCENE);\r\n\r\n    CC.update( ATON._renderer, ATON._rootVisibleGlobal/*ATON._mainRoot*/ );\r\n    this._envtex = CCtarget.texture;\r\n\r\n    // new\r\n    //this._LP.copy( THREE.LightProbeGenerator.fromCubeRenderTarget(ATON._renderer, CCtarget) );\r\n    //this._envtex = this._LP;\r\n    \r\n    \r\n/*\r\n    console.log(CC);\r\n    console.log(CCtarget);\r\n\r\n    let CCtargetX = new THREE.WebGLCubeRenderTarget( this._res, {\r\n        format: THREE.RGBFormat,\r\n        //generateMipmaps: true,\r\n        minFilter: THREE.LinearMipmapLinearFilter,\r\n        encoding: THREE.sRGBEncoding\r\n    });\r\n\r\n    let CCX = new THREE.CubeCamera( this._near, this._far, CCtargetX );\r\n    CCX.position.copy(this.pos);\r\n\r\n    CCX.update( ATON._renderer, ATON._rootVisible );\r\n    this._envtex = this._pmremGenerator.fromCubemap(CCtargetX.texture).texture;\r\n*/\r\n\r\n    this._prevCCtarget = CCtarget;\r\n\r\n\r\n/*\r\n    if (this._LP0 === undefined || this._LP1 === undefined) return this;\r\n\r\n    this._flipLP = !this._flipLP;\r\n    //ATON._flipLP = !ATON._flipLP;\r\n\r\n    if (this._flipLP){\r\n        this._LP0.update( ATON._renderer, ATON._mainRoot );\r\n        this._envtex = this._LPtarget0.texture;\r\n    }\r\n    else {\r\n        this._LP1.update( ATON._renderer, ATON._mainRoot );\r\n        this._envtex = this._LPtarget1.texture;\r\n    }\r\n*/\r\n    return this;\r\n}\r\n\r\n\r\ngetEnvTex(){\r\n    return this._envtex;\r\n}\r\n\r\nassignToNode(N){\r\n    if (N === undefined) return;\r\n    //TODO:\r\n}\r\n\r\n}\r\n\r\nexport default LightProbe;","/*\r\n    ATON Event Hub\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Event Hub\r\n@namespace EventHub\r\n*/\r\nlet EventHub = {};\r\n\r\n//Initializes the component\r\nEventHub.init = ()=>{\r\n\r\n    EventHub.evLocal   = {};\r\n    EventHub.evNetwork = {};\r\n\r\n    // Expose\r\n    ATON.on                 = EventHub.on;\r\n    ATON.fireEvent          = EventHub.fireEvent;\r\n    ATON.clearEventHandlers = EventHub.clearEventHandlers\r\n};\r\n\r\n/**\r\nClear all event handlers for a given event\r\n@param {string} evtname - event name\r\n*/\r\nEventHub.clearEventHandlers = (evtname)=>{\r\n    EventHub.evLocal[evtname]   = [];\r\n    EventHub.evNetwork[evtname] = [];\r\n};\r\n\r\n// Execute all handlers from list with given data\r\nEventHub.executeHandlers = (ehList, data)=>{\r\n    if (!ehList) return;\r\n\r\n    for (let h = 0; h < ehList.length; h++) {\r\n        const handler = ehList[h];\r\n        if (handler) handler(data);\r\n    }\r\n};\r\n\r\n/**\r\nSubscribe to a given event, with local handler and optional network handler.\r\nThis is also accessible as ATON.on()\r\n@param {string} evtname - event name\r\n@param {function} handlerLocal - local event handler\r\n@param {function} handlerNetwork - optional network (see VRoadcast) event handler\r\n@example\r\nATON.EventHub.on(\"myEvent\", function(data){ console.log(\"received local event\"); })\r\n@example\r\nATON.on(\"myEvent\", function(data){ console.log(\"received local event\"); })\r\n*/\r\nEventHub.on = (evtname, handlerLocal, handlerNetwork)=>{\r\n    // Local event (default)\r\n    if (handlerLocal !== undefined){\r\n        const evhLocal = EventHub.evLocal;\r\n\r\n        if (evhLocal[evtname] === undefined) evhLocal[evtname] = []; // First time (event not registered)\r\n        evhLocal[evtname].push(handlerLocal);\r\n    }\r\n\r\n    // Received event (network)\r\n    if (handlerNetwork !== undefined){\r\n        ATON.VRoadcast.on(evtname, handlerNetwork);\r\n    }\r\n\r\n};\r\n\r\n/**\r\nFire a local (and optionally network) event, with data.\r\nThis is also accessible as ATON.fireEvent()\r\n@param {string} evtname - event name\r\n@param {object} data - object containing data to be transmitted with this event\r\n@param {bool} bReplicate - if true, it will replicate (broadcast) the event to other connected peers in the same scene (see VRoadcast)\r\n@example\r\nATON.EventHub.fireEvent(\"myEvent\", data)\r\n@example\r\nATON.fireEvent(\"myEvent\", data)\r\n*/\r\nEventHub.fireEvent = (evtname, data, bReplicate)=>{\r\n    const ehList = EventHub.evLocal[evtname];\r\n    EventHub.executeHandlers(ehList, data);\r\n\r\n    if (!bReplicate) return;\r\n    ATON.VRoadcast.fireEvent(evtname, data);\r\n};\r\n\r\nexport default EventHub;","/*\r\n    ATON Materials Hub\r\n    Centralized material manager\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Material Hub\r\n@namespace MatHub\r\n*/\r\nlet MatHub = {};\r\n\r\nMatHub.init = ()=>{\r\n    MatHub.materials = {};\r\n    MatHub.colors    = {};\r\n\r\n    MatHub._loader = new THREE.MaterialLoader();\r\n\r\n    // Uniforms\r\n    MatHub._uSem = {\r\n        time: { type:'float', value: 0.0 },\r\n        tint: { type:'vec4', value: new THREE.Vector4(0.2,0.2,1.0, 0.2) }\r\n    };\r\n\r\n    MatHub.addDefaults();\r\n};\r\n\r\nMatHub.getDefVertexShader = ()=>{\r\n    return `\r\n        varying vec3 vPositionW;\r\n        varying vec3 vNormalW;\r\n        varying vec3 vNormalV;\r\n\r\n        void main(){\r\n            vPositionW = vec3( vec4( position, 1.0 ) * modelMatrix);\r\n            vNormalW   = normalize( vec3( vec4( normal, 0.0 ) * modelMatrix ) );\r\n            vNormalV   = normalize( vec3( normalMatrix * normal ));\r\n\r\n            gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n        }\r\n    `;\r\n};\r\n\r\nMatHub.addDefaults = ()=>{\r\n\r\n    // Colors\r\n    MatHub.colors.white  = new THREE.Color(1,1,1);\r\n    MatHub.colors.black  = new THREE.Color(0,0,0);\r\n    MatHub.colors.green  = new THREE.Color(0,1,0);\r\n    MatHub.colors.yellow = new THREE.Color(1,1,0);\r\n    MatHub.colors.red    = new THREE.Color(1,0,0);\r\n    MatHub.colors.blue   = new THREE.Color(0,0,1);\r\n    MatHub.colors.orange = new THREE.Color(1,0.5,0);\r\n\r\n    MatHub.colors.defUI  = new THREE.Color(0,1,0.5);\r\n    \r\n    MatHub.colors.sem     = new THREE.Color(0,1,0.5);\r\n    MatHub.colors.darksem = new THREE.Color(0,0,0.1);\r\n\r\n    // Materials\r\n    MatHub.materials.fullyTransparent = new THREE.MeshBasicMaterial({ \r\n        transparent: true, \r\n        depthWrite: false, \r\n        opacity: 0.0\r\n    });\r\n\r\n    // Default UI\r\n    MatHub.materials.defUI = new THREE.ShaderMaterial({\r\n        uniforms: {\r\n            color: { type:'vec3', value: MatHub.colors.defUI },\r\n            opacity: { type:'float', value: 0.8 }\r\n        },\r\n\r\n        vertexShader: MatHub.getDefVertexShader(),\r\n        fragmentShader:`\r\n            varying vec3 vPositionW;\r\n\t\t    varying vec3 vNormalW;\r\n            varying vec3 vNormalV;\r\n            uniform vec3 color;\r\n            uniform float opacity;\r\n\r\n\t\t    void main(){\r\n\t\t        //vec3 viewDirectionW = normalize(cameraPosition - vPositionW);\r\n\r\n                float f;\r\n\t\t        //f = dot(viewDirectionW, vNormalW);\r\n                f = dot(vNormalV, vec3(0,0,1));\r\n\t\t        f = clamp(1.0 - f, 0.2, 1.0);\r\n\r\n\t\t        gl_FragColor = vec4(color.rgb, f * opacity);\r\n\t\t    }\r\n        `,\r\n        transparent: true,\r\n        depthWrite: false,\r\n    }); \r\n    \r\n    // Selector\r\n    MatHub.materials.selector = MatHub.materials.defUI.clone();\r\n\r\n/*\r\n    MatHub.materials.selector = new THREE.MeshBasicMaterial({\r\n        color: MatHub.colors.green,\r\n        transparent: true,\r\n        depthWrite: false,\r\n        opacity: 0.2 \r\n        //flatShading: true\r\n    });\r\n*/\r\n    // XR/VR ray\r\n    MatHub.materials.controllerRay = MatHub.materials.defUI.clone();\r\n    MatHub.materials.controllerRay.uniforms.color.value = MatHub.colors.white;\r\n/*\r\n    MatHub.materials.controllerRay = new THREE.MeshBasicMaterial({ \r\n        color: MatHub.colors.white, \r\n        transparent: true, \r\n        opacity: 0.2,\r\n        depthWrite: false\r\n        //flatShading: true\r\n    });\r\n*/\r\n    // Teleport locator\r\n    MatHub.materials.teleportLoc = new THREE.MeshBasicMaterial({ \r\n        transparent: true, \r\n        opacity: 1.0,\r\n        depthWrite: false,\r\n        //flatShading: true,\r\n        side: THREE.DoubleSide\r\n    });\r\n    ATON.Utils.textureLoader.load(ATON.PATH_RES+\"grad.png\", (texture) => {\r\n        MatHub.materials.teleportLoc.map = texture;\r\n    });\r\n\r\n    // Measurements\r\n    MatHub.materials.measurement = new THREE.MeshBasicMaterial({\r\n        color: MatHub.colors.white,\r\n        //linewidth: 5,\r\n        transparent: true,\r\n        depthWrite: false,\r\n        opacity: 0.5, \r\n        depthTest: false\r\n        //flatShading: true\r\n    });\r\n\r\n    // Semantic shapes\r\n/*\r\n    MatHub.materials.semanticShape = new THREE.MeshBasicMaterial({ \r\n        //color: MatHub.colors.white, \r\n        transparent: true,\r\n        depthWrite: false, \r\n        opacity: 0.0,\r\n        //flatShading: true\r\n    });\r\n*/\r\n\r\n    MatHub.materials.semanticShape = new THREE.ShaderMaterial({\r\n        uniforms: MatHub._uSem,\r\n\r\n        vertexShader: MatHub.getDefVertexShader(),\r\n        fragmentShader:`\r\n            varying vec3 vPositionW;\r\n\t\t    varying vec3 vNormalW;\r\n            varying vec3 vNormalV;\r\n\r\n            uniform float time;\r\n            uniform vec4 tint;\r\n\r\n\t\t    void main(){\r\n\t\t        //vec3 viewDirectionW = normalize(cameraPosition - vPositionW);\r\n\r\n                //float ff = dot(vNormalV, vec3(0,0,1));\r\n\t\t        //ff = clamp(1.0-ff, 0.0, 1.0);\r\n\r\n                float f = (1.0 * cos(time*2.0)); // - 0.5;\r\n                //f = cos(time + (vPositionW.y*10.0));\r\n                f = clamp(f, 0.0,1.0);\r\n\r\n\t\t        gl_FragColor = vec4(tint.rgb, tint.a * f);\r\n                //gl_FragColor = vec4(tint.rgb, ff);\r\n\t\t    }\r\n        `,\r\n        transparent: true,\r\n        depthWrite: false,\r\n        //flatShading: false\r\n        //opacity: 0.0,\r\n    });\r\n\r\n    MatHub.materials.semanticShapeHL = new THREE.MeshBasicMaterial({ \r\n        color: MatHub.colors.sem, \r\n        transparent: true,\r\n        depthWrite: false, \r\n        opacity: 0.2\r\n        //flatShading: true\r\n    });\r\n    MatHub.materials.semanticShapeEdit = new THREE.MeshBasicMaterial({ \r\n        color: MatHub.colors.orange, \r\n        transparent: true,\r\n        depthWrite: false, \r\n        opacity: 0.5\r\n        //flatShading: true\r\n    });\r\n\r\n    MatHub.semIcon = new THREE.SpriteMaterial({ \r\n        map: new THREE.TextureLoader().load( ATON.PATH_RES+\"sui-sem.png\" ), \r\n        //color: MatHub.colors.sem, // multiply\r\n        transparent: true,\r\n        opacity: 1.0,\r\n        //depthWrite: false, \r\n        depthTest: false\r\n    });\r\n\r\n    MatHub.materials.lp = new THREE.ShaderMaterial({ \r\n        vertexShader: MatHub.getDefVertexShader(),\r\n        fragmentShader:`\r\n            varying vec3 vPositionW;\r\n\t\t    varying vec3 vNormalW;\r\n            varying vec3 vNormalV;\r\n\r\n\t\t    void main(){\r\n\t\t        vec3 viewDirectionW = normalize(cameraPosition - vPositionW);\r\n\r\n                float f;\r\n\t\t        //f = dot(viewDirectionW, vNormalW);\r\n                f = dot(vNormalV, vec3(0,0,1));\r\n\t\t        f = clamp(1.0 - f, 0.0, 1.0);\r\n\r\n\t\t        gl_FragColor = vec4(1.0,1.0,1.0, f);\r\n\t\t    }\r\n        `,\r\n        transparent: true,\r\n        depthWrite: false,\r\n        //flatShading: false\r\n    }); \r\n\r\n    MatHub.lpIcon = new THREE.SpriteMaterial({ \r\n        map: new THREE.TextureLoader().load( ATON.PATH_RES+\"sui-lp.png\" ), \r\n        //color: MatHub.colors.sem, // multiply\r\n        transparent: true,\r\n        opacity: 1.0,\r\n        depthWrite: false, \r\n        //depthTest: false\r\n    });\r\n\r\n    MatHub.semIcon.sizeAttenuation = false;\r\n    MatHub.lpIcon.sizeAttenuation  = false;\r\n};\r\n\r\nMatHub.addMaterial = (id, mat)=>{\r\n    if (MatHub.materials[id]){\r\n        console.log(\"MatHub: material \"+id+\" already registered\");\r\n        return;\r\n    }\r\n\r\n    MatHub.materials[id] = mat;\r\n};\r\n\r\nMatHub.loadMaterial = (id, jsonfile)=>{\r\n    MatHub._loader.load(jsonfile, (mat)=>{\r\n        MatHub.addMaterial(id, mat);\r\n    },\r\n    undefined,\r\n    (err)=>{\r\n        console.log(err);\r\n    });\r\n};\r\n\r\nMatHub.getMaterial = (id)=>{\r\n    return MatHub.materials[id];\r\n};\r\n\r\nMatHub.update = ()=>{\r\n    MatHub._uSem.time.value += ATON._dt;\r\n};\r\n\r\nexport default MatHub;","/*\r\n    ATON Utils\r\n    various utilities for device profiling, graph visiting, etc.\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Utils\r\n@namespace Utils\r\n*/\r\nlet Utils = {};\r\n\r\nUtils.TSTRING_SEPARATOR = \" \";\r\n\r\n\r\nUtils.init = ()=>{\r\n    // read-only object to inspect device capabilities\r\n    ATON.device = {};\r\n\r\n    //Utils.geomUnitSphere = new THREE.SphereBufferGeometry( 1.0, 16, 16 );\r\n    Utils.geomUnitSphere = new THREE.SphereGeometry( 1.0, 16, 16 );\r\n\r\n    // Export/Download utils\r\n    Utils.exporterGLTF = undefined;\r\n    Utils.exporterOBJ  = undefined;\r\n\r\n    Utils._dlink = document.createElement('a');\r\n    Utils._dlink.style.display = 'none';\r\n    document.body.appendChild( Utils._dlink ); // Firefox workaround, see #6594\r\n\r\n    Utils.textureLoader = new THREE.TextureLoader();\r\n};\r\n\r\nUtils.generateID = (prefix)=>{\r\n    if (prefix === undefined) prefix = \"id\";\r\n    //let currDate = new Date();\r\n    //let ts = currDate.getYear()+\":\"+currDate.getMonth()+\":\"+currDate.getDay()+\":\"+currDate.getHours()+\":\"+currDate.getMinutes() +\":\"+ currDate.getSeconds();\r\n    return prefix+'-' + Math.random().toString(36).substr(2,9);\r\n};\r\n\r\nUtils.goToURL = (url)=>{\r\n    window.location.href = url;\r\n};\r\n\r\n/**\r\nIf current connection is secure\r\n@returns {boolean}\r\n*/\r\nUtils.isConnectionSecure = ()=>{\r\n    return window.isSecureContext;\r\n}\r\n\r\n\r\n// Profile device capabilities\r\nUtils.profileDevice = ()=>{\r\n\r\n    // Detect mobile\r\n    ATON.device.isMobile = false;\r\n    let detectMobile = ()=>{\r\n        if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(navigator.userAgent)\r\n        || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(navigator.userAgent.substr(0,4))){\r\n            return true;\r\n            }\r\n\r\n        return false;\r\n    };\r\n\r\n    ATON.device.isMobile = detectMobile();\r\n\r\n    // XR profiling\r\n    ATON.device.xrSupported = {};\r\n    ATON.device.xrSupported['immersive-vr'] = false;\r\n    ATON.device.xrSupported['immersive-ar'] = false;\r\n\r\n    if ( 'xr' in navigator ){\r\n\t    navigator.xr.isSessionSupported( 'immersive-vr' ).then(( b )=>{\r\n            if (b) ATON.device.xrSupported['immersive-vr'] = true;\r\n            else   ATON.device.xrSupported['immersive-vr'] = false;\r\n\r\n            console.log(\"WebXR VR session support: \"+ATON.device.xrSupported['immersive-vr']);\r\n\t\t});\r\n\r\n\t    navigator.xr.isSessionSupported( 'immersive-ar' ).then(( b )=>{\r\n            if (b) ATON.device.xrSupported['immersive-ar'] = true;\r\n            else   ATON.device.xrSupported['immersive-ar'] = false;\r\n\r\n            console.log(\"WebXR AR session support: \"+ATON.device.xrSupported['immersive-ar']);\r\n\t\t});\r\n    }\r\n};\r\n\r\n/**\r\nIf current device is mobile (e.g. smartphone, tablet, Oculus Quest)\r\n@returns {boolean}\r\n*/\r\nUtils.isMobile = ()=>{\r\n    return ATON.device.isMobile;\r\n}\r\n\r\n/**\r\nIf current device supports WebXR immersive VR sessions\r\n@returns {boolean}\r\n*/\r\nUtils.isVRsupported = ()=>{\r\n    return ATON.device.xrSupported['immersive-vr'];\r\n}\r\n\r\n/**\r\nIf current device supports WebXR immersive AR sessions\r\n@returns {boolean}\r\n*/\r\nUtils.isARsupported = ()=>{\r\n    return ATON.device.xrSupported['immersive-ar'];\r\n}\r\n\r\n\r\n// Path utils\r\nUtils.getFileExtension = ( filepath )=>{\r\n\treturn filepath.substr(filepath.lastIndexOf('.')+1).toLowerCase();\r\n};\r\n\r\nUtils.removeFileExtension = ( filepath )=>{\r\n    return filepath.replace(/\\.[^/.]+$/, \"\");\r\n};\r\n\r\nUtils.isVideo = ( filepath )=>{\r\n    let ext = Utils.getFileExtension(filepath);\r\n\r\n    if (ext === \"mp4\")  return true;\r\n    if (ext === \"webm\") return true;\r\n};\r\n\r\nUtils.getBaseFolder = ( filepath )=>{\r\n    var index = filepath.lastIndexOf('/');\r\n    if (index !== -1) return filepath.substring( 0, index + 1 );\r\n    \r\n    return '';\r\n};\r\n\r\nUtils.isResourceURL = (s)=>{\r\n    if (s.startsWith(\"http://\"))  return true;\r\n    if (s.startsWith(\"https://\")) return true;\r\n    return false;\r\n};\r\n\r\nUtils.URLify =(string)=>{\r\n    const urls = string.match(/(((ftp|https?):\\/\\/)[\\-\\w@:%_\\+.~#?,&\\/\\/=]+)/g);\r\n    if (urls){\r\n        urls.forEach(function(url){\r\n            string = string.replace(url, '<a target=\"_blank\" href=\"' + url + '\">' + url + \"</a>\");\r\n        });\r\n    }\r\n\r\n    return string;\r\n};\r\n\r\nUtils.resolveCollectionURL = (url)=>{\r\n    if (url.startsWith(\"http\")) return url;\r\n    \r\n    return ATON.PATH_COLLECTION+url;\r\n};\r\n\r\n// JSON post utility\r\nUtils.postJSON = (endpoint, obj, onReceive, onFail)=>{\r\n    $.ajax({\r\n        url: endpoint,\r\n        type:\"POST\",\r\n        xhrFields: { withCredentials: true },\r\n        data: JSON.stringify(obj),\r\n        contentType:\"application/json; charset=utf-8\",\r\n        dataType:\"json\",\r\n\r\n        success: (data)=>{\r\n            if (onReceive) onReceive(data);\r\n        }\r\n    }).fail((err)=>{\r\n        console.log(err);\r\n        if (onFail) onFail();\r\n    });\r\n};\r\n\r\n\r\nUtils.mergeObject = ( object )=>{\r\n    object.updateMatrixWorld( true );\r\n\r\n    const geometry = [];\r\n    object.traverse( c => {\r\n        if ( c.isMesh ){\r\n            const g = c.geometry;\r\n            g.applyMatrix4( c.matrixWorld );\r\n            geometry.push( g.toNonIndexed() );\r\n        }\r\n\r\n    });\r\n\r\n    const mergedGeometries = THREE.BufferGeometryUtils.mergeBufferGeometries( geometry, false );\r\n    const mergedGeometry   = THREE.BufferGeometryUtils.mergeVertices( mergedGeometries ).center();\r\n\r\n    const group = new THREE.Group();\r\n    const mesh = new THREE.Mesh( mergedGeometry );\r\n    group.add( mesh );\r\n    return group;\r\n};\r\n\r\nUtils.setPicking = (node, type, b)=>{\r\n    if (b === undefined) b = true;\r\n\r\n    //console.log(b);\r\n    \r\n    node.traverse((o) => {\r\n        if (b) o.layers.enable(type);\r\n        else o.layers.disable(type);\r\n    });\r\n\r\n    // children\r\n/*\r\n    for (let c in node.children){\r\n        let C = node.children[c];\r\n        Utils.setPicking(C, type, b);\r\n    }\r\n*/\r\n};\r\n\r\nUtils.graphPostVisitor = (N)=>{\r\n    //if (N.type === undefined) return;\r\n\r\n    if (!N.visible){\r\n        Utils.setPicking(N, N.type, false);\r\n        return;\r\n    }\r\n/*\r\n    for (let c in N.children){\r\n        let C = N.children[c];\r\n        Utils.graphPostVisitor(C);\r\n    }\r\n*/\r\n    console.log(N);\r\n};\r\n\r\n// TileSets utils\r\nUtils.updateTSetsCamera = (cam)=>{\r\n    if (cam === undefined) cam = ATON.Nav._camera;\r\n\r\n    const nts = ATON._tsets.length;\r\n    if (nts <= 0) return;\r\n\r\n/*\r\n    // Immersive VR mode\r\n    if (ATON.XR._bPresenting){\r\n        //console.log(ATON._tsets)\r\n\r\n        for (let ts=0; ts<nts; ts++){\r\n            const TS = ATON._tsets[ts];\r\n\r\n            // remove all cameras so we can use the VR camera instead\r\n            TS.cameras.forEach( c => TS.deleteCamera( cam ) );\r\n\r\n            let currCamera = ATON._renderer.xr.getCamera(); // cam\r\n            if (currCamera){\r\n                TS.setCamera( currCamera );\r\n\r\n                TS.setResolution( currCamera, 8000, 8000 );\r\n\r\n                let leftCam = currCamera.cameras[0];\r\n                if ( leftCam ){\r\n                    //TS.setResolution( currCamera, leftCam.viewport.z, leftCam.viewport.w );\r\n                    //console.log(leftCam);\r\n                }\r\n            }\r\n        }\r\n\r\n        return;\r\n    }\r\n*/\r\n\r\n    for (let ts=0; ts<nts; ts++){\r\n        const TS = ATON._tsets[ts];   \r\n\r\n        //console.log(TS.cameras);\r\n        for (let c in TS.cameras) TS.deleteCamera( TS.cameras[c] );\r\n\r\n        TS.setCamera( cam );\r\n\r\n        //TS.setResolutionFromRenderer( cam, ATON._renderer );\r\n        TS.setResolution( cam, 200, 200 );\r\n    }\r\n};\r\n\r\nUtils.loadTileSet = (tsurl, N)=>{\r\n\r\n    let ts = new TILES.TilesRenderer(tsurl);\r\n    if (!ts) return;\r\n\r\n    //ATON._assetReqNew(tsurl);\r\n\r\n    ts.fetchOptions.mode = 'cors';\r\n\r\n    ts.setCamera( ATON.Nav._camera );\r\n    ts.setResolutionFromRenderer( ATON.Nav._camera, ATON._renderer );\r\n\r\n    //ts.errorTarget = ;\r\n\r\n    let bFirst = false;\r\n\r\n    //ATON._assetReqComplete(tsurl);\r\n\r\n    ts.onLoadModel = ( scene )=>{\r\n        //Utils.modelVisitor( N, scene );\r\n        //ATON._onAllReqsCompleted();\r\n\r\n        if (!bFirst){\r\n            ///ATON._assetReqComplete(tsurl);\r\n            ATON._onAllReqsCompleted();\r\n            bFirst = true;\r\n        }\r\n\r\n        scene.traverse( c => {\r\n            //c.layers.enable(N.type);\r\n\r\n            if (c.isMesh){\r\n                c.castShadow    = true; //N.castShadow;\r\n                c.receiveShadow = true; //N.receiveShadow;\r\n            }\r\n\r\n            if ( c.material ) {\r\n                //c.originalMaterial = c.material;\r\n                //c.material = wireMat;\r\n                if (N.userData.cMat) c.material = N.userData.cMat;\r\n\r\n                if (c.material.map){\r\n                    c.material.map.minFilter = THREE.LinearMipmapLinearFilter;\r\n                    c.material.map.magFilter = THREE.LinearFilter;\r\n                }\r\n            }\r\n        });\r\n\r\n    };\r\n\r\n    ts.onDisposeModel = (scene)=>{\r\n        scene.traverse( c => {\r\n            if ( c.isMesh ) {\r\n                c.material.dispose();\r\n            }\r\n        });\r\n    };\r\n\r\n    N.add(ts.group);\r\n\r\n    Utils.setPicking(N, N.type, true);\r\n\r\n    //console.log(ts);\r\n\r\n    ATON._tsets.push(ts);\r\n};\r\n\r\n// Helper visitor routine\r\n// Note: parentNode is not connected to model\r\nUtils.modelVisitor = (parentNode, model)=>{\r\n    if (!model) return this;\r\n\r\n    //model = Utils.mergeObject(model);\r\n    \r\n    let N = parentNode;\r\n    let type = N.type; // Differentiate visit depending on node type\r\n\r\n    model.traverse( ( o ) => {\r\n/*\r\n        if (N.bPickable !== undefined){\r\n            if (N.bPickable) o.layers.enable(type);\r\n            else o.layers.disable(type);\r\n            //Utils.setPicking(N, type, N.bPickable);\r\n        }\r\n        //else o.layers.enable(type); //Utils.setPicking(N, type, true);\r\n*/\r\n\r\n        //Utils.setPicking(model, type, N.bPickable);\r\n        //if (!N.visible) Utils.setPicking(model, type, false);\r\n\r\n        // perf.\r\n        // TODO: manually call object.updateMatrix()\r\n        //o.matrixAutoUpdate = false;\r\n\r\n        if (o.isMesh){\r\n            //let numVertices = o.geometry.attributes.position.count;\r\n            //console.log(numVertices);\r\n\r\n            if (type === ATON.NTYPES.SCENE){\r\n                // TODO: \r\n                o.castShadow    = true; //N.castShadow;\r\n                o.receiveShadow = true; //N.receiveShadow;\r\n\r\n                // Build accelerated ray casting\r\n                if (o.geometry){\r\n                    o.geometry.computeBoundsTree();\r\n                    console.log(\"Computed visible BVH\");\r\n\r\n                    // visualize BVH bounds\r\n/*\r\n                    let BVHVis = new ThreeMeshBVH.MeshBVHVisualizer(o, 10);\r\n                    BVHVis.update();\r\n                    o.parent.add(BVHVis);\r\n*/\r\n                }\r\n\r\n                // Fix mipmapping\r\n\r\n                if ( o.material.map !== null){\r\n                    //console.log(object.material.map);\r\n                    \r\n                    // Why do I have to do this?\r\n                    o.material.map.generateMipmaps = true;\r\n                    o.material.map.anisotropy = ATON.device.isMobile? 0 : ATON._maxAnisotropy;\r\n                    o.material.map.minFilter  = THREE.LinearMipmapLinearFilter;\r\n                    o.material.map.magFilter  = THREE.LinearFilter;\r\n                    //o.material.map.needsUpdate = true;\r\n                }\r\n            }\r\n\r\n            if (type === ATON.NTYPES.SEM){\r\n                o.material = ATON.MatHub.materials.semanticShape;\r\n\r\n                // Build accelerated ray casting\r\n                if (o.geometry){\r\n                    o.geometry.computeBoundsTree();\r\n                    console.log(\"Computed semantic BVH\");\r\n                }\r\n            }\r\n\r\n            // Cascading material\r\n            if (N.userData.cMat){\r\n                o.material = N.userData.cMat;\r\n                //o.material.needsUpdate = true;\r\n            }\r\n\r\n        }\r\n/*\r\n        if (N.userData.cMat){\r\n            o.material = N.userData.cMat;\r\n            //o.cMat = N.userData.cMat;\r\n            //o.material.needsUpdate = true;\r\n        }\r\n*/\r\n    });\r\n\r\n    //Utils.setPicking(N, type, N.bPickable);\r\n\r\n/*\r\n    for (let c in model.children){\r\n        let C = model.children[c];\r\n        Utils.modelVisitor(model, C);\r\n    }\r\n*/\r\n};\r\n\r\nUtils.registerAniMixers = (N, data)=>{\r\n    let model = data.scene || data.scene[0];\r\n    let bAnimations = false;\r\n\r\n    if (data.animations === undefined) return;\r\n\r\n    let mixer = new THREE.AnimationMixer( model );\r\n    data.animations.forEach((clip)=>{\r\n        mixer.clipAction( clip ).play();\r\n        //console.log(mixer.clipAction( clip ));\r\n        //console.log(N);\r\n        bAnimations = true;\r\n    });\r\n\r\n    if (!bAnimations) return;\r\n\r\n    ATON._aniMixers.push(mixer);\r\n\r\n    if (N._aniMixers === undefined) N._aniMixers = [];\r\n    N._aniMixers.push(mixer);\r\n};\r\n\r\nUtils.ccExtract = (data)=>{\r\n    if (data === undefined) return;\r\n    if (data.asset === undefined) return;\r\n    if (data.asset.extras === undefined) return;\r\n\r\n    let cc = data.asset.extras;\r\n\r\n    ATON._ccModels.push(cc);\r\n    console.log(cc);\r\n};\r\n\r\nUtils.parseTransformString = (tstr)=>{\r\n    let T = new THREE.Group();\r\n\r\n    let values = tstr.split(Utils.TSTRING_SEPARATOR);\r\n    let numValues = values.length;\r\n\r\n    if (numValues < 3) return T; // nothing to do\r\n\r\n    // Translation\r\n    T.position.set( parseFloat(values[0]), parseFloat(values[1]), parseFloat(values[2]) );\r\n    if (numValues < 6) return T;\r\n\r\n    // Rotation\r\n    T.rotation.set( parseFloat(values[3]), parseFloat(values[4]), parseFloat(values[5]) );\r\n    if (numValues < 9) return T;\r\n\r\n    // Scale\r\n    T.scale.set( parseFloat(values[6]), parseFloat(values[7]), parseFloat(values[8]) );\r\n    return T;\r\n};\r\n\r\nUtils.setVectorPrecision = (v, prec)=>{\r\n    v.x = parseFloat( v.x.toPrecision(prec) );\r\n    v.y = parseFloat( v.y.toPrecision(prec) );\r\n    v.z = parseFloat( v.z.toPrecision(prec) );\r\n    \r\n    return v;\r\n};\r\n\r\n// User auth\r\nUtils.checkAuth = (onReceive)=>{\r\n    $.ajax({\r\n        type: 'GET',\r\n        url: ATON.PATH_RESTAPI+\"user\",\r\n        xhrFields: { withCredentials: true },            \r\n        dataType: 'json',\r\n\r\n        success: (data)=>{ onReceive(data); }\r\n    });\r\n};\r\n\r\n\r\n/**\r\nGet human-readable length (distances, measures, etc...)\r\n@param {number} d - the distance\r\n@returns {string}\r\n*/\r\nUtils.getHumanReadableDistance = (d)=>{\r\n    let mstr = \" m\";\r\n\r\n    if (d < 0.01){\r\n        d *= 1000.0; mstr= \" mm\";\r\n        mstr = d.toPrecision(3) + mstr;\r\n        return mstr;\r\n    }\r\n    if (d < 1.0){\r\n        d *= 100.0; mstr= \" cm\";\r\n        mstr = d.toPrecision(3) + mstr;\r\n        return mstr;\r\n    }\r\n    if (d > 1000.0){\r\n        d * 0.001; mstr=\" km\";\r\n        mstr = d.toPrecision(3) + mstr;\r\n        return mstr;\r\n    }\r\n\r\n    mstr = d.toPrecision(3) + mstr;\r\n    return mstr;\r\n};\r\n\r\n// Extract clean text from HTML\r\nUtils.stripHTMLtagsFromString = (str)=>{\r\n    str = str.replace(/(<([^>]+)>)/gi, \"\");\r\n    return str;\r\n};\r\n\r\n// Fullscreen (NOT USED)\r\nUtils.requestFullscreen = ()=>{\r\n    let elem = document.documentElement;\r\n\r\n    if (elem.requestFullscreen) elem.requestFullscreen();\r\n\r\n    else if (elem.mozRequestFullScreen){ // Firefox\r\n        elem.mozRequestFullScreen();\r\n    }\r\n    else if (elem.webkitRequestFullscreen){ // Chrome, Safari & Opera\r\n        elem.webkitRequestFullscreen();\r\n    }\r\n    else if (elem.msRequestFullscreen){ // IE/Edge\r\n        elem.msRequestFullscreen();\r\n    }\r\n    return true;\r\n};\r\n\r\n\r\n// Export routines\r\nUtils.downloadBlob = (blob, filename)=>{\r\n    if (filename === undefined) return;\r\n\r\n    Utils._dlink.href = URL.createObjectURL( blob );\r\n    Utils._dlink.download = filename;\r\n    Utils._dlink.click();\r\n};\r\n\r\n// Download text ASCII data\r\nUtils.downloadText = ( str, filename )=>{\r\n    Utils.downloadBlob( new Blob( [ str ], { type: 'text/plain' } ), filename );\r\n};\r\n\r\n// Download json object\r\nUtils.downloadJSONobj = (jsonobj, filename)=>{\r\n    Utils.downloadText( JSON.stringify(jsonobj), filename );\r\n};\r\n\r\nUtils.downloadArrayBuffer = ( buffer, filename )=>{\r\n    Utils.downloadBlob( new Blob( [ buffer ], { type: 'application/octet-stream' } ), filename );\r\n};\r\n\r\n// Export ATON node\r\nUtils.exportNode = (node, filename)=>{\r\n    let ext = Utils.getFileExtension(filename);\r\n    if (ext.length < 1) return;\r\n\r\n    // GLTF\r\n    if (ext === \"glb\" || ext === \"gltf\"){\r\n        let bBin = (ext === \"glb\")? true : false;\r\n\r\n        let opts = {\r\n            //trs: true, // Export position, rotation and scale instead of matrix per node. Default is false\r\n            binary: bBin, // Export in binary (.glb) format, returning an ArrayBuffer. Default is false\r\n            //onlyVisible: false,\r\n            //truncateDrawRange: true\r\n        };\r\n\r\n        if (Utils.exporterGLTF === undefined) Utils.exporterGLTF = new THREE.GLTFExporter();\r\n\r\n        Utils.exporterGLTF.parse( node, ( output )=>{\r\n            if ( output instanceof ArrayBuffer ){\r\n                Utils.downloadArrayBuffer( output, filename);\r\n            }\r\n            else {\r\n                console.log( output );\r\n                Utils.downloadJSONobj(output, filename);\r\n            }\r\n        }, opts);\r\n    }\r\n\r\n    // OBJ format\r\n    if (ext === \"obj\"){\r\n        if (Utils.exporterOBJ === undefined) Utils.exporterOBJ = new THREE.OBJExporter();\r\n\r\n        let output = Utils.exporterOBJ.parse(node);\r\n        //console.log(output);\r\n        Utils.downloadText(output, filename);\r\n    }\r\n};\r\n\r\nUtils.takeScreenshot = (size, filename)=>{\r\n    let img = new Image();\r\n\r\n    console.log(\"Screenshot with size:\"+size);\r\n\r\n    ATON.Nav._camera.aspect = 1.0;\r\n    ATON.Nav._camera.updateProjectionMatrix();\r\n    \r\n    ATON._renderer.setSize(size,size);\r\n    ATON._renderer.render( ATON._mainRoot, ATON.Nav._camera );\r\n\r\n    let b64img = ATON._renderer.domElement.toDataURL();\r\n    img.src = b64img;\r\n\r\n    if (filename){\r\n        Utils._dlink.href = b64img.replace(\"image/png\", \"image/octet-stream\");\r\n        Utils._dlink.download = filename;\r\n        Utils._dlink.click();\r\n    }\r\n\r\n    ATON._onResize();\r\n    return img;\r\n};\r\n\r\nUtils.assignLightProbeToMesh = (LP, mesh)=>{\r\n    if (LP === undefined || mesh === undefined) return;\r\n\r\n    if (mesh.noLP) return;\r\n\r\n    mesh.userData.LP = LP;\r\n    //LP.update();\r\n    //mesh.material.envMap = LP.getEnvTex();\r\n    \r\n    //mesh.material.combine = THREE.MultiplyOperation;\r\n    //mesh.material.needsUpdate = true;\r\n\r\n    //console.log(mesh.userData);\r\n};\r\n\r\nUtils.createATONCube = (id)=>{\r\n    let g = new THREE.BoxBufferGeometry( 1,1,1 );\r\n\r\n    let mat = new THREE.MeshStandardMaterial();\r\n\r\n    Utils.textureLoader.load((ATON.PATH_RES+\"models/aton-cube.jpg\"), (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.map = tex;\r\n    });\r\n\r\n    let N = ATON.createSceneNode(id);\r\n    N.add( new THREE.Mesh(g) );\r\n    N.setMaterial(mat);\r\n\r\n    N.enablePicking();\r\n    return N;\r\n};\r\n\r\n\r\nUtils.createATONCubePBR = (id)=>{\r\n    let g = new THREE.BoxBufferGeometry( 1,1,1 );\r\n\r\n    let mat = new THREE.MeshStandardMaterial();\r\n    mat.metalness = 1.0;\r\n\r\n    Utils.textureLoader.load((ATON.PATH_RES+\"models/aton-cube.jpg\"), (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.map = tex;\r\n    });\r\n\r\n    Utils.textureLoader.load((ATON.PATH_RES+\"models/aton-cube-pbr.jpg\"), (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.metalnessMap = tex;\r\n        mat.roughnessMap = tex;\r\n    });\r\n\r\n    Utils.textureLoader.load((ATON.PATH_RES+\"models/aton-cube-nrm.png\"), (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.normalMap = tex;\r\n\r\n        //mat.bumpMap.anisotropy = ATON._maxAnisotropy;\r\n        //mat.bumpMap.minFilter  = THREE.LinearMipmapLinearFilter;\r\n        //mat.bumpMap.magFilter  = THREE.LinearFilter;\r\n    });\r\n\r\n    let N = ATON.createSceneNode(id);\r\n    N.add( new THREE.Mesh(g) );\r\n    N.setMaterial(mat);\r\n\r\n    N.enablePicking();\r\n    return N;\r\n};\r\n\r\n\r\nUtils.createGround = (texture, dx,dz)=>{\r\n    if (dx === undefined) dx = 1.0;\r\n    if (dz === undefined) dz = 1.0;\r\n\r\n    let g = new THREE.PlaneBufferGeometry( dx, dz );\r\n\r\n    let mat = new THREE.MeshStandardMaterial();\r\n    if (texture !== undefined) Utils.textureLoader.load(texture, (tex)=>{\r\n        tex.encoding = THREE.sRGBEncoding;\r\n        mat.map = tex;\r\n    });\r\n\r\n    let N = ATON.createSceneNode().rotateX(-Math.PI * 0.5);\r\n    N.add( new THREE.Mesh(g, mat) );\r\n    N.enablePicking();\r\n\r\n    return N;\r\n};\r\n\r\n\r\nexport default Utils;","/*\r\n    ATON Scene Hub\r\n    scene JSON routines\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Scene Hub\r\n@namespace SceneHub\r\n*/\r\nlet SceneHub = {};\r\n\r\nSceneHub.MODE_ADD = 0;\r\nSceneHub.MODE_DEL = 1;\r\n\r\nSceneHub.FLOAT_PREC = 5;\r\n\r\n/**\r\nInitializes the component\r\n*/\r\nSceneHub.init = ()=>{\r\n    SceneHub.currID   = undefined; // Scene ID (sid) - FIXME: rename to \"SID\"\r\n    SceneHub.currData = undefined; // holds compact object describing our ATON scene\r\n    SceneHub._bEdit   = false;     // edit mode (client can modify json on the server)\r\n\r\n    SceneHub._bLoading = false;\r\n\r\n    // Current scene title & description\r\n    SceneHub._title = undefined;\r\n    SceneHub._descr = undefined;\r\n\r\n    SceneHub.initBaseParsers();\r\n};\r\n\r\n/**\r\nThis enables/disables edit mode - i.e. changes to the scene are sent to server and become persistent\r\n@param {bool} b - true or false\r\n@example\r\nATON.SceneHub.setEditMode(true)\r\n*/\r\nSceneHub.setEditMode = (b)=>{\r\n    SceneHub._bEdit = b;\r\n    console.log(\"Edit mode:\"+b);\r\n};\r\n\r\n\r\n/**\r\n    Loads a scene by providing JSON path\r\n    @param {string} reqpath - JSON url\r\n    @param {string} sid - Scene ID\r\n    @param {function} onSuccess - (Optional) function to be called on success\r\n    @example\r\n        ATON.SceneHub.load(\"http://path/to/scene.json\", \"sample\", ()=>{ console.log(\"Done!\"); });\r\n*/\r\nSceneHub.load = (reqpath, sid, onSuccess/*, onFail*/)=>{\r\n    //let args = reqpath.split(',');\r\n\r\n    SceneHub._bLoading = true;\r\n    console.log(\"Loading Scene: \"+sid);\r\n\r\n    return $.getJSON( reqpath, ( data )=>{\r\n        SceneHub.currData  = data;\r\n        SceneHub.currID    = sid; //scenejson.substring(scenejson.lastIndexOf('/')+1);\r\n        SceneHub._bLoading = false;\r\n\r\n        //console.log(ATON.currScene);\r\n\r\n        SceneHub.parseScene(data);\r\n\r\n        if (onSuccess) onSuccess();\r\n        ATON.fireEvent(\"SceneJSONLoaded\", sid);\r\n    });\r\n/*\r\n    .fail(()=>{\r\n        SceneHub._bLoading = false;\r\n        console.log(\"Fail to load \"+reqpath);\r\n\r\n        if (onFail) onFail();\r\n    });\r\n*/\r\n};\r\n\r\n// Parse JSON scene obj\r\nSceneHub.parseScene = (sobj)=>{\r\n    sobj = (sobj === undefined)? SceneHub.currData : sobj;\r\n    if (sobj === undefined) return;\r\n\r\n    for (let k in sobj)\r\n        if (SceneHub._jsonParsers[k]) SceneHub._jsonParsers[k]( sobj[k] );\r\n};\r\n\r\nSceneHub.getJSONchildren = (nid, type)=>{\r\n    if (type === undefined) type = ATON.NTYPES.SCENE;\r\n\r\n    let P = undefined;\r\n    let children = [];\r\n\r\n    if (type === ATON.NTYPES.SEM)   P = ATON.getSemanticNode(nid);\r\n    if (type === ATON.NTYPES.SCENE) P = ATON.getSceneNode(nid);\r\n\r\n    if (P === undefined) return undefined;\r\n\r\n    for (let c in P.children){\r\n        let child = P.children[c];\r\n\r\n        if (child.nid !== undefined) children.push( child.nid );\r\n        }\r\n\r\n    return children;\r\n};\r\n\r\nSceneHub.getJSONgraphEdges = (type)=>{\r\n    if (type === undefined) type = ATON.NTYPES.SCENE;\r\n    let nodes = ATON.snodes;\r\n    \r\n    if (type === ATON.NTYPES.SEM) nodes = ATON.semnodes;\r\n    if (type === ATON.NTYPES.UI)  nodes = ATON.uinodes;\r\n\r\n    let edges = {};\r\n\r\n    for (let n in nodes){\r\n        let N = nodes[n];\r\n\r\n        //if (N && N.children) edges[n] = SceneHub.getJSONchildren(n, type);\r\n\r\n        let E = {};\r\n        if (N && N.parent && N.parent.nid){\r\n            //edges.push([N.parent.nid, N.nid]);\r\n            if (edges[N.parent.nid] === undefined) edges[N.parent.nid] = [];\r\n            edges[N.parent.nid].push(N.nid);\r\n            //edges[N.parent.nid].filter((v,i) => edges[N.parent.nid].indexOf(v) === i);\r\n        }\r\n    }\r\n\r\n    //console.log(edges);\r\n    return edges;\r\n};\r\n\r\nSceneHub.getJSONsemanticSpheresList = (semid)=>{\r\n    let S = ATON.getSemanticNode(semid);\r\n    if (S === undefined) return undefined;\r\n\r\n    let SL = [];\r\n\r\n    for (let s in S.children){\r\n        let sphere = S.children[s];\r\n        if (sphere.type){\r\n            SL.push([\r\n                parseFloat(sphere.position.x.toPrecision(SceneHub.FLOAT_PREC)), \r\n                parseFloat(sphere.position.y.toPrecision(SceneHub.FLOAT_PREC)), \r\n                parseFloat(sphere.position.z.toPrecision(SceneHub.FLOAT_PREC)), \r\n                parseFloat(sphere.scale.x.toPrecision(SceneHub.FLOAT_PREC))\r\n            ]);\r\n        }\r\n    }\r\n\r\n    return SL;\r\n};\r\n\r\nSceneHub.getJSONsemanticConvexShapes = (semid)=>{\r\n    let S = ATON.getSemanticNode(semid);\r\n    if (S === undefined) return undefined;\r\n\r\n    let CL = [];\r\n\r\n    for (let s in S.children){\r\n        let semesh = S.children[s];\r\n        if (semesh.userData._convexPoints){\r\n            CL.push(semesh.userData._convexPoints);\r\n        }\r\n    }\r\n\r\n    //console.log(CL);\r\n    \r\n    return CL;\r\n};\r\n\r\n// Top-level scene-JSON parsers\r\nSceneHub.initBaseParsers = ()=>{\r\n    SceneHub._jsonParsers = {};\r\n\r\n    // Scene Title & Description\r\n    SceneHub._jsonParsers.title = (title)=>{\r\n        if (title === undefined) return;\r\n\r\n        SceneHub.setTitle(title);\r\n    };\r\n\r\n    SceneHub._jsonParsers.description = (descr)=>{\r\n        if (descr === undefined) return;\r\n\r\n        SceneHub.setDescription(descr);\r\n    };\r\n\r\n    // Environment\r\n    SceneHub._jsonParsers.environment = (env)=>{\r\n\r\n        let pano = env.mainpano;\r\n        if (env.mainpano){\r\n            if (pano.url) ATON.setMainPanorama(pano.url);\r\n            if (pano.rotation) ATON.setMainPanoramaRotation(pano.rotation);\r\n        }\r\n\r\n        if (env.bgcolor){\r\n            ATON.setBackgroundColor( new THREE.Color(env.bgcolor[0],env.bgcolor[1],env.bgcolor[2]) );\r\n        }\r\n\r\n        let L = env.mainlight;\r\n        if (L){\r\n            if (L.direction) ATON.setMainLightDirection( new THREE.Vector3(L.direction[0],L.direction[1],L.direction[2]) );\r\n\r\n            if (ATON._dMainL){\r\n                if (L.color)     ATON._dMainL.color = new THREE.Color(L.color[0],L.color[1],L.color[2]);\r\n                if (L.intensity) ATON._dMainL.intensity = L.intensity;\r\n\r\n                if (L.shadows !== undefined) ATON.toggleShadows(L.shadows);\r\n                else ATON.toggleShadows(false);\r\n            }\r\n            else {\r\n                //ATON.toggleShadows(false);\r\n                ATON.toggleMainLight(false);\r\n            }\r\n        }\r\n        else {\r\n            //ATON.toggleShadows(false);\r\n            ATON.toggleMainLight(false);\r\n        }\r\n\r\n        let lps = env.lightprobes;\r\n        if (lps){\r\n            if (lps.auto) ATON.setAutoLP(true);\r\n        }\r\n\r\n        if (env.exposure) ATON.setExposure(env.exposure);\r\n\r\n    };\r\n\r\n    // Soundscape\r\n    SceneHub._jsonParsers.soundscape = (soundscape)=>{\r\n        if (soundscape === undefined) return;\r\n\r\n        if (soundscape.global){\r\n            ATON.setGlobalAudio(soundscape.global.url, soundscape.global.loop);\r\n        }\r\n    };\r\n\r\n    // NavMode\r\n    SceneHub._jsonParsers.navmode = (navmode)=>{\r\n        if (navmode === undefined) return;\r\n\r\n        ATON.Nav.setNavMode(navmode);\r\n    };\r\n\r\n    // Measurements\r\n    SceneHub._jsonParsers.measurements = (M)=>{\r\n        if (M === undefined) return;\r\n\r\n        for (let m in M){\r\n            let measure = M[m];\r\n\r\n            if (measure.points && measure.points.length === 6){\r\n                let A = new THREE.Vector3(\r\n                    parseFloat(measure.points[0]),\r\n                    parseFloat(measure.points[1]),\r\n                    parseFloat(measure.points[2])\r\n                );\r\n                let B = new THREE.Vector3(\r\n                    parseFloat(measure.points[3]),\r\n                    parseFloat(measure.points[4]),\r\n                    parseFloat(measure.points[5])\r\n                );\r\n                ATON.SUI.addMeasurementPoint(A);\r\n                ATON.SUI.addMeasurementPoint(B);\r\n            }\r\n        }\r\n    };\r\n\r\n    // Viewpoints\r\n    SceneHub._jsonParsers.viewpoints = (povs)=>{\r\n        if (povs === undefined) return;\r\n\r\n        for (let p in povs){\r\n            let pov = povs[p];\r\n            \r\n            if (p === \"home\"){\r\n                ATON.Nav.setHomePOV( \r\n                    new ATON.POV()\r\n                    .setPosition(pov.position[0],pov.position[1],pov.position[2])\r\n                    .setTarget(pov.target[0],pov.target[1],pov.target[2])\r\n                    .setFOV(pov.fov)\r\n                );\r\n            }\r\n            else {\r\n                new ATON.POV(p)\r\n                .setPosition(pov.position[0],pov.position[1],pov.position[2])\r\n                .setTarget(pov.target[0],pov.target[1],pov.target[2])\r\n                .setFOV(pov.fov)\r\n                //.setKeywords(pov.keywords);\r\n            }\r\n        }\r\n    };\r\n\r\n    // Visible scene-graph\r\n    SceneHub._jsonParsers.scenegraph = (sg)=>{\r\n        if (sg === undefined) return;\r\n\r\n        let nodes = sg.nodes;\r\n        let edges = sg.edges;\r\n\r\n        // nodes\r\n        for (let nid in nodes){\r\n            let N = nodes[nid]; // JSON node\r\n\r\n            //let G = ATON.createSceneNode(nid); // ATON node\r\n            let G = ATON.getOrCreateSceneNode(nid).removeChildren();\r\n\r\n            // Transform node\r\n            let transform = N.transform;\r\n            let tlist = undefined;\r\n            if (transform){\r\n                if (transform.position) G.setPosition(transform.position[0],transform.position[1],transform.position[2]);\r\n                if (transform.rotation) G.setRotation(transform.rotation[0],transform.rotation[1],transform.rotation[2]);\r\n                if (transform.scale)    G.setScale(transform.scale[0],transform.scale[1],transform.scale[2]);\r\n\r\n                if (transform.list && Array.isArray(transform.list)){\r\n                    //TODO:\r\n                }\r\n            }\r\n            \r\n            // load models by urls list\r\n            let urls = N.urls;\r\n            if (urls){\r\n                if (Array.isArray(urls)){\r\n                    urls.forEach(u => {\r\n                        ATON.createSceneNode().load(u).attachTo(G);\r\n                    });\r\n                }\r\n                else {\r\n                    G.load(urls);\r\n                }\r\n            }\r\n\r\n            // FIXME: not working\r\n            if (N.shadowcast)    G.setShadowCast(N.shadowcast);\r\n            if (N.shadowreceive) G.setShadowCast(N.shadowreceive);\r\n\r\n            if (N.toYup) G.setYup();\r\n\r\n            //if (N.nopicking){ G.disablePicking(); } // FIXME: not working\r\n/*\r\n            if (N.color){\r\n                let C = ATON.MatHub.colors[N.color];\r\n\r\n                G.setMaterial( new THREE.MeshBasicMaterial({ \r\n                    color: C, \r\n                    transparent: true,\r\n                    depthWrite: false, \r\n                    opacity: 0.1,\r\n                }));\r\n\r\n                console.log(G);\r\n            }\r\n*/\r\n            // Keywords\r\n            if (N.keywords) G.kwords = N.keywords;\r\n/*\r\n            if (N.show !== undefined){\r\n                if (N.show){ G.show(); console.log(\"show \"+nid); }\r\n                else { G.hide(); console.log(\"hide \"+nid); }\r\n            }\r\n*/\r\n        }\r\n\r\n        // Build graph through relationships\r\n        for (let parid in edges){\r\n            let children = edges[parid];\r\n\r\n            let P = ATON.getSceneNode(parid);\r\n\r\n            if (P !== undefined){\r\n                for (let c in children){\r\n                    let childid = children[c];\r\n                    let C = ATON.getSceneNode(childid);\r\n                    if (C !== undefined) C.attachTo(P);\r\n                }\r\n            }\r\n        }\r\n\r\n        // After connection\r\n        for (let nid in nodes){\r\n            let N = nodes[nid]; // JSON node\r\n            let G = ATON.getSceneNode(nid);\r\n\r\n            if (G !== undefined){\r\n                if (N.show !== undefined){\r\n                    //console.log(N.show);\r\n\r\n                    if (N.show){ G.show(); console.log(\"show \"+nid); }\r\n                    else { G.hide(); console.log(\"hide \"+nid); }\r\n                    //console.log(ATON.getSceneNode(nid));\r\n                }\r\n                //else G.show();\r\n\r\n                //if (N.nopicking){ G.disablePicking(); }\r\n                //else G.enablePicking();\r\n\r\n                if (N.material){\r\n                    let mat = new THREE.MeshStandardMaterial(N.material);\r\n                    G.setMaterial( mat );\r\n                }\r\n            }\r\n        }\r\n\r\n/*\r\n        for (let e = 0; e < edges.length; e++){\r\n            let E = edges[e];\r\n\r\n            let from = E[0];\r\n            let to   = E[1];\r\n\r\n            if (from && to){\r\n                let child = ATON.getSceneNode(to);\r\n                if (child) child.attachTo(from);\r\n            }\r\n        }\r\n*/\r\n    };\r\n\r\n    // Semantic scene-graph\r\n    SceneHub._jsonParsers.semanticgraph = (sg)=>{\r\n        if (sg === undefined) return;\r\n\r\n        let nodes = sg.nodes;\r\n        let edges = sg.edges;\r\n\r\n        // nodes\r\n        for (let nid in nodes){\r\n            let N = nodes[nid]; // JSON node\r\n\r\n            //let G = ATON.createSemanticNode(nid);\r\n            let G = ATON.getOrCreateSemanticNode(nid).removeChildren();\r\n            \r\n            // load shapes by urls list\r\n            let urls = N.urls;\r\n            if (urls){\r\n                if (Array.isArray(urls)){\r\n                    urls.forEach(u => {\r\n                        ATON.createSemanticNode().load(u).attachTo(G);\r\n                    });\r\n                }\r\n                else {\r\n                    G.load(urls);\r\n                }\r\n            }\r\n\r\n            if (N.toYup) G.setYup();\r\n\r\n            if (N.description) G.setDescription(N.description);\r\n            if (N.audio) G.setAudio(N.audio);\r\n\r\n            // Keywords\r\n            if (N.keywords) G.kwords = N.keywords;\r\n\r\n            // Sphere [x,y,z, r]\r\n            let spheres = N.spheres;\r\n            if (Array.isArray(spheres)){\r\n                for (let s in spheres){\r\n                    let S = spheres[s];\r\n                    let loc = new THREE.Vector3(parseFloat(S[0]),parseFloat(S[1]),parseFloat(S[2]));\r\n                    ATON.SemFactory.createSphere(nid, loc, parseFloat(S[3]));\r\n                }\r\n            }\r\n\r\n            let convexshapes = N.convexshapes;\r\n            if (Array.isArray(convexshapes)){\r\n                for (let s in convexshapes){\r\n                    let S = convexshapes[s];\r\n\r\n                    let points = [];\r\n                    for (let i=0; i<S.length; i+=3){\r\n                        let p = new THREE.Vector3(S[i],S[i+1],S[i+2]);\r\n                        points.push(p);\r\n                    }\r\n\r\n                    ATON.SemFactory.createConvexShape(nid, points);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        // Build relationships\r\n        for (let parid in edges){\r\n            let children = edges[parid];\r\n\r\n            let P = ATON.getSemanticNode(parid);\r\n\r\n            if (P !== undefined){\r\n                for (let c in children){\r\n                    let childid = children[c];\r\n                    let C = ATON.getSemanticNode(childid);\r\n                    if (C !== undefined) C.attachTo(P);\r\n                }\r\n            }\r\n        }\r\n\r\n        // After connection\r\n        for (let nid in nodes){\r\n            let N = nodes[nid]; // JSON node\r\n            let G = ATON.getSemanticNode(nid);\r\n\r\n            if (G !== undefined){\r\n                if (N.show !== undefined){\r\n                    //console.log(N.show);\r\n\r\n                    if (N.show){ G.show(); console.log(\"show \"+nid); }\r\n                    else { G.hide(); console.log(\"hide \"+nid); }\r\n                    //console.log(ATON.getSemanticNode(nid));\r\n                }\r\n\r\n                if (N.nopicking){ G.disablePicking(); }\r\n\r\n                if (N.material){\r\n                    let mat = new THREE.MeshStandardMaterial(N.material);\r\n                    G.setMaterial( mat );\r\n                }\r\n            }\r\n        }\r\n\r\n/*\r\n        for (let e = 0; e < edges.length; e++){\r\n            let E = edges[e];\r\n\r\n            let from = E[0];\r\n            let to   = E[1];\r\n\r\n            if (from && to){\r\n                let child = ATON.getSemanticNode(to);\r\n                if (child) child.attachTo(from);\r\n            }\r\n        }\r\n*/\r\n    };\r\n\r\n};\r\n\r\n// Adds custom scene parser to extend JSON scene\r\n// parser(key){ ... }\r\nSceneHub.addSceneParser = (key, parser)=>{\r\n    SceneHub._jsonParsers[key] = parser;\r\n};\r\n\r\n// [C] Sends JSON edit to server node\r\n// previously used: https://tools.ietf.org/html/rfc6902\r\nSceneHub.sendEdit = (patch, mode, onComplete)=>{\r\n    if (SceneHub._bLoading || !SceneHub._bEdit) return;\r\n    if (patch === undefined) return;\r\n    if (mode === undefined) mode = SceneHub.MODE_ADD;\r\n\r\n    let sid = SceneHub.currID;\r\n\r\n    let O = {};\r\n    O.sid  = sid;\r\n    O.data = patch;\r\n    O.mode = (mode === SceneHub.MODE_DEL)? \"DEL\" : \"ADD\";\r\n\r\n    let jstr = JSON.stringify(O);\r\n    //console.log(jstr);\r\n\r\n    $.ajax({\r\n        url: ATON.PATH_RESTAPI+\"edit/scene\",\r\n        type:\"POST\",\r\n        data: jstr,\r\n        contentType:\"application/json; charset=utf-8\",\r\n        dataType:\"json\",\r\n\r\n        // Update local scene JSON\r\n        // TODO: improve traffic by applying patch to local json, and NOT by receiving entire JSON \r\n        success: (r)=>{\r\n            //console.log(r);\r\n            if (r) SceneHub.currData = r;\r\n            //console.log(ATON.currSceneHub.data);\r\n\r\n            if (onComplete) onComplete();\r\n        }\r\n    });\r\n};\r\n\r\nSceneHub.setTitle = (title)=>{\r\n    SceneHub._title = title;\r\n};\r\nSceneHub.getTitle = ()=>{\r\n    return SceneHub._title;\r\n}\r\n\r\nSceneHub.setDescription = (descr)=>{\r\n    SceneHub._descr = descr;\r\n};\r\nSceneHub.getDescription = ()=>{\r\n    return SceneHub._descr;\r\n};\r\n\r\n\r\nexport default SceneHub;","/*\r\n    ATON Audio Hub\r\n    Centralized Audio/Soundscape\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Audio Hub\r\n@namespace AudioHub\r\n*/\r\nlet AudioHub = {};\r\n\r\n// Realize the hub\r\nAudioHub.init = ()=>{\r\n\r\n    AudioHub._listener = new THREE.AudioListener();\r\n    AudioHub._loader   = new THREE.AudioLoader();\r\n};\r\n\r\nAudioHub.playOnceGlobally = (audioURL)=>{\r\n    audioURL = ATON.Utils.resolveCollectionURL(audioURL);\r\n\r\n    let au = new THREE.Audio( ATON.AudioHub._listener );\r\n\r\n    AudioHub._loader.load( audioURL, (buffer)=>{\r\n        au.setBuffer( buffer );\r\n        //au.setVolume( 2.0 );\r\n        //au.setPlaybackRate(0.9);\r\n        au.play();\r\n    });\r\n};\r\n\r\n/* TODO:\r\nAudioHub.addToSoundscape = (auid, audioURL, position, radius)=>{\r\n\r\n    AudioHub._loader.load( audioURL, (buffer)=>{\r\n        A._auTalk.setBuffer( buffer );\r\n        A._auTalk.setLoop( false );\r\n        //A._auTalk.setVolume( 0.5 );\r\n        //A._auTalk.setPlaybackRate(0.9);\r\n        A._auTalk.play();\r\n    });\r\n};\r\n*/\r\nexport default AudioHub;","/*\r\n    ATON Navigation system\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nconst COSINOIDAL_DIST = function(x){ return (1.0 - Math.cos(x * Math.PI)) / 2.0; };\r\n\r\n/**\r\nATON Navigation system\r\n@namespace Nav\r\n*/\r\nlet Nav = {};\r\n\r\n// Consts\r\nNav.STD_FOV  = 50.0;\r\nNav.STD_NEAR = 0.01; //0.05;\r\nNav.STD_FAR  = 800.0; // 1000\r\n\r\nNav.FP_EPS = 0.01;\r\nNav.STD_POV_TRANS_DURATION = 2.0;\r\n\r\n// Non-immersive navigation controls\r\nNav.MODE_ORBIT  = 0;\r\nNav.MODE_FP     = 1;\r\nNav.MODE_DEVORI = 2;\r\n\r\n\r\n//Initialize nav system\r\nNav.init = ()=>{\r\n    Nav._mode = undefined;\r\n    Nav.POVtransitionDuration = Nav.STD_POV_TRANS_DURATION;\r\n\r\n    Nav._rotSpeedOrbit = 0.4;\r\n    Nav._rotSpeedFP    = -0.2;\r\n    Nav._inertia       = 0.08; // 0.0 = disabled\r\n\r\n    Nav._bControl = true; // user control\r\n\r\n    Nav._bInteracting = false;\r\n\r\n    // Setup controls\r\n    //Nav._camera = new THREE.PerspectiveCamera( Nav.STD_FOV, window.innerWidth / window.innerHeight, Nav.STD_NEAR, Nav.STD_FAR );\r\n    //Nav._camera.layers.enableAll();\r\n    //Nav._controls = new THREE.OrbitControls( Nav._camera, ATON._renderer.domElement);\r\n\r\n    Nav._prevMode = undefined;\r\n    Nav.setOrbitControl();\r\n\r\n    // POV data\r\n    Nav._currPOV = new ATON.POV().setFOV(ATON.Nav.STD_FOV); // holds current viewpoint data (eye, target, etc...)\r\n    Nav._fromPOV = new ATON.POV(); // initial POV when requesting a transition\r\n    Nav._reqPOV  = new ATON.POV(); // requested POV for transition\r\n\r\n    Nav.homePOV = undefined; //new ATON.POV();\r\n\r\n    Nav._tPOVcall = -1.0;\r\n    Nav._tPOVprogress = 0.0;\r\n\r\n    Nav.povlist = {}; // This will handle registered POVs\r\n\r\n    // World direction and orientation (quat)\r\n    // consistent within standard and immersive XR\r\n    Nav._vDir = new THREE.Vector3(1,0,0);\r\n    Nav._qOri = new THREE.Quaternion();\r\n\r\n    // Motion\r\n    Nav._motionAmt = 0.0;\r\n    Nav._motionDir = new THREE.Vector3(0,1,0);\r\n\r\n    // Queried scene location is valid for locomotion\r\n    Nav._bValidLocomotion = false;\r\n};\r\n\r\n/**\r\nGet current eye location, consistent within standard and immersive XR sessions.\r\n@returns {THREE.Vector3}\r\n@example\r\nlet p = ATON.Nav.getCurrentEyeLocation();\r\n*/\r\nNav.getCurrentEyeLocation = ()=>{\r\n    return Nav._currPOV.pos;\r\n};\r\n\r\n/**\r\nGet current view direction (normalized). Consistent within standard and immersive XR sessions.\r\n@returns {THREE.Vector3}\r\n@example\r\nlet d = ATON.Nav.getCurrentDirection();\r\n*/\r\nNav.getCurrentDirection = ()=>{\r\n    return Nav._vDir;\r\n};\r\n\r\n/**\r\nGrab current POV and return a copy.\r\n@returns {POV}\r\n@example\r\nlet pov = ATON.Nav.copyCurrentPOV();\r\n*/\r\nNav.copyCurrentPOV = ()=>{\r\n    let pov = new ATON.POV();\r\n    pov.pos.copy(Nav._currPOV.pos);\r\n    pov.target.copy(Nav._currPOV.target);\r\n    pov.fov = Nav._currPOV.fov;\r\n\r\n    return pov;\r\n};\r\n\r\nNav.addPOV = (pov, id)=>{\r\n    if (pov === undefined) return;\r\n\r\n    pov.as(id);\r\n    return pov;\r\n};\r\n\r\n/**\r\nReturn true if the navigation system is currently performing a transition\r\n@returns {boolean}\r\n*/\r\nNav.isTransitioning = ()=>{\r\n    if (Nav._tPOVcall >= 0.0) return true;\r\n    return false;\r\n};\r\n\r\n/**\r\nReturn true if currently queried scene location is valid for locomotion\r\n@returns {boolean}\r\n*/\r\nNav.currentQueryValidForLocomotion = ()=>{\r\n    return Nav._bValidLocomotion;\r\n};\r\n\r\n/**\r\nThis is used to validate current queried location for locomotion.\r\nBy default, we exploit surface normal to determine if we can move there or not.\r\nYou can replace this function with your own locomotion validator.\r\n*/\r\nNav.locomotionValidator = ()=>{\r\n    if (ATON._queryDataScene === undefined){\r\n        Nav._bValidLocomotion = false;\r\n        return;\r\n    }\r\n\r\n    let P = ATON._queryDataScene.p;\r\n    let N = ATON._queryDataScene.n;\r\n\r\n    if (N.y <= 0.7){\r\n        Nav._bValidLocomotion = false;\r\n        return;\r\n    }\r\n\r\n    Nav._bValidLocomotion = true;\r\n}\r\n\r\n/**\r\nEnable/disable user navigation control\r\n@param {boolean} b - false to lock controls, true to unlock\r\n*/\r\nNav.setUserControl = (b)=>{\r\n    if (b === undefined) return;\r\n    if (b === Nav._bControl) return;\r\n\r\n    Nav._bControl = b;\r\n\r\n    if (Nav._controls !== undefined) Nav._controls.enabled = b;\r\n\r\n    if (Nav._cOrbit) Nav._cOrbit.enabled = b;\r\n    if (Nav._cFirstPerson) Nav._cFirstPerson.enabled = b;\r\n\r\n    console.log(\"Nav controls: \"+Nav._bControl);\r\n};\r\n\r\n/**\r\nToggle user control\r\n*/\r\nNav.toggleUserControl = ()=>{\r\n    Nav.setUserControl(!Nav._bControl);\r\n};\r\n\r\n/**\r\nReturn true if navigation controls are enabled (i.e. the user can control the camera)\r\n@returns {boolean}\r\n*/\r\nNav.isUserControlEnabled = ()=>{\r\n    return Nav._bControl;\r\n};\r\n\r\n/**\r\nReturn true if the navigation system is in Orbit mode\r\n@returns {boolean}\r\n*/\r\nNav.isOrbit = ()=>{ return (Nav._mode === Nav.MODE_ORBIT); };\r\n\r\n/**\r\nReturn true if the navigation system is in First-person mode\r\n@returns {boolean}\r\n*/\r\nNav.isFirstPerson = ()=>{ return (Nav._mode === Nav.MODE_FP); };\r\n\r\n/**\r\nReturn true if the navigation system is in Device-orientation mode\r\n@returns {boolean}\r\n*/\r\nNav.isDevOri = ()=>{ return (Nav._mode === Nav.MODE_DEVORI); };\r\n\r\n/**\r\nSet Navigation mode\r\n@param {number} navmode - navigation mode (0: Orbit, 1: FirstPerson, 2: DeviceOrientation)\r\n*/\r\nNav.setNavMode = (navmode)=>{\r\n    if (navmode === undefined) return;\r\n\r\n    if (navmode === Nav.MODE_ORBIT)  Nav.setOrbitControl();\r\n    if (navmode === Nav.MODE_FP)     Nav.setFirstPersonControl();\r\n    if (navmode === Nav.MODE_DEVORI) Nav.setDeviceOrientationControl();\r\n};\r\n\r\n/**\r\nRestore previously used navigation mode.\r\nIf no previous nav mode is found, defaults to Orbit Control\r\n*/\r\nNav.restorePreviousNavMode = ()=>{\r\n    if (Nav._prevMode === undefined) Nav.setOrbitControl();\r\n\r\n    Nav.setNavMode(Nav._prevMode);\r\n};\r\n\r\n/**\r\nSet Orbit navigation mode (default)\r\n*/\r\nNav.setOrbitControl = ()=>{\r\n    if (ATON.XR.isPresenting()) return;\r\n\r\n    Nav._prevMode = Nav._mode; // store previous nav mode\r\n\r\n    Nav._mode = Nav.MODE_ORBIT;\r\n    Nav._bInteracting = false;\r\n\r\n    // One-time setup\r\n    if (Nav._cOrbit === undefined){\r\n        Nav._camOrbit = new THREE.PerspectiveCamera( Nav.STD_FOV, window.innerWidth / window.innerHeight, Nav.STD_NEAR, Nav.STD_FAR );\r\n        Nav._camOrbit.layers.enableAll();\r\n\r\n        Nav._cOrbit = new THREE.OrbitControls( Nav._camOrbit, ATON._renderer.domElement);\r\n\r\n        let C = Nav._cOrbit;\r\n\r\n        C.rotateSpeed   = Nav._rotSpeedOrbit;\r\n        C.enablePan     = true;\r\n        \r\n        if (Nav._inertia > 0.0){\r\n            C.enableDamping = true;\r\n            C.dampingFactor = Nav._inertia;\r\n        }\r\n        \r\n        C.screenSpacePanning = true;\r\n        \r\n        C.enableZoom  = true;\r\n        C.minDistance = 0.03;\r\n        C.maxDistance = 100.0;\r\n\r\n        if (!Nav._bControl) C.enabled = false;\r\n\r\n        //C.addEventListener(\"change\", () => { Nav._bChanged = true; });\r\n        C.addEventListener(\"start\",()=>{\r\n            Nav._bInteracting = true;\r\n        });\r\n        C.addEventListener(\"end\",()=>{\r\n            Nav._bInteracting = false;\r\n        });\r\n\r\n    }\r\n\r\n    Nav._controls = Nav._cOrbit;\r\n    //Nav._controls.target.copy(Nav._camera.position);\r\n    Nav._camera = Nav._camOrbit;\r\n\r\n    // reparent audio listener\r\n    if (ATON.AudioHub._listener && Nav._camera.children.length<1) Nav._camera.add( ATON.AudioHub._listener );\r\n\r\n    // Update TSets camera\r\n    ATON.Utils.updateTSetsCamera();\r\n    \r\n    Nav._controls.update();\r\n    if (Nav._currPOV) Nav.syncCurrCamera();\r\n\r\n    ATON._onResize();\r\n\r\n    ATON.fireEvent(\"NavMode\", Nav._mode);\r\n};\r\n\r\n/**\r\nSet First-Person navigation mode\r\n*/\r\nNav.setFirstPersonControl = ()=>{\r\n    if (ATON.XR.isPresenting()) return;\r\n\r\n    Nav._prevMode = Nav._mode; // store previous nav mode\r\n\r\n    if (ATON.SUI.getSelectorRadius()>0.5) ATON.SUI.setSelectorRadius(0.5); // we (re)set selector radius to 50cm\r\n\r\n    Nav._mode = Nav.MODE_FP;\r\n    Nav._bInteracting = false;\r\n\r\n    // One-time setup\r\n    if (Nav._cFirstPerson === undefined){\r\n        Nav._camFP = new THREE.PerspectiveCamera( Nav.STD_FOV, window.innerWidth / window.innerHeight, Nav.STD_NEAR, Nav.STD_FAR );\r\n        Nav._camFP.layers.enableAll();\r\n\r\n        Nav._cFirstPerson = new THREE.OrbitControls( Nav._camFP, ATON._renderer.domElement);\r\n\r\n        let C = Nav._cFirstPerson;\r\n\r\n        C.enableZoom  = false;\r\n        C.enablePan   = false;\r\n        C.rotateSpeed = Nav._rotSpeedFP;\r\n        \r\n        if (Nav._inertia > 0.0){\r\n            C.enableDamping = true;\r\n            C.dampingFactor = Nav._inertia;\r\n        }\r\n        \r\n        //C.screenSpacePanning = true;\r\n\r\n        C.target.copy(Nav._camera.position);\r\n\r\n        C.minDistance = 0.01;\r\n        C.maxDistance = 0.01;\r\n\r\n        if (!Nav._bControl) C.enabled = false;\r\n    }\r\n\r\n    Nav._controls = Nav._cFirstPerson;\r\n    //Nav._controls.target.copy(Nav._camera.position);\r\n    Nav._camera = Nav._camFP;\r\n\r\n    // reparent audio listener\r\n    if (ATON.AudioHub._listener && Nav._camera.children.length<1) Nav._camera.add( ATON.AudioHub._listener );\r\n    \r\n    // Update TSets camera\r\n    ATON.Utils.updateTSetsCamera();\r\n\r\n    Nav._controls.update();\r\n    if (Nav._currPOV) Nav.syncCurrCamera();\r\n\r\n    ATON._onResize();\r\n\r\n    ATON.fireEvent(\"NavMode\", Nav._mode);\r\n/*\r\n    if (Nav._controls) ATON._controls.dispose();\r\n    ATON._controls = new THREE.FirstPersonControls( ATON._camera, ATON._renderer.domElement);\r\n    ATON._controls.lookSpeed = 0.1;\r\n    ATON._controls.movementSpeed = 10;\r\n    ATON._controls.noFly = true;\r\n    ATON._controls.lookVertical = false;\r\n\r\n    //ATON._camera.position.set( 20.0, 5.0, 0 );\r\n    ATON._controls.lookAt(0,4,0);\r\n\r\n    ATON._controls.update();\r\n    console.log(ATON._controls);\r\n*/\r\n};\r\n\r\n/**\r\nSet device-orientation navigation mode\r\n*/\r\nNav.setDeviceOrientationControl = ()=>{\r\n    if (!ATON.Utils.isMobile()) return;\r\n\r\n    Nav._prevMode = Nav._mode; // store previous nav mode\r\n\r\n    Nav._mode = Nav.MODE_DEVORI;\r\n    Nav._bInteracting = false;\r\n    ATON._screenPointerCoords.set(0.0,0.0);\r\n\r\n    // One-time setup\r\n    if (Nav._cDevOri === undefined){\r\n        Nav._camDevOri = new THREE.PerspectiveCamera( Nav.STD_FOV, window.innerWidth / window.innerHeight, Nav.STD_NEAR, Nav.STD_FAR );\r\n        Nav._camDevOri.layers.enableAll();\r\n\r\n        Nav._cDevOri = new THREE.DeviceOrientationControls(Nav._camDevOri, ATON._renderer.domElement);\r\n        //Nav._cDevOri = new Nav.DeviceOrientationControls(Nav._camDevOri, ATON._renderer.domElement);\r\n\r\n        Nav._cDevOri.alphaOffset = 0.0; //The alpha offset in radians\r\n    }\r\n\r\n    Nav._controls = Nav._cDevOri;\r\n    Nav._camera   = Nav._camDevOri;\r\n\r\n    // reparent audio listener\r\n    if (ATON.AudioHub._listener && Nav._camera.children.length<1) Nav._camera.add( ATON.AudioHub._listener );\r\n\r\n    // Update TSets camera\r\n    ATON.Utils.updateTSetsCamera();\r\n\r\n    Nav._controls.update();\r\n    if (Nav._currPOV) Nav.syncCurrCamera();\r\n\r\n    ATON._onResize();\r\n    \r\n    ATON.fireEvent(\"NavMode\", Nav._mode);\r\n};\r\n\r\n/**\r\nSet a motion amount\r\n@param {number} f - the motion amount\r\n@example\r\nATON.Nav.setMotionAmount(0.1);\r\n*/\r\nNav.setMotionAmount = (f)=>{\r\n    Nav._motionAmt = f;\r\n};\r\n\r\n/**\r\nSet a motion direction\r\n@param {THREE.Vector3} f - the motion direction\r\n@example\r\nATON.Nav.setMotionDirection( new THREE.Vector(1,0,0) );\r\n*/\r\nNav.setMotionDirection = (v)=>{\r\n    Nav._motionDir.copy(v);\r\n}\r\n\r\n/**\r\nStop current motion\r\n*/\r\nNav.stop = ()=>{\r\n    Nav._motionAmt = 0.0;\r\n    //TODO: stop any transition\r\n};\r\n\r\n/**\r\nSet field-of-view (FoV) in degrees\r\n@param {number} f\r\n@example\r\nATON.Nav.setFOV(30.0);\r\n*/\r\nNav.setFOV = (f)=>{\r\n    if (ATON.XR.isPresenting()) return; // skip for immersive sessions\r\n\r\n    Nav._currPOV.fov = f;\r\n\r\n    let cam = Nav._camera;\r\n    cam.fov = f;\r\n    cam.updateProjectionMatrix();\r\n};\r\n\r\n/**\r\nGet current field-of-view (FoV) in degrees\r\n@returns {number}\r\n*/\r\nNav.getFOV = ()=>{\r\n    return Nav._currPOV.fov;\r\n};\r\n\r\n\r\n// Retrieve currPOV from camera and controls\r\nNav.syncCurrPOV = ()=>{\r\n    if (ATON.XR.isPresenting()){\r\n        \r\n        ATON.XR._cam = ATON._renderer.xr.getCamera(Nav._camera);\r\n        //console.log(ATON.XR._cam);\r\n\r\n        ATON.XR._cam.getWorldPosition( Nav._currPOV.pos );\r\n        ATON.XR._cam.getWorldQuaternion( Nav._qOri );\r\n        ATON.XR._cam.getWorldDirection( Nav._vDir );\r\n\r\n\r\n        //Nav._currPOV.pos.copy(ATON.XR._cam.position);\r\n        //Nav._qOri.copy(ATON.XR._cam.quaternion);\r\n\r\n        //console.log(Nav._hmdPos);\r\n\r\n        //ATON.XR.hmdPos.copy(Nav._currPOV.pos);\r\n        //ATON.XR.hmdDir.copy(Nav._vDir);\r\n        \r\n        //ATON._renderer.xr.getCamera(Nav._camera);\r\n        //ATON._renderer.xr.getCamera(Nav._camera).getWorldDirection(Nav._vDir);\r\n        //Nav._camera.getWorldDirection(Nav._vDir);\r\n        \r\n        //Nav._currPOV.pos.copy(Nav._camera.position);\r\n        return;\r\n    }\r\n\r\n    const ctrl  = Nav._controls;\r\n    const cam   = Nav._camera;\r\n\r\n    cam.getWorldDirection(Nav._vDir);\r\n    cam.getWorldQuaternion(Nav._qOri);\r\n\r\n    if (Nav._mode === Nav.MODE_DEVORI){\r\n        Nav._currPOV.pos.copy(cam.position);\r\n        return;\r\n    }\r\n\r\n    if (Nav._mode === Nav.MODE_FP){\r\n        Nav._currPOV.pos.copy(ctrl.target);\r\n\r\n        Nav._currPOV.target.x = Nav._currPOV.pos.x + Nav._vDir.x; //ctrl.target.x - cam.position.x;\r\n        Nav._currPOV.target.y = Nav._currPOV.pos.y + Nav._vDir.y; //ctrl.target.y - cam.position.y;\r\n        Nav._currPOV.target.z = Nav._currPOV.pos.z + Nav._vDir.z; //ctrl.target.z - cam.position.z;\r\n        return;\r\n    }\r\n    \r\n    Nav._currPOV.pos.copy(cam.position);\r\n    Nav._currPOV.target.copy(ctrl.target);\r\n};\r\n\r\n// After syncCurrPOV and before updateCamera, we maniuplate currPOV\r\n//==================================================================================\r\nNav.handlePOV = ()=>{\r\n    //console.log(Nav._currPOV.pos);\r\n\r\n    if (ATON.XR.isPresenting()) Nav.handleXRtransition();\r\n    else Nav.handlePOVtransition();\r\n\r\n    //Nav.handleMotion();\r\n\r\n    //if (ATON.XR.isPresenting()) console.log(ATON._renderer.xr);\r\n\r\n    // Handle constraints\r\n\r\n};\r\n\r\n// Not used for now\r\nNav.handleMotion = ()=>{\r\n    if (Nav.isTransitioning()) return;\r\n\r\n    if (Nav._motionAmt != 0.0){\r\n\r\n        //if ()\r\n\r\n\r\n        if (ATON.XR.controller0 && ATON.XR.controller0.visible){\r\n            ATON.XR.controller0.getWorldDirection(Nav._motionDir);\r\n            Nav._motionDir.negate();\r\n            }\r\n        else Nav._motionDir.copy(Nav._vDir);\r\n\r\n        let fv = Nav._motionDir.clone();\r\n        fv.multiplyScalar(Nav._motionAmt * ATON._dt);\r\n\r\n        Nav._currPOV.pos.add(fv);\r\n        Nav._currPOV.target.add(fv); // check if needed\r\n    }\r\n};\r\n\r\nNav.handlePOVtransition = ()=>{\r\n    if (Nav._tPOVcall < 0.0) return;\r\n\r\n    if (Nav.POVtransitionDuration <= 0.0) Nav._tPOVprogress = 1.0;\r\n    else Nav._tPOVprogress = (ATON._clock.elapsedTime - Nav._tPOVcall) / Nav.POVtransitionDuration;\r\n\r\n    // End\r\n    if (Nav._tPOVprogress >= 1.0){\r\n\r\n        Nav._tPOVcall = -1.0;\r\n        //Nav._controls.enabled = true;\r\n\r\n        Nav._currPOV.pos.copy(Nav._reqPOV.pos);\r\n        Nav._currPOV.target.copy(Nav._reqPOV.target);\r\n        Nav._currPOV.fov = Nav._reqPOV.fov;\r\n\r\n        ATON.fireEvent(\"POVTransitionCompleted\", Nav._reqPOV.id);\r\n        return;\r\n    }\r\n\r\n    Nav._tPOVprogress = COSINOIDAL_DIST(Nav._tPOVprogress);\r\n\r\n    Nav._currPOV.pos.lerpVectors(Nav._fromPOV.pos, Nav._reqPOV.pos, Nav._tPOVprogress);\r\n    Nav._currPOV.target.lerpVectors(Nav._fromPOV.target, Nav._reqPOV.target, Nav._tPOVprogress);\r\n\r\n    if (!Nav._fromPOV.fov || !Nav._reqPOV.fov) return;\r\n    Nav._currPOV.fov = THREE.MathUtils.lerp(Nav._fromPOV.fov, Nav._reqPOV.fov, Nav._tPOVprogress);\r\n\r\n    //console.log(Nav._camera);\r\n\r\n    Nav._camera.fov = Nav._currPOV.fov;\r\n    Nav._camera.updateProjectionMatrix();\r\n};\r\n\r\n// Immersive XR transitions\r\nNav.handleXRtransition = ()=>{\r\n    if (Nav._tPOVcall < 0.0) return;\r\n\r\n    if (Nav.POVtransitionDuration <= 0.0) Nav._tPOVprogress = 1.0;\r\n    else Nav._tPOVprogress = (ATON._clock.elapsedTime - Nav._tPOVcall) / Nav.POVtransitionDuration;\r\n\r\n    // End\r\n    if (Nav._tPOVprogress >= 1.0){\r\n\r\n        Nav._tPOVcall = -1.0;\r\n        //Nav._controls.enabled = true;\r\n\r\n        //ATON.XR.setRefSpaceLocation(Nav._reqXRpos);\r\n        ATON.XR._currPos.copy(ATON.XR._reqPos);\r\n\r\n        console.log(\"XR height\"+ATON.XR._currPos.y);\r\n        console.log(\"HMD height\"+Nav._currPOV.pos.y);\r\n\r\n        ATON.fireEvent(\"POVTransitionCompleted\", Nav._reqPOV.id);\r\n        return;\r\n    }\r\n\r\n    ATON.XR._currPos.lerpVectors(ATON.XR._fromPos, ATON.XR._reqPos, Nav._tPOVprogress);\r\n    //ATON.XR._currPos.lerpVectors(Nav._fromPOV.pos, Nav._reqPOV.pos, Nav._tPOVprogress);\r\n\r\n};\r\n\r\n// Update internal camera from currPOV \r\nNav.syncCurrCamera = ()=>{\r\n    if (ATON.XR.isPresenting()) return;\r\n\r\n    let ctrl  = Nav._controls;\r\n    let cam   = Nav._camera;\r\n    \r\n    let pos = Nav._currPOV.pos;\r\n    let tgt = Nav._currPOV.target;\r\n\r\n    // We are in VR\r\n/*\r\n    if (ATON.XR.isPresenting()){\r\n        ///let vrcam = ATON.XR.rig;\r\n        ///vrcam.position.copy(pos);\r\n        \r\n        ///ATON.XR.setRefSpaceLocation(pos);\r\n\r\n        //let C = ATON._renderer.xr.getCamera(cam);\r\n        //C.getWorldDirection(Nav._vDir);\r\n        return;\r\n    }\r\n*/\r\n    if (Nav._mode === Nav.MODE_DEVORI){\r\n        cam.position.copy(pos);\r\n        return;\r\n    }\r\n\r\n    // Common controls\r\n    //let d = new THREE.Vector3();\r\n    Nav._vDir.subVectors(tgt, pos);\r\n    Nav._vDir.normalize();\r\n\r\n    if (Nav._mode === Nav.MODE_FP){\r\n        ctrl.target.copy(pos);\r\n\r\n        cam.position.x = ctrl.target.x - (Nav._vDir.x * Nav.FP_EPS);\r\n        cam.position.y = ctrl.target.y - (Nav._vDir.y * Nav.FP_EPS);\r\n        cam.position.z = ctrl.target.z - (Nav._vDir.z * Nav.FP_EPS);\r\n    }\r\n    else {\r\n        cam.position.copy(pos);\r\n        ctrl.target.copy(tgt);\r\n    }\r\n};\r\n\r\n// Main update routine\r\nNav.update = ()=>{\r\n\r\n    //Nav._bXR = ATON.XR.isPresenting();\r\n\r\n    Nav.syncCurrPOV();\r\n    Nav.handlePOV();\r\n    Nav.syncCurrCamera();\r\n};\r\n\r\n\r\n/**\r\nRequest transition to viewpoint (POV)\r\n@param {POV} pov - the target POV\r\n@param {number} duration - duration of transition in seconds (optional), otherwise use standard duration\r\n@example\r\nATON.Nav.requestPOV( myTargetPOV );\r\n*/\r\nNav.requestPOV = (pov, duration)=>{\r\n    if (ATON._tPOVcall >= 0.0) return; // already requested\r\n    if (pov === undefined) return;\r\n\r\n    ATON.fireEvent(\"POVTransitionRequested\", pov.id);\r\n\r\n    if (duration !== undefined) Nav.POVtransitionDuration = duration;\r\n    \r\n    //Nav._controls.enabled = false;\r\n\r\n    Nav._tPOVcall = ATON._clock.elapsedTime;\r\n    \r\n    if (ATON.XR.isPresenting()){\r\n        Nav._reqPOV.pos.copy(pov.pos? pov.pos : Nav._currPOV.pos);\r\n        Nav._fromPOV.pos.copy(Nav._currPOV.pos);\r\n\r\n        ATON.XR._reqPos.copy(pov.pos? pov.pos : Nav._currPOV.pos);\r\n        ATON.XR._fromPos.copy(ATON.XR._currPos);\r\n    }\r\n    else {\r\n        Nav._reqPOV.pos.copy(pov.pos? pov.pos : Nav._currPOV.pos);\r\n        Nav._reqPOV.target.copy( pov.target? pov.target : Nav._currPOV.target);\r\n        Nav._reqPOV.fov = pov.fov? pov.fov : Nav._currPOV.fov;\r\n\r\n        Nav._fromPOV.pos.copy(Nav._currPOV.pos);\r\n        Nav._fromPOV.target.copy(Nav._currPOV.target);\r\n        Nav._fromPOV.fov = Nav._currPOV.fov;\r\n    }\r\n};\r\n\r\n\r\nNav.requestPOVbyBound = (bs, duration)=>{\r\n    if (bs === undefined) return;\r\n\r\n    //let T = new THREE.Vector3();\r\n    let E = new THREE.Vector3();\r\n\r\n    //T.copy(bs.center);\r\n    \r\n    let r = bs.radius * 3.0;\r\n    E.x = bs.center.x - (r * Nav._vDir.x);\r\n    E.y = bs.center.y - (r * Nav._vDir.y);\r\n    E.z = bs.center.z - (r * Nav._vDir.z);\r\n\r\n    let pov = new ATON.POV().setPosition(E).setTarget(bs.center);    \r\n    Nav.requestPOV(pov, duration);\r\n};\r\n\r\n/**\r\nRequest transition to specific ATON Node\r\n@param {Node} n - the target ATON Node\r\n@param {number} duration - duration of transition in seconds (optional), otherwise use standard duration\r\n@example\r\nATON.Nav.requestPOVbyNode( myNode );\r\n*/\r\nNav.requestPOVbyNode = (n, duration)=>{\r\n    if (n === undefined) return;\r\n    \r\n    let bs = n.getBound();\r\n\r\n    Nav.requestPOVbyBound(bs,duration);\r\n};\r\n\r\nNav.requestRetarget = (point, normal, duration)=>{\r\n    let M = new THREE.Vector3();\r\n    if (normal === undefined){\r\n        M.lerpVectors(point, Nav._currPOV.pos, 0.8);\r\n    }\r\n    else {\r\n        let d = point.distanceTo(Nav._currPOV.pos);\r\n        d *= 0.5;\r\n        M.x = point.x + (normal.x * d);\r\n        M.y = point.y + (normal.y * d);\r\n        M.z = point.z + (normal.z * d);\r\n    }\r\n\r\n    let pov = new ATON.POV().setPosition(M).setTarget(point).setFOV(Nav._currPOV.fov);\r\n    console.log(pov);\r\n    \r\n    Nav.requestPOV(pov, duration);\r\n};\r\n\r\n\r\n/**\r\nCompute a default home, depending on visibile bounding sphere. Typically called after all assets are loaded\r\n@param {THREE.Vector3} dv - the normalized offset direction (optional)\r\n@example\r\nATON.Nav.computeDefaultHome();\r\n*/\r\nNav.computeDefaultHome = (dv)=>{\r\n    if (dv === undefined) dv = new THREE.Vector3(1,0.7,1);\r\n\r\n    let sceneBS = ATON.getRootScene().getBound();\r\n\r\n    let eye = new THREE.Vector3(\r\n        sceneBS.center.x + (sceneBS.radius * dv.x * 1.5), \r\n        sceneBS.center.y + (sceneBS.radius * dv.y * 1.5), \r\n        sceneBS.center.z + (sceneBS.radius * dv.z * 1.5)\r\n    );\r\n\r\n    Nav.homePOV = new ATON.POV().setPosition(eye).setTarget(sceneBS.center);\r\n};\r\n\r\n/** \r\nSet the home viewpoint (POV)\r\n@param {POV} pov - the home POV\r\n*/\r\nNav.setHomePOV = (pov)=>{\r\n    Nav.homePOV = pov;\r\n};\r\n\r\nNav.computeAndRequestDefaultHome = (duration, dv)=>{\r\n    Nav.computeDefaultHome(dv);\r\n    Nav.requestPOV(Nav.homePOV, duration);\r\n};\r\n\r\n/** \r\nRequest home viewpoint\r\n@param {number} duration - transition duration\r\n*/\r\nNav.requestHome = (duration)=>{\r\n    Nav.requestPOV(Nav.homePOV, duration);\r\n};\r\n\r\n/** \r\nSet and request home viewpoint\r\n@param {POV} pov - the home POV\r\n@param {number} duration - transition duration\r\n*/\r\nNav.setAndRequestHomePOV = (pov, duration)=>{\r\n    Nav.setHomePOV(pov);\r\n    Nav.requestPOV(pov, duration);\r\n};\r\n\r\n\r\n/*\r\nMobile devori (modified for absolute compass - UNSTABLE)\r\nauthor richt / http://richt.me\r\nauthor WestLangley / http://github.com/WestLangley\r\nW3C Device Orientation control (http://w3c.github.io/deviceorientation/spec-source-orientation.html)\r\n*/\r\nNav.DeviceOrientationControls = function ( object ) {\r\n    let scope = this;\r\n\r\n    this.object = object;\r\n    this.object.rotation.reorder( 'YXZ' );\r\n    this.enabled = true;\r\n\r\n    this.deviceOrientation = {};\r\n    this.screenOrientation = 0;\r\n\r\n    this.alphaOffset = 0; // radians\r\n    this.absolute = false;\r\n    this.alphaOffsetDevice = undefined;\r\n    this.alphaOffsetScreen = undefined;\r\n\r\n    let onDeviceOrientationChangeEvent = function ( event ) {\r\n        if(scope.absolute) return;\r\n        scope.deviceOrientation = event;\r\n    };\r\n\r\n    let onDeviceOrientationAbsoluteChangeEvent = function ( event ) {\r\n        scope.deviceOrientation = event;\r\n        scope.absolute = true;\r\n    };\r\n\r\n    let onScreenOrientationChangeEvent = function () {\r\n        scope.screenOrientation = window.orientation || 0;\r\n    };\r\n\r\n    // The angles alpha, beta and gamma form a set of intrinsic Tait-Bryan angles of type Z-X'-Y''\r\n    let setObjectQuaternion = function () {\r\n        let zee = new THREE.Vector3( 0, 0, 1 );\r\n        let euler = new THREE.Euler();\r\n\r\n        let q0 = new THREE.Quaternion();\r\n        let q1 = new THREE.Quaternion( - Math.sqrt( 0.5 ), 0, 0, Math.sqrt( 0.5 ) ); // - PI/2 around the x-axis\r\n\r\n        return function ( quaternion, alpha, beta, gamma, orient ) {\r\n            euler.set( beta, alpha, - gamma, 'YXZ' ); // 'ZXY' for the device, but 'YXZ' for us\r\n            quaternion.setFromEuler( euler ); // orient the device\r\n            quaternion.multiply( q1 ); // camera looks out the back of the device, not the top\r\n            quaternion.multiply( q0.setFromAxisAngle( zee, - orient ) ); // adjust for screen orientation\r\n        };\r\n\r\n    }();\r\n\r\n    this.connect = function () {\r\n        onScreenOrientationChangeEvent(); // run once on load\r\n\r\n        window.addEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\r\n        window.addEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\r\n        window.addEventListener( 'deviceorientationabsolute', onDeviceOrientationAbsoluteChangeEvent, false );\r\n\r\n        scope.enabled = true;\r\n    };\r\n\r\n    this.disconnect = function () {\r\n        window.removeEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\r\n        window.removeEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\r\n        window.removeEventListener( 'deviceorientationabsolute', onDeviceOrientationAbsoluteChangeEvent, false );\r\n\r\n        scope.enabled = false;\r\n    };\r\n\r\n    this.update = function () {\r\n        if ( scope.enabled === false ) return;\r\n\r\n        let device;\r\n        device = scope.deviceOrientation;\r\n\r\n        if ( device ) {\r\n            let alpha = this.getDirection() ? THREE.Math.degToRad( this.getDirection() ) + scope.alphaOffset : 0; // Z\r\n            let beta = device.beta ? THREE.Math.degToRad( device.beta ) : 0; // X'\r\n\r\n            let gamma = device.gamma ? THREE.Math.degToRad( device.gamma ) : 0; // Y''\r\n            let orient = scope.screenOrientation ? THREE.Math.degToRad( scope.screenOrientation ) : 0; // O\r\n\r\n            setObjectQuaternion( scope.object.quaternion, alpha, beta, gamma, orient );\r\n        }\r\n\r\n    };\r\n\r\n    this.dispose = ()=>{\r\n        scope.disconnect();\r\n    };\r\n\r\n    this.iOSOrientationPermission = ()=>{\r\n        if (typeof DeviceOrientationEvent.requestPermission === 'function') {\r\n            DeviceOrientationEvent.requestPermission().then(permissionState => {\r\n                if (permissionState === 'granted') {\r\n\r\n                }\r\n\r\n                console.log(permissionState);\r\n            }).catch(console.error);\r\n        }\r\n    }\r\n\r\n    this.getDirection = ()=>{\r\n        return (typeof scope.deviceOrientation.webkitCompassHeading != \"undefined\") ? scope.deviceOrientation.webkitCompassHeading : scope.deviceOrientation.alpha;\r\n    }\r\n\r\n    this.getDirectionMap = ()=>{\r\n        return (typeof scope.deviceOrientation.webkitCompassHeading != \"undefined\") ? (360 - scope.deviceOrientation.webkitCompassHeading) : scope.deviceOrientation.alpha;\r\n    }\r\n\r\n    this.connect();\r\n};\r\n\r\n\r\nexport default Nav;","/*\r\n    ATON immersive XR module\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Immersive XR\r\n@namespace XR\r\n*/\r\nlet XR = {};\r\n\r\nXR.STD_TELEP_DURATION = 0.03;\r\nXR.HAND_R = 0;\r\nXR.HAND_L = 1;\r\n\r\nXR.MOBILE_DENSITY_F = 0.5;\r\n\r\n\r\n//Initializes XR component\r\nXR.init = ()=>{\r\n    ATON._renderer.xr.enabled = true;\r\n    ATON._renderer.xr.setReferenceSpaceType( 'local' );\r\n    \r\n    // WebXR density\r\n    if (ATON.device.isMobile) ATON._renderer.xr.setFramebufferScaleFactor(ATON._stdpxd * XR.MOBILE_DENSITY_F);\r\n    else ATON._renderer.xr.setFramebufferScaleFactor(ATON._stdpxd);\r\n\r\n    XR._bPresenting = false;\r\n    XR.currSession = null;\r\n    XR._sessionType = \"immersive-vr\";\r\n\r\n    XR.rig = new THREE.Group();\r\n    //XR.rig.position.set(0,0,0);\r\n    XR.rig.add( ATON.Nav._camera );\r\n    ATON._rootUI.add(XR.rig);\r\n\r\n    //XR.hmdOri = new THREE.Quaternion();\r\n    //XR.hmdPos = new THREE.Vector3();\r\n\r\n    XR._cam = undefined;\r\n\r\n    XR._currPos = XR.rig.position; //new THREE.Vector3();\r\n    XR._fromPos = new THREE.Vector3();\r\n    XR._reqPos  = new THREE.Vector3();\r\n\r\n    XR.gControllers = undefined;\r\n\r\n    XR.controller0 = undefined;\r\n    XR.controller1 = undefined;\r\n\r\n    XR.controller0pos = new THREE.Vector3();\r\n    XR.controller1pos = new THREE.Vector3();\r\n    XR.controller0dir = new THREE.Vector3();\r\n    XR.controller1dir = new THREE.Vector3();\r\n\r\n    XR._lastPosR = undefined;\r\n    XR._lastPosL = undefined;\r\n\r\n    XR._pointerLineGeom = undefined;\r\n    XR._pointerLineMesh = undefined;\r\n\r\n    XR.gpad0 = undefined;\r\n    XR.gpad1 = undefined;\r\n\r\n    XR._urlHand = ATON.PATH_RES+\"models/hand/hand.glb\";\r\n\r\n    // Base ev\r\n    ATON.on(\"XRselectStart\", (c)=>{\r\n        if (c === XR.HAND_R) ATON._stdActivation(); //XR.defaultSelectHandler(c);\r\n    });\r\n    ATON.on(\"XRselectEnd\", (c)=>{\r\n        //ATON.Nav.stop();\r\n        //console.log(\"Sel end \"+c);\r\n    });\r\n\r\n    ATON.on(\"XRsqueezeStart\", (c)=>{\r\n        console.log(\"Squeeze \"+c);\r\n    });\r\n\r\n    ATON.on(\"VRC_IDassigned\", (uid)=>{\r\n        let rh = ATON.getUINode(\"Rhand\");\r\n        let lh = ATON.getUINode(\"Lhand\");\r\n\r\n        let avMats = ATON.MatHub.materials.avatars;\r\n        let am = avMats[uid % avMats.length];\r\n        if (lh) lh.setMaterial(am);\r\n        if (rh) rh.setMaterial(am);\r\n    });\r\n};\r\n\r\n\r\n/**\r\nSet session type\r\n@param {string} type - Can be \"immersive-vr\" or \"immersive-ar\"\r\n*/\r\nXR.setSessionType = (type)=>{\r\n    if (type === undefined) return;\r\n\r\n    XR._sessionType = type;\r\n    console.log(\"Session type: \"+type);\r\n};\r\n\r\n/**\r\nReturn true if we are presenting (immersive VR or AR)\r\n@returns {boolean}\r\n*/\r\nXR.isPresenting = ()=>{\r\n    return XR._bPresenting;\r\n};\r\n\r\n\r\nXR.teleportOnQueriedPoint = ()=>{\r\n    if (!ATON.Nav.currentQueryValidForLocomotion()) return false;\r\n\r\n    const P = ATON._queryDataScene.p;\r\n    //const N = ATON._queryDataScene.n;\r\n\r\n    // FIXME: height offset needed for \"local\", fill this automatically\r\n    ATON.Nav.requestPOV( new ATON.POV().setPosition(P.x, P.y + ATON.userHeight, P.z), XR.STD_TELEP_DURATION );\r\n    //ATON.Nav.requestPOV( new ATON.POV().setPosition(P.x, P.y, P.z), XR.STD_TELEP_DURATION );\r\n\r\n    return true;\r\n};\r\n\r\n/* Deprecated\r\nXR.defaultSelectHandler = (c)=>{\r\n\r\n    if (XR._sessionType === \"immersive-vr\") XR.teleportOnQueriedPoint();\r\n\r\n    ATON.FE.playAudioFromSemanticNode(ATON._hoveredSemNode);\r\n    \r\n    //ATON.Nav.setMotionAmount(3.0);\r\n};\r\n\r\nXR._handleUISelection = ()=>{\r\n    if (ATON._hoveredUI === undefined) return false;\r\n\r\n    let H = ATON.getUINode(ATON._hoveredUI);\r\n    if (H && H.onSelect) H.onSelect();\r\n    \r\n    return true;\r\n}\r\n*/\r\n\r\n// Helper routine to setup a ray-caster\r\nXR.setupQueryRay = (rc)=>{\r\n    if (rc === undefined) return;\r\n\r\n    // We have at least one 6DOF controller\r\n    if (XR.controller0) rc.set( XR.controller0pos, XR.controller0dir );\r\n\r\n    // else use HMD-aligned query\r\n    else rc.set( ATON.Nav.getCurrentEyeLocation(), ATON.Nav.getCurrentDirection() );\r\n};\r\n\r\n\r\n/**\r\nSet reference-space location (not the actual HMD camera location).\r\nThis can be used to move around the user, given a proper locomotion technique\r\n@param {THREE.Vector3} p - the new location of reference space\r\n*/\r\nXR.setRefSpaceLocation = (p)=>{\r\n    XR.rig.position.copy(p);\r\n};\r\n\r\n\r\n// Right\r\nXR._setupControllerR = (C, bAddRep)=>{\r\n    if (XR.controller0) return;\r\n\r\n    XR.controller0 = C;\r\n    console.log(\"R controller\");\r\n\r\n    // Main trigger\r\n    C.addEventListener( 'selectstart', ()=>{\r\n        //if (XR._handleUISelection()) return;\r\n\r\n        ATON.fireEvent(\"XRselectStart\", XR.HAND_R);\r\n    });\r\n    C.addEventListener( 'selectend', ()=>{ \r\n        ATON.fireEvent(\"XRselectEnd\", XR.HAND_R);\r\n    });\r\n\r\n    // Squeeze\r\n    C.addEventListener( 'squeezestart', ()=>{\r\n        ATON.fireEvent(\"XRsqueezeStart\", XR.HAND_R);\r\n    });\r\n    C.addEventListener( 'squeezeend', ()=>{\r\n        ATON.fireEvent(\"XRsqueezeEnd\", XR.HAND_R);\r\n    });\r\n\r\n    XR.setupControllerUI(XR.HAND_R, bAddRep);\r\n\r\n    ATON.fireEvent(\"XRcontrollerConnected\", XR.HAND_R);\r\n};\r\n\r\n// Left\r\nXR._setupControllerL = (C, bAddRep)=>{\r\n    if (XR.controller1) return;\r\n\r\n    XR.controller1 = C;\r\n    console.log(\"L controller\");\r\n\r\n    // Main trigger\r\n    C.addEventListener( 'selectstart',  ()=>{\r\n        //if (XR._handleUISelection()) return;\r\n        ATON.fireEvent(\"XRselectStart\", XR.HAND_L);\r\n    });\r\n    C.addEventListener( 'selectend',  ()=>{ \r\n        ATON.fireEvent(\"XRselectEnd\", XR.HAND_L);\r\n    });\r\n\r\n    // Squeeze\r\n    C.addEventListener( 'squeezestart', ()=>{\r\n        ATON.fireEvent(\"XRsqueezeStart\", XR.HAND_L);\r\n    });\r\n    C.addEventListener( 'squeezeend', ()=>{\r\n        ATON.fireEvent(\"XRsqueezeEnd\", XR.HAND_L);\r\n    });\r\n\r\n    XR.setupControllerUI(XR.HAND_L, bAddRep);\r\n    \r\n    ATON.fireEvent(\"XRcontrollerConnected\", XR.HAND_L);\r\n};\r\n\r\n// On XR session started\r\nXR.onSessionStarted = ( session )=>{\r\n    if (XR.currSession) return; // Already running\r\n\r\n\tsession.addEventListener( 'end', XR.onSessionEnded );\r\n\r\n    console.log(XR._sessionType + \" session started.\");\r\n\r\n    //console.log(session);\r\n\r\n    // If any streaming is ongoing, terminate it\r\n    ATON.MediaRec.stopMediaStreaming();\r\n\r\n    // Promised\r\n\tATON._renderer.xr.setSession( session ).then(()=>{\r\n        XR.currSession = session;\r\n        console.log(XR.currSession);\r\n\r\n        // Disable panorama on AR sessions\r\n        if (XR._sessionType === \"immersive-ar\"){\r\n            ATON._mainRoot.background = null;\r\n            if (ATON._mMainPano) ATON._mMainPano.visible = false;\r\n        }\r\n\r\n        // get xrRefSpace\r\n        /*\r\n        session.requestReferenceSpace('local').then((refSpace) => {\r\n            xrRefSpace = refSpace.getOffsetReferenceSpace(new XRRigidTransform({x: 0, y: 1.5, z: 0}));\r\n        });\r\n        */\r\n\r\n        for (let c = 0; c < 2; c++){\r\n            const C = ATON._renderer.xr.getController(c);\r\n\r\n            if (C !== undefined && !C.userData.bXRconfig){\r\n                //console.log(C);\r\n\r\n                C.visible = false;\r\n                C.userData.bXRconfig = true;\r\n\r\n                C.addEventListener( 'connected', (e) => {\r\n                    //console.log( e.data.handedness );\r\n                    let hand = e.data.handedness;\r\n                    \r\n                    //console.log(e.data);\r\n                    console.log(\"Hand \"+hand);\r\n\r\n                    if (hand === \"left\")  XR._setupControllerL(C, true);\r\n                    else {\r\n                        if (hand === \"right\") XR._setupControllerR(C, true);\r\n                        else { // FIXME:\r\n\r\n                            //XR._setupControllerR(C, false);\r\n                            \r\n                            C.addEventListener('selectstart', ()=>{\r\n                                //if (XR._handleUISelection()) return;\r\n                                ATON.fireEvent(\"XRselectStart\", XR.HAND_R);\r\n                                \r\n                                console.log(\"Head-aligned select\");\r\n                            });\r\n                            C.addEventListener('selectend', ()=>{ \r\n                                ATON.fireEvent(\"XRselectEnd\", XR.HAND_R);\r\n                            });\r\n\r\n                            ATON.fireEvent(\"XRcontrollerConnected\", XR.HAND_R);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n    /*\r\n        let C0 = ATON._renderer.xr.getController(0);\r\n        let C1 = ATON._renderer.xr.getController(1);\r\n\r\n        console.log(C0);\r\n        //ATON.VRoadcast.log(JSON.stringify(C0));\r\n\r\n        // Controller 0\r\n        if (C0){\r\n            C0.visible = false;\r\n\r\n            C0.addEventListener( 'connected', (e) => {\r\n\r\n                //console.log( e.data.handedness );\r\n\r\n                if (e.data.handedness === \"left\") XR._setupControllerL(C0);\r\n                else XR._setupControllerR(C0);\r\n\r\n                //C0.gamepad = e.data.gamepad;\r\n                //console.log(XR.controller0.gamepad);\r\n\r\n                //ATON.VRoadcast.log(JSON.stringify(e));\r\n\r\n                //let gp = C0.gamepad;\r\n                //if (gp.pose && gp.pose.hasPosition) C0.visible = true;\r\n\r\n            });\r\n        }\r\n\r\n        // Controller 1\r\n        if (C1){\r\n            C1.visible = false;\r\n\r\n            C1.addEventListener( 'connected', (e) => {\r\n                //console.log( e.data.handedness );\r\n\r\n                if (e.data.handedness === \"left\") XR._setupControllerL(C1);\r\n                else XR._setupControllerR(C1);\r\n\r\n                //C1.gamepad = e.data.gamepad;\r\n                \r\n                //let gp = C1.gamepad;\r\n                //if (gp.pose && gp.pose.hasPosition) C1.visible = true;\r\n\r\n            });\r\n        }\r\n    */\r\n\r\n        // reparent current camera to the XR rig\r\n        XR.rig.add( ATON.Nav._camera );\r\n\r\n        XR.setRefSpaceLocation(ATON.Nav._currPOV.pos);\r\n        console.log(ATON.Nav._currPOV.pos);\r\n\r\n        XR._bPresenting = true;\r\n        console.log(\"XR now presenting\");\r\n\r\n        //XR.setupControllersUI();\r\n\r\n        ATON.fireEvent(\"XRmode\", true);\r\n\r\n        // for immersive sessions we (re)set selector radius to 50cm\r\n        if (ATON.SUI.getSelectorRadius()>0.5) ATON.SUI.setSelectorRadius(0.5);\r\n\r\n        //console.log(session);\r\n\r\n        let C = ATON._renderer.xr.getCamera();\r\n        ATON.Utils.updateTSetsCamera( C );\r\n\r\n        // FIXME: needed bc selector 0.5 radius is not applied\r\n        setTimeout( ()=>{\r\n            //ATON.Utils.updateTSetsCamera();\r\n            if (ATON.SUI.getSelectorRadius()>0.5) ATON.SUI.setSelectorRadius(0.5);\r\n        }, 2000);\r\n    });\r\n};\r\n\r\n// On XR session terminated\r\nXR.onSessionEnded = ( /*event*/ )=>{\r\n    XR.currSession.removeEventListener( 'end', XR.onSessionEnded );\r\n    XR.currSession = null;\r\n\r\n    XR._bPresenting = false;\r\n    //XR.rig.position.set(0.0,0.0,0.0);\r\n    XR.setRefSpaceLocation( new THREE.Vector3(0,0,0) );\r\n\r\n    ATON.fireEvent(\"XRmode\", false);\r\n\r\n    // If any streaming is ongoing, terminate it\r\n    ATON.MediaRec.stopMediaStreaming();\r\n\r\n    ATON.Nav.requestHome();\r\n\r\n    ATON.Utils.updateTSetsCamera();\r\n\r\n    console.log(\"Quit XR\");\r\n};\r\n\r\n/**\r\nToggle immersive mode\r\n*/\r\nXR.toggle = ()=>{\r\n    if (!ATON.device.xrSupported[XR._sessionType]) return;\r\n\r\n    // Enter XR\r\n    if (XR.currSession === null){\r\n        let sessionInit = {\r\n            optionalFeatures: [\r\n                //\"local\",\r\n                //\"local-floor\",\r\n                ///\"bounded-floor\",\r\n\r\n                //\"hand-tracking\",\r\n\r\n                //\"high-refresh-rate\",\r\n                //\"high-fixed-foveation-level\",\r\n            ]\r\n\r\n        };\r\n        navigator.xr.requestSession( XR._sessionType, sessionInit ).then( XR.onSessionStarted );\r\n        //console.log(navigator.xr);\r\n    }\r\n    // Exit XR\r\n    else {\r\n        XR.currSession.end();\r\n    }\r\n};\r\n\r\nXR.setupControllerUI = (h, bAddRep)=>{\r\n    let raytick = 0.003;\r\n    let raylen  = 1.0;\r\n\r\n    let rhand = undefined;\r\n    let lhand = undefined;\r\n\r\n    //console.log(\"Setup controller \"+h);\r\n\r\n    if (XR.gControllers === undefined){\r\n        XR.gControllers = ATON.createUINode();\r\n\r\n        XR.gControllers.disablePicking();\r\n        XR.rig.add(XR.gControllers);\r\n    }\r\n\r\n    // Left\r\n    if (h === XR.HAND_L){\r\n        XR.gControllers.add( XR.controller1 );\r\n\r\n        if (bAddRep){\r\n            lhand = ATON.createUINode(\"Lhand\").load(XR._urlHand).setMaterial(ATON.MatHub.materials.controllerRay).setScale(-1,1,1);\r\n            XR.controller1.add(lhand);\r\n        }\r\n    }\r\n    // Right\r\n    else {\r\n        XR.gControllers.add( XR.controller0 );\r\n\r\n        if (bAddRep){\r\n            XR._pointerLineGeom = new THREE.CylinderBufferGeometry( raytick,raytick, raylen, 4 );\r\n            //XR._pointerLineGeom = new THREE.CylinderGeometry( raytick,raytick, raylen, 4 );\r\n\r\n            XR._pointerLineGeom.rotateX( -Math.PI / 2 );\r\n            XR._pointerLineGeom.translate(0,0,-(raylen*0.5));\r\n\r\n            XR._pointerLineMesh = new THREE.Mesh( XR._pointerLineGeom, ATON.MatHub.materials.controllerRay );\r\n            XR.controller0.add( /*mesh.clone()*/ XR._pointerLineMesh );\r\n            XR._pointerLineMesh.visible = false;\r\n        \r\n            rhand = ATON.createUINode(\"Rhand\").load(XR._urlHand).setMaterial(ATON.MatHub.materials.controllerRay);\r\n            XR.controller0.add(rhand);\r\n        }\r\n    }\r\n\r\n    // We are connected to VRoadcast\r\n    if (ATON.VRoadcast.uid !== undefined && bAddRep){\r\n        let avMats = ATON.MatHub.materials.avatars;\r\n        let am = avMats[ATON.VRoadcast.uid % avMats.length];\r\n        if (h === XR.HAND_L) lhand.setMaterial(am);\r\n        else rhand.setMaterial(am);\r\n    }\r\n};\r\n\r\n// FIXME:\r\nXR.switchHands = ()=>{\r\n\r\n/*\r\n    let C0 = new THREE.Group();\r\n    for (let cr in XR.controller0.children){\r\n        C0.add(XR.controller0.children[cr]);\r\n    }\r\n\r\n    let C1 = new THREE.Group();\r\n    for (let cl in XR.controller1.children){\r\n        C1.add(XR.controller1.children[cl]);\r\n    }\r\n\r\n    //XR.controller1.removeChildren();\r\n    //XR.controller0.removeChildren();\r\n\r\n    return;\r\n\r\n    for (let c in C1.children){\r\n        XR.controller0.add(C1.children[c]);\r\n    }\r\n    for (let c in C0.children){\r\n        XR.controller1.add(C0.children[c]);\r\n    }\r\n*/\r\n    let H = XR.controller1;\r\n    XR.controller1 = XR.controller0;\r\n    XR.controller0 = H;\r\n\r\n    //XR.controller0 = ATON._renderer.xr.getController(1);\r\n    //XR.controller1 = ATON._renderer.xr.getController(0);\r\n\r\n    for (let c in XR.controller0.children) XR.controller0.remove(XR.controller0.children[c]);\r\n    for (let c in XR.controller1.children) XR.controller1.remove(XR.controller1.children[c]);\r\n    XR.gControllers.removeChildren();\r\n\r\n    XR.setupControllerUI(XR.HAND_L);\r\n    XR.setupControllerUI(XR.HAND_R);\r\n\r\n    console.log(\"VR controllers switched\");\r\n};\r\n\r\n\r\n/* DEPRECATED\r\nXR.setupControllersUI = ()=>{\r\n    if (XR.gControllers) return; // already set\r\n\r\n    let raytick = 0.003;\r\n    let raylen  = 5.0;\r\n    var geometry = new THREE.CylinderBufferGeometry( raytick,raytick, raylen, 4 );\r\n    geometry.rotateX( -Math.PI / 2 );\r\n    geometry.translate(0,0,-(raylen*0.5));\r\n\r\n    var mesh = new THREE.Mesh( geometry, ATON.MatHub.materials.controllerRay );\r\n\r\n    XR.controller0.add( mesh.clone() );\r\n    //XR.controller1.add( mesh.clone() );\r\n\r\n    let vrcMatHands = (uid)=>{\r\n        let avMats = ATON.MatHub.materials.avatars;\r\n        if (avMats === undefined || uid === undefined) return;\r\n        \r\n        let am = avMats[uid % avMats.length];\r\n        rhand.setMaterial( am );\r\n        lhand.setMaterial( am );\r\n    };\r\n\r\n    // Hands\r\n    let handurl = ATON.PATH_RES+\"models/hand/hand.glb\";\r\n    let rhand = ATON.createUINode(\"Rhand\").load(handurl).setMaterial(ATON.MatHub.materials.controllerRay);\r\n    let lhand = ATON.createUINode(\"Lhand\").load(handurl).setMaterial(ATON.MatHub.materials.controllerRay).setScale(-1,1,1);\r\n    XR.controller0.add(rhand);\r\n    XR.controller1.add(lhand);\r\n\r\n    if (ATON.VRoadcast.uid) vrcMatHands(ATON.VRoadcast.uid);\r\n    ATON.on(\"VRC_IDassigned\", vrcMatHands);\r\n\r\n    XR.gControllers = ATON.createUINode();\r\n    XR.gControllers.add( XR.controller0 );\r\n    XR.gControllers.add( XR.controller1 );\r\n\r\n    XR.controller0.visible = false;\r\n    XR.controller1.visible = false;\r\n\r\n    XR.gControllers.disablePicking();\r\n\r\n    XR.rig.add(XR.gControllers);\r\n};\r\n*/\r\n\r\n// Not working\r\nXR.getControllerSpace = (i)=>{\r\n   if (i === 1) XR.getControllerGrip(1);\r\n   else XR.getControllerGrip(0);\r\n};\r\n\r\n/**\r\nGet controller world location\r\n@param {number} i - the controller ID (0 or 1)\r\n@returns {THREE.Vector3}\r\n*/\r\nXR.getControllerWorldLocation = (i)=>{\r\n    if (i === 1) return XR.controller1pos;\r\n    else return XR.controller0pos;\r\n};\r\n\r\n/**\r\nGet controller world direction\r\n@param {number} i - the controller ID (0 or 1)\r\n@returns {THREE.Vector3}\r\n*/\r\nXR.getControllerWorldDirection = (i)=>{\r\n    if (i === 1) return XR.controller1dir;\r\n    else return XR.controller0dir;\r\n};\r\n\r\nXR._deltaMotionController = (C)=>{\r\n    if (C === XR.HAND_L && XR._lastPosL === undefined) return;\r\n    if (C === XR.HAND_R && XR._lastPosR === undefined) return;\r\n\r\n    let p    = (C === XR.HAND_L)? XR.controller1pos : XR.controller0pos;\r\n    let prev = (C === XR.HAND_L)? XR._lastPosL : XR._lastPosR;\r\n\r\n    let D = THREE.Vector3(\r\n        p.x - prev.x,\r\n        p.y - prev.y,\r\n        p.z - prev.z\r\n    );\r\n\r\n    let m = D.lengthSq();\r\n\r\n    if (C === XR.HAND_L) XR._lastPosL = p;\r\n    else XR._lastPosR = p;\r\n};\r\n\r\nXR.update = ()=>{\r\n\r\n/*\r\n    //if (XR._bPresenting) ATON.Utils.updateTSetsCamera();\r\n    if (XR._bPresenting){\r\n        let C = ATON._renderer.xr.getCamera();\r\n        ATON.Utils.updateTSetsCamera( C );\r\n    }\r\n*/\r\n    // R controller\r\n    if (XR.controller0 && XR.controller0.visible){\r\n        XR.controller0.getWorldPosition(XR.controller0pos);\r\n        XR.controller0.getWorldDirection(XR.controller0dir);\r\n        XR.controller0dir.negate();\r\n\r\n        //XR._deltaMotionController(XR.HAND_R);\r\n    }\r\n    // L controller\r\n    if (XR.controller1 && XR.controller1.visible){\r\n        XR.controller1.getWorldPosition(XR.controller1pos);\r\n        XR.controller1.getWorldDirection(XR.controller1dir);\r\n        XR.controller1dir.negate(); \r\n\r\n        //XR._deltaMotionController(XR.HAND_L);\r\n    }\r\n\r\n/*\r\n    if (XR.gpad0 && XR.gpad0.buttons){\r\n        //if (XR.gpad0.buttons[1] && XR.gpad0.buttons[1].pressed) ATON.fireEvent(\"XRsqueezePressed\", 0);\r\n        if (XR.gpad0.buttons[4] && XR.gpad0.buttons[4].pressed) ATON.fireEvent(\"XRbuttonAPressed\");\r\n        if (XR.gpad0.buttons[5] && XR.gpad0.buttons[5].pressed) ATON.fireEvent(\"XRbuttonBPressed\");\r\n    }\r\n\r\n    if (XR.gpad1 && XR.gpad1.buttons){\r\n        //if (XR.gpad1.buttons[1] && XR.gpad1.buttons[1].pressed) ATON.fireEvent(\"XRsqueezePressed\", 1);\r\n        if (XR.gpad1.buttons[4] && XR.gpad1.buttons[4].pressed) ATON.fireEvent(\"XRbuttonXPressed\");\r\n        if (XR.gpad1.buttons[5] && XR.gpad1.buttons[5].pressed) ATON.fireEvent(\"XRbuttonYPressed\");\r\n    }\r\n*/\r\n};\r\n\r\n\r\nexport default XR;","/*\r\n    ATON spatial UI Button class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nimport Node from \"./ATON.node.js\";\r\n\r\n/**\r\nClass representing a SpatialUI Button.\r\nConstructor requires a uiid (UI Node ID)\r\n@class Button\r\n@example \r\nnew ATON.SUI.Button(\"myButton\")\r\n*/\r\nclass Button extends Node {\r\n\r\nconstructor(uiid, ratio=1.0, fsize=1.0){\r\n    super(uiid, ATON.NTYPES.UI);\r\n\r\n    this.baseColor   = ATON.MatHub.colors.black;\r\n    this.switchColor = ATON.MatHub.colors.green;\r\n\r\n    this.baseOpacity  = 0.5;\r\n    this.hoverOpacity = 0.8;\r\n\r\n    this._bSwitched = false;\r\n\r\n    this.container = new ThreeMeshUI.Block({\r\n        width: 0.1*ratio,\r\n        height: 0.1,\r\n        padding: 0.01,\r\n        borderRadius: 0.02,\r\n        backgroundColor: this.baseColor,\r\n        backgroundOpacity: this.baseOpacity,\r\n\r\n        fontFamily: ATON.SUI.PATH_FONT_JSON,\r\n        fontTexture: ATON.SUI.PATH_FONT_TEX,\r\n\r\n        justifyContent: 'center',\r\n        alignContent: 'center'\r\n    });\r\n    this.add(this.container);\r\n\r\n    this.uiText = new ThreeMeshUI.Text({ \r\n        content: \"\",\r\n        fontSize: 0.02*fsize,\r\n        fontColor: ATON.MatHub.colors.white\r\n    });\r\n    //this.uiText.position.set(0,0,-0.01);\r\n    this.container.add(this.uiText);\r\n\r\n    // Trigger geom\r\n    let trw = ATON.SUI.STD_BTN_SIZE * 0.9 * ratio;\r\n    let trh = ATON.SUI.STD_BTN_SIZE * 0.9;\r\n    this._trigger = new THREE.Mesh(\r\n        new THREE.PlaneGeometry( trw, trh, 2 ), \r\n        ATON.MatHub.materials.fullyTransparent\r\n    );\r\n    this._trigger.position.set(0,0,0.002);\r\n\r\n    this.add( this._trigger );\r\n\r\n    this.onHover = ()=>{\r\n        this.container.set({ \r\n            backgroundOpacity: this.hoverOpacity\r\n        });\r\n    };\r\n    this.onLeave = ()=>{\r\n        this.container.set({ \r\n            backgroundOpacity: this.baseOpacity \r\n        });\r\n    };\r\n\r\n    this.enablePicking();\r\n}\r\n\r\n/**\r\nSet base color of the button\r\n@param {THREE.Color} c - the color\r\n*/\r\nsetBaseColor(c){\r\n    this.baseColor = c;\r\n    if (!this._bSwitched) this.container.set({ backgroundColor: this.baseColor });\r\n    return this;\r\n}\r\n\r\n/**\r\nSet button switch color (when activated)\r\n@param {THREE.Color} c - the color\r\n*/\r\nsetSwitchColor(c){\r\n    this.switchColor = c;\r\n    if (this._bSwitched) this.container.set({ backgroundColor: this.switchColor });\r\n    return this;\r\n}\r\n\r\nsetBackgroundOpacity(f){\r\n    this.container.set({ backgroundOpacity: f });\r\n    this.baseOpacity = f;\r\n    return this;\r\n}\r\n\r\n/**\r\nSet button text\r\n@param {string} text\r\n*/\r\nsetText(text){\r\n    this.uiText.set({ content: text });\r\n    return this;\r\n}\r\n\r\n/**\r\nSwitch the button (ON/OFF)\r\n@param {boolean} b\r\n*/\r\nswitch(b){\r\n    this._bSwitched = b;\r\n    if (b) this.container.set({ backgroundColor: this.switchColor });\r\n    else this.container.set({ backgroundColor: this.baseColor });\r\n    \r\n    return this;\r\n}\r\n\r\n/**\r\nSet button icon\r\n@param {string} url - the url to the icon (tipically a PNG file)\r\n*/\r\nsetIcon(url, bNoBackground){\r\n    ATON.Utils.textureLoader.load(url, (texture) => {\r\n\r\n        this._trigger.material = new THREE.MeshStandardMaterial({\r\n            map: texture,\r\n            transparent: true,\r\n            depthWrite: false\r\n        });\r\n\r\n        if (bNoBackground){\r\n            this.setBackgroundOpacity(0.0);\r\n            this.hoverOpacity = 0.0;\r\n        }\r\n\r\n/*\r\n        this.container.set({ \r\n            backgroundTexture: texture,\r\n            backgroundOpacity: 1.0,\r\n            backgroundColor: undefined \r\n        });\r\n*/\r\n        this.uiText.position.set(0,-0.035,0);\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\n}\r\n\r\nexport default Button;","/*\r\n    ATON spatial UI Label class\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nimport Node from \"./ATON.node.js\";\r\n\r\n/**\r\nClass representing a SpatialUI Button.\r\nConstructor requires a uiid (UI Node ID)\r\n@class Label\r\n@example \r\nnew ATON.SUI.Button(\"myButton\")\r\n*/\r\nclass Label extends Node {\r\n\r\nconstructor(uiid){\r\n    super(uiid, ATON.NTYPES.UI);\r\n\r\n    this.baseColor = ATON.MatHub.colors.black;\r\n\r\n    this.container = new ThreeMeshUI.Block({\r\n        width: 0.2,\r\n        height: 0.05,\r\n        padding: 0.001,\r\n        borderRadius: 0.01,\r\n        backgroundColor: this.baseColor,\r\n        backgroundOpacity: 0.5,\r\n\r\n        fontFamily: ATON.SUI.PATH_FONT_JSON,\r\n        fontTexture: ATON.SUI.PATH_FONT_TEX,\r\n\r\n        justifyContent: 'center',\r\n        alignContent: 'center'\r\n    });\r\n    this.container.position.z = 0.05;\r\n    this.add(this.container);\r\n\r\n    this.uiText = new ThreeMeshUI.Text({ \r\n        content: \"Label\",\r\n        fontSize: 0.03,\r\n        fontColor: ATON.MatHub.colors.white\r\n    });\r\n    this.container.add(this.uiText);\r\n\r\n/*\r\n    this._trigger = new THREE.Mesh( \r\n        new THREE.PlaneGeometry( ATON.SUI.STD_BTN_SIZE*0.9, ATON.SUI.STD_BTN_SIZE*0.9, 2 ), \r\n        ATON.MatHub.materials.fullyTransparent\r\n    );\r\n    this._trigger.position.set(0,0,0.002);\r\n\r\n    this.add( this._trigger );\r\n\r\n    this.onHover = ()=>{\r\n        this.container.set({ \r\n            backgroundOpacity: 0.8\r\n        });\r\n    };\r\n    this.onLeave = ()=>{\r\n        this.container.set({ \r\n            backgroundOpacity: 0.5 \r\n        });\r\n    };\r\n\r\n    this.enablePicking();\r\n*/\r\n}\r\n\r\n/**\r\nSet base color of the label\r\n@param {THREE.Color} c - the color\r\n*/\r\nsetBaseColor(c){\r\n    this.baseColor = c;\r\n    this.container.set({ backgroundColor: this.baseColor });\r\n    return this;\r\n}\r\n\r\nsetTextColor(c){\r\n    this.uiText.set({ fontColor: c });\r\n    return this;\r\n}\r\n\r\n/**\r\nSet button text\r\n@param {string} text\r\n*/\r\nsetText(text){\r\n    this.uiText.set({ content: text });\r\n    return this;\r\n}\r\n\r\n/*\r\nsetAutoOrientation(b){\r\n    if (b === true){\r\n        let self = this;\r\n\r\n        this.onAfterRender = ()=>{\r\n            self.quaternion.copy( ATON.Nav._qOri );\r\n            console.log(\"x\");\r\n        };\r\n    }\r\n    else this.onAfterRender = undefined;\r\n}\r\n*/\r\n\r\n\r\n}\r\n\r\nexport default Label;","/*\r\n    ATON spatial UI\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\nimport Button from \"./ATON.sui.button.js\";\r\nimport Label from \"./ATON.sui.label.js\";\r\n\r\n/**\r\nATON Spatial UI\r\n@namespace SUI\r\n*/\r\nlet SUI = {};\r\n\r\nSUI.STD_BTN_SIZE = 0.1;\r\n\r\nSUI.Button = Button;\r\nSUI.Label  = Label;\r\n\r\n\r\n//Initializes Spatial UI module\r\nSUI.init = ()=>{\r\n    SUI.mainSelector = ATON.createUINode();\r\n    SUI._mSelectorSphere = new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.getMaterial(\"selector\") );\r\n    SUI._mSelectorSphere.renderOrder = 100;\r\n    SUI.mainSelector.add( SUI._mSelectorSphere );\r\n    SUI.mainSelector.disablePicking();\r\n\r\n    SUI.setSelectorRadius(0.05);\r\n    SUI.mainSelector.visible = false;\r\n    ATON._rootUI.add(SUI.mainSelector);\r\n\r\n    SUI.fpTeleport = ATON.createUINode();\r\n    \r\n    let gTeleport = new THREE.CylinderBufferGeometry(0.4,0.4, 0.9, 32,1, true);\r\n    //let gTeleport = new THREE.CylinderGeometry(0.4,0.4, 0.9, 32,1, true);\r\n\r\n    let mTeleport = new THREE.Mesh( gTeleport, ATON.MatHub.getMaterial(\"teleportLoc\") );\r\n    mTeleport.renderOrder = 100;\r\n    SUI.fpTeleport.add( mTeleport );\r\n    SUI.fpTeleport.disablePicking();\r\n    SUI.fpTeleport.visible = false;\r\n    ATON._rootUI.add(SUI.fpTeleport);\r\n\r\n    // Sem-shapes icons\r\n    //SUI.enableSemIcons();\r\n\r\n    // Main Font\r\n    //SUI.PATH_FONT_JSON = ATON.PATH_MODS+\"three-mesh-ui/examples/assets/Roboto-msdf.json\"; // ATON.PATH_RES+\"fonts/custom-msdf.json\"\r\n    //SUI.PATH_FONT_TEX  = ATON.PATH_MODS+\"three-mesh-ui/examples/assets/Roboto-msdf.png\"; // ATON.PATH_RES+\"fonts/custom.png\"\r\n    SUI.PATH_FONT_JSON = ATON.PATH_RES+\"fonts/custom-msdf.json\"\r\n    SUI.PATH_FONT_TEX  = ATON.PATH_RES+\"fonts/custom.png\"\r\n/*\r\n    ThreeMeshUI.FontLibrary.addFont(\"mainFont\", \r\n        SUI.PATH_FONT_JSON, \r\n        new THREE.TextureLoader().load(SUI.PATH_FONT_TEX)\r\n    );\r\n*/\r\n    // Measurements\r\n    SUI.gMeasures = ATON.createUINode();\r\n    SUI._prevMPoint = undefined;\r\n    SUI._measLabels = [];\r\n    ATON._rootUI.add(SUI.gMeasures);\r\n\r\n    // runtime measurement-line indicator\r\n    let mLine = new THREE.BufferGeometry().setFromPoints([new THREE.Vector3(),new THREE.Vector3()]);\r\n    SUI._measLine = new THREE.Line( mLine, ATON.MatHub.getMaterial(\"measurement\"));\r\n    SUI._measLine.visible = false;\r\n    ATON._rootUI.add(SUI._measLine);\r\n\r\n    // Sem convex-shapes edit points \r\n    SUI.gPoints = ATON.createUINode();\r\n    ATON._rootUI.add(SUI.gPoints);\r\n\r\n    SUI.buildInfoNode();\r\n    SUI.bShowInfo = true;\r\n\r\n    // InfoNode scale\r\n    SUI._labelScale   = ATON.Utils.isMobile()? 50.0 : 60.0; //note: inverse. Orginally 1.2 : 1.0;\r\n    SUI._labelScaleVR = 2.0;\r\n\r\n    ATON.on(\"SemanticNodeHover\", (semid)=>{\r\n        SUI.setInfoNodeText(semid);\r\n        if (SUI.gSemIcons) SUI.gSemIcons.hide();\r\n    });\r\n    ATON.on(\"SemanticNodeLeave\", (semid)=>{\r\n        if (SUI.gSemIcons) SUI.gSemIcons.show();\r\n    });\r\n\r\n    //SUI.setSemIconsOpacity(0.5);\r\n\r\n/*\r\n    ATON.on(\"UINodeHover\", (uiid)=>{\r\n        console.log(\"Hover UI node: \"+uiid);\r\n    });\r\n    ATON.on(\"UINodeLeave\", (uiid)=>{\r\n        console.log(\"Leave UI node: \"+uiid);\r\n    });\r\n*/\r\n\r\n    SUI._sync = 0;\r\n};\r\n\r\n// note: before adding LPs\r\nSUI.enableLPIcons = ()=>{\r\n    SUI.gLPIcons = ATON.createUINode();\r\n    SUI.gLPIcons.disablePicking();\r\n    ATON._rootUI.add(SUI.gLPIcons);\r\n};\r\n\r\n\r\nSUI.enableSemIcons = ()=>{\r\n    SUI.gSemIcons = ATON.createUINode();\r\n    SUI.gSemIcons.disablePicking();\r\n    ATON._rootUI.add(SUI.gSemIcons);\r\n};\r\n\r\n/**\r\nSet selector radius\r\n@param {number} r - the radius\r\n*/\r\nSUI.setSelectorRadius = (r)=>{\r\n    SUI._selectorRad = r;\r\n    SUI.mainSelector.scale.set(r,r,r);\r\n    //console.log(r);\r\n};\r\n\r\n/**\r\nGet selector current radius\r\n@returns {number}\r\n*/\r\nSUI.getSelectorRadius = ()=>{\r\n    //return SUI.mainSelector.scale.x;\r\n    return SUI._selectorRad;\r\n};\r\n\r\n/**\r\nSet selector 3D model\r\n@param {string} path - the model path (usually gltf or glb)\r\n@param {boolean} bUseStdMat - (optional) overwrites 3D model materials with standard selector material \r\n*/\r\nSUI.setSelectorModel = (path, bUseStdMat)=>{\r\n    if (path === undefined) return;\r\n\r\n    SUI.mainSelector.removeChildren();\r\n\r\n    SUI.mainSelector.load(path).disablePicking();\r\n    if (bUseStdMat) SUI.mainSelector.setMaterial( ATON.MatHub.getMaterial(\"selector\") );\r\n};\r\n\r\n/**\r\nSet selector color\r\n@param {THREE.Color} color - color\r\n@param {number} opacity - (optional) opacity \r\n*/\r\nSUI.setSelectorColor = (color, opacity)=>{\r\n    ATON.MatHub.materials.selector.uniforms.color.value = color;\r\n    if (opacity !== undefined) ATON.MatHub.materials.selector.uniforms.opacity.value = opacity;\r\n};\r\n\r\n// Sem-shape icons\r\nSUI.addSemIcon = (semid, meshape)=>{\r\n    if (SUI.gSemIcons === undefined) return;\r\n\r\n    let bb = new THREE.Box3().setFromObject( meshape );\r\n    let bs = new THREE.Sphere();\r\n    bb.getBoundingSphere(bs);\r\n\r\n    // icon sprite\r\n    let semicon = new THREE.Sprite( ATON.MatHub.semIcon );\r\n    semicon.position.copy(bs.center);\r\n\r\n    let ss = 0.035; //bs.radius * 0.3;\r\n    semicon.scale.set(ss,ss,1.0);\r\n    semicon.name = semid;\r\n\r\n    SUI.gSemIcons.add(semicon);\r\n};\r\n\r\nSUI.addLPIcon = (LP)=>{\r\n    if (SUI.gLPIcons === undefined) return;\r\n\r\n    let rn = LP._near;\r\n    let isize = 0.1; //rn * 0.3;\r\n\r\n    let lpicon = new THREE.Sprite( ATON.MatHub.lpIcon );\r\n    lpicon.position.copy(LP.pos);\r\n    lpicon.scale.set(isize,isize,isize);\r\n\r\n    let s = new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.materials.lp );\r\n    s.scale.set(rn,rn,rn);\r\n    s.position.copy(LP.pos);\r\n\r\n    SUI.gLPIcons.add( lpicon );\r\n    SUI.gLPIcons.add( s );\r\n};\r\n\r\nSUI.setSemIconsOpacity = (f)=>{\r\n    if (f === undefined) ATON.MatHub.semIcon.opacity = 1.0;\r\n    else ATON.MatHub.semIcon.opacity = f;\r\n};\r\n\r\n\r\nSUI.buildInfoNode = ()=>{\r\n    SUI.infoNode = ATON.createUINode();\r\n    SUI.infoNode.attachToRoot();\r\n\r\n    SUI.infoContainer = new ThreeMeshUI.Block({\r\n        width: 0.15,\r\n        height: 0.05, //0.07,\r\n        padding: 0.01,\r\n        borderRadius: 0.02,\r\n        //backgroundColor: ATON.MatHub.colors.darksem,\r\n        //backgroundOpacity: 0.2,\r\n\r\n        fontFamily: SUI.PATH_FONT_JSON,\r\n        fontTexture: SUI.PATH_FONT_TEX,\r\n        //fontFamily: \"mainFont\",\r\n        //fontTexture: \"mainFont\",\r\n\r\n        alignContent: 'center', // could be 'center' or 'left'\r\n        justifyContent: 'center', // could be 'center' or 'start'\r\n    });\r\n    SUI.infoNode.add(SUI.infoContainer);\r\n\r\n    SUI.infoNodeText = new ThreeMeshUI.Text({ \r\n        content: \"Info\",\r\n        fontSize: 0.02,\r\n        fontColor: ATON.MatHub.colors.white\r\n    });\r\n    SUI.infoContainer.add(SUI.infoNodeText);\r\n    //SUI.infoNode.scale.set(0.07,0.07,0.07);\r\n\r\n    //ThreeMeshUI.update();\r\n};\r\n\r\n/**\r\nGet main UI Info Node\r\n@returns {Node}\r\n*/\r\nSUI.getInfoNode = ()=>{\r\n    return SUI.infoNode;\r\n};\r\n\r\n/**\r\nSet text for main info node\r\n@param {string} txt - the text\r\n*/\r\nSUI.setInfoNodeText = (txt)=>{\r\n    if (!SUI.bShowInfo) return;\r\n    SUI.infoNodeText.set({ content: txt });\r\n    \r\n    ThreeMeshUI.update();  \r\n};\r\n\r\n/**\r\nCreate a SpatialUI toolbar from a list of SUI buttons\r\nThis can be arranged anywhere in the scene or attached to other UI nodes\r\n@param {array} buttonlist - a list (array) of SUI buttons\r\n@param {THREE.Color} color - (optional) base color for the toolbar\r\n@returns {Node}\r\n*/\r\nSUI.createToolbar = (buttonlist, color)=>{\r\n    let T = ATON.createUINode();\r\n\r\n    let num = buttonlist.length;\r\n    let padding = SUI.STD_BTN_SIZE * 0.3;\r\n    let marginf = 1.1;\r\n\r\n    let cont = new ThreeMeshUI.Block({\r\n        width: (SUI.STD_BTN_SIZE * num * marginf) + padding,\r\n        height: SUI.STD_BTN_SIZE + padding,\r\n        padding: 0.01,\r\n        borderRadius: 0.02,\r\n        backgroundColor: color? color : ATON.MatHub.colors.black,\r\n        backgroundOpacity: 0.3,\r\n\r\n        fontFamily: SUI.PATH_FONT_JSON,\r\n        fontTexture: SUI.PATH_FONT_TEX,\r\n\r\n        alignContent: 'center', // could be 'center' or 'left'\r\n        justifyContent: 'center', // could be 'center' or 'start'\r\n    });\r\n    //cont.position.set(0,0,0);\r\n\r\n    let m = (num*0.5) * SUI.STD_BTN_SIZE * marginf;\r\n    m -= (SUI.STD_BTN_SIZE*0.5);\r\n\r\n    for (let i=0; i<num; i++){\r\n        let button = buttonlist[i];\r\n        if (button){\r\n            button.position.set((i*SUI.STD_BTN_SIZE*marginf)-m, 0.0, 0.005);\r\n            cont.add(button);\r\n        }\r\n    }\r\n\r\n    T.add(cont);\r\n    return T;\r\n};\r\n\r\n// Measurements\r\nSUI.addMeasurementPoint = (P)=>{\r\n    if (P === undefined) return undefined;\r\n\r\n    let s = 0.01;\r\n    let linetick = 0.001;\r\n/*\r\n    let M = new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.getMaterial(\"measurement\"));\r\n    M.position.copy(P);\r\n    M.scale.set(s,s,s);\r\n    SUI.gMeasures.add(M);\r\n*/\r\n\r\n    // First time\r\n    if (SUI._prevMPoint === undefined){\r\n        SUI._prevMPoint = P;\r\n        \r\n        let mlArr = SUI._measLine.geometry.attributes.position.array;\r\n        mlArr[0] = P.x;\r\n        mlArr[1] = P.y;\r\n        mlArr[2] = P.z;\r\n        //mlArr[3] = P.x;\r\n        //mlArr[4] = P.y;\r\n        //mlArr[5] = P.z;\r\n\r\n        //SUI._measLine.geometry.attributes.position.needsUpdate = true;\r\n\r\n        //SUI._measLine.visible = true;\r\n        return undefined;\r\n    }\r\n\r\n    SUI._measLine.visible = false;\r\n\r\n    // Second point\r\n    let d = SUI._prevMPoint.distanceTo(P);\r\n    //console.log(d);\r\n\r\n    s *= d;\r\n    linetick *= d;\r\n\r\n    let A = new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.getMaterial(\"measurement\"));\r\n    A.position.copy(SUI._prevMPoint);\r\n    A.scale.set(s,s,s);\r\n    SUI.gMeasures.add(A);\r\n\r\n    let B = new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.getMaterial(\"measurement\"));\r\n    B.position.copy(P);\r\n    B.scale.set(s,s,s);\r\n    SUI.gMeasures.add(B);\r\n    \r\n    let scale = d * 2.0; //1.5; //Math.max(d*1.5, 1.0);\r\n\r\n    //let gLine = new THREE.CylinderBufferGeometry( linetick,linetick, d, 4 );\r\n    let gLine = new THREE.BufferGeometry().setFromPoints([SUI._prevMPoint,P]);\r\n    \r\n    SUI.gMeasures.add( new THREE.Line( gLine, ATON.MatHub.getMaterial(\"measurement\")) );\r\n\r\n    let L = new SUI.Label();\r\n    L.setBaseColor(ATON.MatHub.colors.white).setTextColor(ATON.MatHub.colors.black);\r\n\r\n    L.setPosition(\r\n        (SUI._prevMPoint.x + P.x)*0.5,\r\n        (SUI._prevMPoint.y + P.y)*0.5,\r\n        (SUI._prevMPoint.z + P.z)*0.5,\r\n    );\r\n\r\n    L.setScale(scale).setText( ATON.Utils.getHumanReadableDistance(d) ); // setScale(d*2.0)\r\n\r\n    SUI.gMeasures.add(L);\r\n\r\n    SUI._measLabels.push(L);\r\n\r\n    // return obj\r\n    let R = {};\r\n    R.A = SUI._prevMPoint.clone();\r\n    R.B = P.clone();\r\n\r\n    SUI._prevMPoint = undefined;\r\n\r\n    return R;   \r\n};\r\n\r\nSUI.clearMeasurements = ()=>{\r\n    SUI.gMeasures.removeChildren();\r\n    SUI._measLabels = [];\r\n};\r\n\r\nSUI._updateMeasurements = ()=>{\r\n    if (SUI._measLabels.length <= 0) return;\r\n\r\n    for (let ml in SUI._measLabels){\r\n        SUI._measLabels[ml].orientToCamera();\r\n    }\r\n};\r\n\r\n// Main update routine\r\nSUI.update = ()=>{\r\n    if (ATON.Nav.isTransitioning() || ATON._bPauseQuery){\r\n        SUI.infoNode.visible = false;\r\n        return;\r\n    }\r\n/*\r\n    SUI._sync = (SUI._sync+1) % 10;\r\n    if (SUI._sync===0){\r\n        ThreeMeshUI.update();\r\n        //console.log(\"sync\");\r\n    } \r\n*/\r\n    ThreeMeshUI.update();\r\n\r\n    // Meas-line indicator\r\n    if (SUI._prevMPoint){\r\n        if (ATON._queryDataScene){\r\n            let mlArr = SUI._measLine.geometry.attributes.position.array;\r\n            mlArr[3] = ATON._queryDataScene.p.x;\r\n            mlArr[4] = ATON._queryDataScene.p.y;\r\n            mlArr[5] = ATON._queryDataScene.p.z;\r\n            SUI._measLine.geometry.attributes.position.needsUpdate = true;\r\n        }\r\n        \r\n        SUI._measLine.visible = true;\r\n    }\r\n    else SUI._measLine.visible = false;\r\n\r\n    // Selector\r\n    if (ATON._queryDataScene && !ATON.Nav._bInteracting){\r\n        SUI.mainSelector.visible = true;\r\n        SUI.mainSelector.position.copy(ATON._queryDataScene.p);\r\n    }\r\n    else {\r\n        SUI.mainSelector.visible = false;\r\n        //SUI.fpTeleport.visible = false;\r\n    }\r\n\r\n    // SemIcons\r\n    if (SUI.gSemIcons){\r\n        if (ATON.Nav._bInteracting){\r\n            SUI.gSemIcons.hide();\r\n        }\r\n        else {\r\n            if (ATON._hoveredSemNode === undefined) SUI.gSemIcons.show();\r\n        }\r\n    }\r\n\r\n    // Teleport SUI\r\n    if ((!ATON.Nav.isOrbit() || ATON.XR._bPresenting) && ATON.Nav.currentQueryValidForLocomotion()){\r\n        SUI.fpTeleport.visible = true;\r\n        SUI.fpTeleport.position.copy(ATON._queryDataScene.p);\r\n    }\r\n    else SUI.fpTeleport.visible = false;\r\n\r\n    // Pointer-line\r\n    if (ATON.XR._pointerLineMesh){\r\n\r\n        let d = 0.0;\r\n        if (ATON._queryDataScene) d = ATON._queryDataScene.d;\r\n        if (ATON._queryDataUI && (d <= 0.0 || ATON._queryDataUI.d<d)){\r\n            d = ATON._queryDataUI.d;\r\n            SUI.mainSelector.visible = false;\r\n            SUI.fpTeleport.visible   = false;\r\n        }\r\n\r\n        if (d>0.0){\r\n            ATON.XR._pointerLineMesh.visible = true;\r\n            ATON.XR._pointerLineMesh.scale.set(1,1,d);\r\n        }\r\n        else ATON.XR._pointerLineMesh.visible = false;\r\n    }\r\n\r\n    // Measures\r\n    SUI._updateMeasurements();\r\n\r\n    // InfoNode (semantics)\r\n    if (ATON._queryDataSem){\r\n\r\n        // Immersive Session\r\n        if (ATON.XR._bPresenting){\r\n            if (ATON.XR.controller0){\r\n                SUI.infoNode.position.copy(ATON.XR.controller0pos); //.lerpVectors(ATON._queryDataSem.p, ATON.XR.controller0pos, 0.8);\r\n                SUI.infoNode.position.x -= (ATON.XR.controller0dir.x * 0.1);\r\n                SUI.infoNode.position.y -= (ATON.XR.controller0dir.y * 0.1); // + 0.1;\r\n                SUI.infoNode.position.z -= (ATON.XR.controller0dir.z * 0.1);\r\n                SUI.infoNode.setScale(SUI._labelScaleVR);\r\n            }\r\n            else {\r\n                SUI.infoNode.position.lerpVectors(ATON._queryDataSem.p, ATON.Nav._currPOV.pos, 0.5);\r\n                SUI.infoNode.setScale(ATON._queryDataSem.d * SUI._labelScaleVR);\r\n            }\r\n        }\r\n        // Default session\r\n        else {\r\n            SUI.infoNode.position.lerpVectors(ATON._queryDataSem.p, ATON.Nav._currPOV.pos, 0.2);\r\n            const ls = ATON._queryDataSem.d * (ATON.Nav._currPOV.fov / SUI._labelScale);\r\n            SUI.infoNode.setScale(ls);\r\n        }\r\n        SUI.infoNode.orientToCamera();\r\n\r\n        if (SUI.bShowInfo) SUI.infoNode.visible = true;\r\n        \r\n        if (!ATON.VRoadcast._bStreamFocus) SUI.mainSelector.visible = false;\r\n    }\r\n    else {\r\n        SUI.infoNode.visible = false;\r\n    }\r\n\r\n    if (SUI.mainSelector.visible && ATON.VRoadcast._bStreamFocus){\r\n        let ss = SUI._selectorRad * (1.0 + (Math.cos(ATON._clock.elapsedTime*10.0) * 0.2) );\r\n        SUI.mainSelector.scale.set(ss,ss,ss);\r\n    }\r\n\r\n};\r\n\r\nexport default SUI;","/*\r\n    ATON Avatar Class\r\n    used in VRoadcast system\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nimport Node from \"./ATON.node.js\";\r\n\r\nexport default class Avatar extends Node {\r\n\r\nconstructor(uid){\r\n    super(undefined /*uid*/, ATON.NTYPES.UI);\r\n\r\n    this.userid   = uid;\r\n    this.username = undefined; //\"User #\"+uid;\r\n    this.message  = \"...\";\r\n    \r\n    //this.bTalking = false;\r\n\r\n    //this._auTalk = undefined;\r\n\r\n    // Positional audio (talk)\r\n    this._auTalk = new THREE.PositionalAudio( ATON.AudioHub._listener );\r\n    this._auTalk.setRefDistance(30.0);\r\n    this.add(this._auTalk); // move with avatar\r\n\r\n    this._bPlayingAudio = false;\r\n    this._auChunks = [];\r\n\r\n    this._tStateCall = -1.0;\r\n    //this._tStateDur  = 0.1;\r\n    this._tProgress  = 0.0;\r\n\r\n    // Focal point\r\n    this._tFocCall = -1.0;\r\n    this._currFocusPos = new THREE.Vector3();\r\n    this._tgtFocusPos  = undefined;\r\n\r\n    this._currState  = {};\r\n    this._currState.position   = new THREE.Vector3();\r\n    this._currState.quaternion = new THREE.Quaternion();\r\n\r\n    this._tgtState = undefined;\r\n\r\n    //console.log(this);\r\n\r\n    this.realize();\r\n}\r\n\r\nsetTalkDistance(r){\r\n    if (r > 0.0) this._auTalk.setRefDistance(r);\r\n}\r\n\r\ngetAvatarMaterialByUID(uid){\r\n    //if (uid === undefined) return 0;\r\n\r\n    let avaMats = ATON.MatHub.materials.avatars;\r\n    let mi = (uid % avaMats.length); //uid? (uid % avaMats.length) : 0;\r\n    \r\n    return avaMats[mi];\r\n}\r\n\r\nrealize(){\r\n    // build minimal representation\r\n    let g = new THREE.SphereGeometry( 0.2, 16, 16 );\r\n\r\n    this.usermaterial = this.getAvatarMaterialByUID(this.userid);\r\n\r\n    let smesh = new THREE.Mesh( g, this.usermaterial );\r\n\r\n    this.usermeshnode = ATON.createUINode();\r\n    this.usermeshnode.add(smesh);\r\n    this.usermeshnode.setMaterial(this.usermaterial);\r\n\r\n    // CHECK / FIXME: this is to avoid cloning of the same mesh when using same representation for all avatars\r\n    this.usermeshnode.setCloneOnLoadHit(false);\r\n\r\n    // Talk UI\r\n    this.userauinode = new THREE.Sprite( ATON.VRoadcast.uspritemats[this.userid % ATON.VRoadcast.uspritemats.length] );\r\n    this.userauinode.position.set(0,0,0);\r\n    this.userauinode.visible = false;\r\n\r\n    // Focus\r\n    this.userfpnode = new THREE.Sprite( ATON.VRoadcast.ufocmats[this.userid % ATON.VRoadcast.ufocmats.length] );\r\n    this.userfpnode.position.set(0,0,0);\r\n    //this.userfpnode.scale.set(10,10,10);\r\n    this.userfpnode.visible = false;\r\n\r\n    // Build Label\r\n    this.userlabelnode = ATON.createUINode();\r\n    this.labelcontainer = new ThreeMeshUI.Block({\r\n        width: 0.7,\r\n        height: 0.25,\r\n        padding: 0.03,\r\n        borderRadius: 0.05,\r\n        //backgroundColor: ATON.VRoadcast.ucolorsdark[this.userid % ATON.VRoadcast.ucolorsdark.length],\r\n        backgroundColor: ATON.MatHub.colors.black,\r\n\r\n        fontFamily: ATON.PATH_RES+\"fonts/custom-msdf.json\", //ATON.PATH_MODS+'three-mesh-ui/examples/assets/Roboto-msdf.json',\r\n        fontTexture: ATON.PATH_RES+\"fonts/custom.png\" //ATON.PATH_MODS+'three-mesh-ui/examples/assets/Roboto-msdf.png',\r\n\r\n        //alignContent: 'right', // could be 'center' or 'left'\r\n        //justifyContent: 'end', // could be 'center' or 'start'\r\n    });\r\n\r\n    this.userlabelnode.position.y = 0.4;\r\n    this.userlabelnode.add(this.labelcontainer);\r\n\r\n    // username text\r\n    this.usernametext = new ThreeMeshUI.Text({ \r\n        content: \"User #\"+this.userid,\r\n        fontSize: 0.09,\r\n        //fontColor: ATON.MatHub.colors.white\r\n        fontColor: ATON.VRoadcast.ucolors[this.userid % ATON.VRoadcast.ucolors.length]\r\n    });\r\n    this.usernametext.position.y = 0.0;\r\n\r\n    // message text\r\n    this.usermessagetext = new ThreeMeshUI.Text({ \r\n        content: \"\\nHello World!\",\r\n        fontSize: 0.03,\r\n        fontColor: ATON.MatHub.colors.white\r\n    });\r\n    this.usermessagetext.position.y = -0.03;\r\n\r\n    this.labelcontainer.add(this.usernametext);\r\n    this.labelcontainer.add(this.usermessagetext);\r\n    \r\n    this.add(this.usermeshnode);\r\n    this.add(this.userlabelnode);\r\n    this.add(this.userauinode);\r\n\r\n    //this.add(this.userfpnode);\r\n    \r\n    // Focus is centralized for better location accuracy\r\n    if (ATON.VRoadcast._focNodes[this.userid] === undefined){\r\n        ATON.VRoadcast._focNodes[this.userid] = this.userfpnode;\r\n        ATON.VRoadcast.focGroup.add( this.userfpnode );\r\n    }\r\n};\r\n\r\n// TODO:\r\ndestroy(){\r\n    if (this.usermaterial) this.usermaterial.dispose();\r\n    if (this.usermeshnode) this.usermeshnode.dispose();\r\n    if (this.userauinode) this.userauinode.dispose();\r\n\r\n    if (this.userfpnode) this.userfpnode.dispose();\r\n    if (ATON.VRoadcast._focNodes[this.userid]) ATON.VRoadcast._focNodes[this.userid].dispose();\r\n\r\n    if (this.userlabelnode) this.userlabelnode.dispose();\r\n    if (this.labelcontainer) this.labelcontainer.dispose();\r\n    if (this.usernametext) this.usernametext.dispose();\r\n    if (this.usermessagetext) this.usermessagetext.dispose();\r\n\r\n    this.dispose();\r\n}\r\n\r\n// Loads custom avatar representation (3D model)\r\nloadRepresentation(url){\r\n    let A = this;\r\n\r\n    if (A.usermeshnode.children[0] !== undefined){\r\n        A.usermeshnode.remove(A.usermeshnode.children[0]);\r\n    }\r\n\r\n    A.usermeshnode.load(url); //.setMaterial(A.usermaterial);\r\n\r\n    return this;\r\n}\r\n\r\nsetUsername(username){\r\n    this.username = username;\r\n\r\n    this.usernametext.set({ \r\n        content: username\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\ngetUsername(){\r\n    if (this.userid === undefined) return undefined;\r\n    if (this.username === undefined) return \"User #\"+this.userid;\r\n    return this.username;\r\n}\r\n\r\nsetMessage(msg){\r\n    this.message = msg;\r\n\r\n    // TODO: check for text length\r\n    this.usermessagetext.set({ \r\n        content: \"\\n\"+msg\r\n    });\r\n\r\n    return this;\r\n}\r\n\r\nsetTalkVolume(vol){\r\n    if (vol === undefined){\r\n        this.userauinode.visible = false;\r\n        return;\r\n    }\r\n    if (vol > 0){\r\n        this.userauinode.visible = true;\r\n        let v = 0.1 + (vol * 0.03);\r\n        this.userauinode.scale.set(v,v,v);\r\n    }\r\n    else this.userauinode.visible = false;\r\n}\r\n\r\nhideFocalPoint(){\r\n    this.userfpnode.visible = false;\r\n}\r\n\r\nrequestFocus(fp){\r\n    if (this._tFocCall >= 0.0) return; // already requested\r\n\r\n    this._tFocCall = ATON._clock.elapsedTime;\r\n\r\n    this._currFocusPos.copy(this.userfpnode.position);\r\n\r\n    this._tgtFocusPos = new THREE.Vector3( parseFloat(fp[0]), parseFloat(fp[1]), parseFloat(fp[2]));\r\n    this._tgtFocusRad = parseFloat(fp[3])*2.0;\r\n\r\n    this.userfpnode.scale.set(this._tgtFocusRad,this._tgtFocusRad,this._tgtFocusRad);\r\n\r\n    this.userfpnode.visible = true;\r\n}\r\n\r\nhandleFocusTransition(){\r\n    if (this._tFocCall < 0.0) return;\r\n\r\n    let D = ATON.VRoadcast.USER_STATE_FREQ; //this._tStateDur;\r\n\r\n    let t = (ATON._clock.elapsedTime - this._tFocCall) / D;\r\n\r\n    // End\r\n    if (t >= 1.0){\r\n        this._tFocCall = -1.0;\r\n\r\n        this.userfpnode.position.copy(this._tgtFocusPos);\r\n        this.userfpnode.scale.set(this._tgtFocusRad,this._tgtFocusRad,this._tgtFocusRad);\r\n        \r\n        this.userfpnode.visible = true;\r\n\r\n        //console.log(this.userfpnode.position);\r\n\r\n        return;\r\n    }\r\n\r\n    this.userfpnode.position.lerpVectors(this._currFocusPos, this._tgtFocusPos, t);\r\n\r\n    //let s = this._tgtFocusRad;\r\n    //this.userfpnode.scale.set(s,s,s);\r\n    this.userfpnode.visible = true;\r\n\r\n    //console.log(this.userfpnode.position);\r\n}\r\n\r\nrequestStateTransition(S){\r\n    if (this._tStateCall >= 0.0) return; // already requested\r\n\r\n    this._tStateCall = ATON._clock.elapsedTime;\r\n\r\n    this._currState.position.copy(this.position);\r\n    this._currState.quaternion.copy(this.quaternion);\r\n\r\n    this._tgtState = S;\r\n    \r\n    //this._sDistance = this.position.distanceTo(S.position);\r\n}\r\n\r\nhandleStateTransition(){\r\n    if (this._tStateCall < 0.0) return;\r\n\r\n    let D = ATON.VRoadcast.USER_STATE_FREQ; //this._tStateDur;\r\n\r\n    if (D <= 0.0) this._tProgress = 1.0;\r\n    else this._tProgress = (ATON._clock.elapsedTime - this._tStateCall) / D;\r\n\r\n    let cs = this._currState;\r\n    let ts = this._tgtState;\r\n\r\n    // End\r\n    if (this._tProgress >= 1.0){\r\n        this._tStateCall = -1.0;\r\n\r\n        this.position.copy(ts.position);\r\n        //this.quaternion.copy(ts.quaternion);\r\n        this.usermeshnode.quaternion.copy(ts.quaternion);\r\n\r\n        return;\r\n    }\r\n\r\n    this.position.lerpVectors(cs.position, ts.position, this._tProgress);\r\n    this.usermeshnode.quaternion.slerp(ts.quaternion, this._tProgress);\r\n    //THREE.Quaternion.slerp( cs.quaternion, ts.quaternion, this.usermeshnode.quaternion, this._tProgress);\r\n}\r\n\r\nupdate(){\r\n    this.handleStateTransition();\r\n    if (this.userfpnode.visible){\r\n        this.handleFocusTransition();\r\n\r\n        let s = this.userfpnode.scale.x;\r\n        if (s>0.001) this.userfpnode.scale.set(s*0.99,s*0.99,s*0.99);\r\n        else this.userfpnode.visible = false;\r\n    }\r\n\r\n    let cam  = ATON.Nav._camera;\r\n    let eye = ATON.Nav._currPOV.pos;\r\n    if (cam === undefined || eye === undefined) return;\r\n\r\n    //this.userlabelnode.lookAt( eye );\r\n\r\n    //this.userlabelnode.setRotationFromMatrix(cam.matrix); // quaternion.setFromRotationMatrix( cam.matrix );\r\n    //this.userlabelnode.rotation.copy(cam.rotation);\r\n\r\n    this.userlabelnode.orientToCamera(); //quaternion.copy( ATON.Nav._qOri );\r\n\r\n    // Talk UI\r\n    //this._handleTalk();\r\n\r\n    let avol = this.userauinode.scale.x;\r\n    avol *= 0.99; // shrinking rate\r\n\r\n    if (avol > 0.01) this.userauinode.scale.set(avol, avol, avol);\r\n    else this.userauinode.visible = false;\r\n\r\n/*\r\n    this.userlabelnode.rotation.y = Math.atan2(\r\n        ( cam.position.x - this.userlabelnode.position.x ),\r\n        ( cam.position.z - this.userlabelnode.position.z )\r\n    );\r\n*/\r\n    //this.userlabelnode.matrix.copy( cam.matrix );\r\n}\r\n\r\n_handleTalk(){\r\n    if (this._bPlayingAudio) return;\r\n    if (this._auChunks.length < 1) return;\r\n\r\n    let d = this._auChunks.shift();\r\n\r\n    let au = new Audio();\r\n    au.src = d.data;\r\n\r\n    au.play();\r\n    this._bPlayingAudio = true;\r\n\r\n    au.onended = ()=>{\r\n        this._bPlayingAudio = false;\r\n        //console.log(\"finished playing chunk\");\r\n    };\r\n\r\n    //this.setTalkVolume(d.volume);\r\n    this.setTalkVolume(5.0);\r\n}\r\n\r\n\r\n};","/*\r\n    ATON VRoadcast\r\n    real-time collaborative networking\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\nimport Avatar from \"./ATON.avatar.js\";\r\n\r\n/**\r\nATON VRoadcast component\r\n@namespace VRoadcast\r\n*/\r\nlet VRoadcast = {};\r\n\r\nVRoadcast.USER_STATE_FREQ = 0.25; // sec\r\nVRoadcast.REPLICATED_EVT = \"EREP\";\r\n\r\n// Thresholds state sending\r\nVRoadcast.THRES_STATE_POS = 0.01;\r\nVRoadcast.THRES_STATE_ORI = 0.08; // radians\r\n\r\nVRoadcast.Avatar = Avatar;\r\n\r\n\r\n/**\r\nInitialize the component\r\n*/\r\nVRoadcast.init = ()=>{\r\n    VRoadcast.address = window.location.origin;\r\n\r\n    VRoadcast.initMaterials();\r\n\r\n    VRoadcast.socket = undefined;\r\n    VRoadcast._connected = false;\r\n\r\n    VRoadcast._username = undefined;\r\n\r\n    VRoadcast.uid = undefined; // my userID (0,1,....)\r\n    VRoadcast._bStreamFocus = false; // stream focal point\r\n    \r\n    VRoadcast._numUsers = 1;\r\n\r\n    VRoadcast.avatarList = [];\r\n\r\n    VRoadcast.avaGroup = ATON.createUINode(\"avatars\"); // holds all avatars representations\r\n    VRoadcast.avaGroup.attachToRoot();\r\n\r\n    VRoadcast.focGroup = ATON.createUINode(\"focus\"); // holds all avatars focal points\r\n    VRoadcast.focGroup.attachTo(VRoadcast.avaGroup);\r\n    VRoadcast._focNodes = [];\r\n\r\n    // send own state with given freq\r\n    VRoadcast.bSendState = true;\r\n    window.setInterval( VRoadcast.sendState, VRoadcast.USER_STATE_FREQ*1000.0 );\r\n    VRoadcast._lastStateSent = undefined;\r\n\r\n    VRoadcast._bShowAvaG = true;\r\n\r\n    console.log(\"VRoadcast initialized\");\r\n    VRoadcast.enableChatLog();\r\n};\r\n\r\nVRoadcast.enableChatLog = ()=>{\r\n    VRoadcast._elChat = $(\"<div></div>\").text(\"\");\r\n};\r\n\r\nVRoadcast.getNumUsers = ()=>{\r\n    return VRoadcast._numUsers;\r\n};\r\n\r\n// Register materials (avatars/users)\r\nVRoadcast.initMaterials = ()=>{\r\n\r\n    VRoadcast.ucolors = [];\r\n    VRoadcast.ucolors.push( new THREE.Color(1,0,0) );\r\n    VRoadcast.ucolors.push( new THREE.Color(1,1,0) );\r\n    VRoadcast.ucolors.push( new THREE.Color(0,1,0) );\r\n    VRoadcast.ucolors.push( new THREE.Color(0,1,1) );\r\n    VRoadcast.ucolors.push( new THREE.Color(0,0,1) );\r\n    VRoadcast.ucolors.push( new THREE.Color(1,0,1) );\r\n\r\n    VRoadcast.ucolorsdark = [];\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.2,0.0,0.0) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.2,0.2,0.0) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.0,0.2,0.0) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.0,0.2,0.2) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.0,0.0,0.2) );\r\n    VRoadcast.ucolorsdark.push( new THREE.Color(0.2,0.0,0.2) );\r\n\r\n    VRoadcast.ucolorhex = [];\r\n    VRoadcast.ucolorhex.push(\"#F00\");\r\n    VRoadcast.ucolorhex.push(\"#FF0\");\r\n    VRoadcast.ucolorhex.push(\"#0F0\");\r\n    VRoadcast.ucolorhex.push(\"#0FF\");\r\n    VRoadcast.ucolorhex.push(\"#00F\");\r\n    VRoadcast.ucolorhex.push(\"#F0F\");\r\n\r\n    let MM = ATON.MatHub.materials;\r\n    MM.avatars = [];\r\n\r\n    let mat = ATON.MatHub.materials.defUI.clone();\r\n    mat.uniforms.color.value = VRoadcast.ucolors[0];\r\n/*\r\n    let mat = new THREE.MeshBasicMaterial({\r\n        color: VRoadcast.ucolors[0], \r\n        transparent: true, \r\n        opacity: 0.4, \r\n        depthWrite: false,\r\n        flatShading: true\r\n    });\r\n*/\r\n    MM.avatars.push(mat);\r\n\r\n    for (let c=1; c<VRoadcast.ucolors.length; c++){\r\n        let M = mat.clone();\r\n        //M.color = VRoadcast.ucolors[c];\r\n        M.uniforms.color.value = VRoadcast.ucolors[c];\r\n\r\n        MM.avatars.push(M);\r\n    }\r\n\r\n    // AudioUI user materials\r\n    VRoadcast.uspritemats = [];\r\n\r\n    let texAUI = new THREE.TextureLoader().load( ATON.PATH_RES+\"useraui.png\" );\r\n    for (let c=0; c<VRoadcast.ucolors.length; c++){\r\n        let smat = new THREE.SpriteMaterial({ \r\n            map: texAUI,\r\n            depthWrite: false,\r\n            color: VRoadcast.ucolors[c] // multiply\r\n        });\r\n        smat.sizeAttenuation = true;\r\n\r\n        VRoadcast.uspritemats.push(smat);\r\n    }\r\n\r\n    // Focal points\r\n    VRoadcast.ufocmats = [];\r\n\r\n    let texFocP = new THREE.TextureLoader().load( ATON.PATH_RES+\"focus.png\" );\r\n    for (let c=0; c<VRoadcast.ucolors.length; c++){\r\n        let smat = new THREE.SpriteMaterial({ \r\n            map: texFocP,\r\n            depthWrite: false,\r\n            depthTest: false,\r\n            color: VRoadcast.ucolors[c] // multiply\r\n        });\r\n        smat.sizeAttenuation = true;\r\n\r\n        VRoadcast.ufocmats.push(smat);\r\n    }\r\n};\r\n\r\n/**\r\nFire a replicated event (network)\r\n@param {string} evtname - the event name\r\n@param {object} data - object containing data to be transmitted with this event\r\n\r\n@example\r\nATON.VRoadcast.fireEvent(\"test\", 42);\r\n*/\r\nVRoadcast.fireEvent = (evtname, data)=>{\r\n    if (!VRoadcast._connected) return;\r\n    let sock = VRoadcast.socket;\r\n\r\n    if (sock) sock.emit(VRoadcast.REPLICATED_EVT, {e: evtname, d: data});\r\n    //else ATON.on(\"VRC_Connected\", ()=>{ sock.on(evtname, onReceive); });\r\n};\r\n\r\n/**\r\nSubscribe to a given network event, through given handler\r\n@param {string} evtname - the event name\r\n@param {function} handler - network event handler (how we handle incoming event)\r\n\r\n@example\r\nATON.VRoadcast.on(\"test\", function(data){ console.log(\"Received: \"+data); });\r\n*/\r\nVRoadcast.on = (evtname, handler)=>{\r\n    if (handler === undefined) return;\r\n\r\n    let evhNetwork = ATON.EventHub.evNetwork;\r\n\r\n    if (evhNetwork[evtname] === undefined) evhNetwork[evtname] = []; // First time (event not registered)\r\n    evhNetwork[evtname].push(handler);\r\n};\r\n\r\n/**\r\nReturn true if VRoadcast is connected to the service\r\n@returns {boolean}\r\n*/\r\nVRoadcast.isConnected = ()=>{\r\n    if (VRoadcast.socket === undefined) return false;\r\n    return VRoadcast._connected;\r\n};\r\n\r\n/**\r\nReturn true if we have a VRoadcast ID assigned\r\n@returns {boolean}\r\n*/\r\nVRoadcast.hasID = ()=>{\r\n    if (VRoadcast.uid === undefined) return false;\r\n    return true;\r\n};\r\n\r\n/**\r\nUtility for server-side logging\r\n@param {string} d - string data to be logged\r\n*/\r\nVRoadcast.log = (d)=>{\r\n    if (!VRoadcast._connected) return;\r\n    let sock = VRoadcast.socket;\r\n\r\n    if (sock) sock.emit(\"LOG\", d);\r\n};\r\n\r\n/**\r\nRequest to join a given VRoadcast session (typically, the scene ID)\r\n@param {string} ssid - the session id (room or scene ID)\r\n@example\r\nATON.VRoadcast.joinSession(\"testscene\");\r\n*/\r\nVRoadcast.joinSession = (ssid)=>{\r\n    if (!VRoadcast.socket) return;\r\n    if (ssid === undefined) ssid = ATON.SceneHub.currID;\r\n\r\n    if (ssid === undefined){\r\n        console.log(\"VRC ERROR: current session ID is undefined\");\r\n        return;\r\n    }\r\n\r\n    console.log(\"Joining VRC session \"+ssid+\"...\");\r\n    VRoadcast.socket.emit(\"SENTER\", ssid );\r\n};\r\n\r\nVRoadcast.requestSceneState = ()=>{\r\n    if (!VRoadcast.socket) return;\r\n\r\n    VRoadcast.socket.emit(\"SSTATE\");\r\n};\r\n\r\nVRoadcast.setAvatarsVisibility = (b)=>{\r\n    VRoadcast._bShowAvaG = b;\r\n\r\n    if (b) VRoadcast.avaGroup.show();\r\n    else VRoadcast.avaGroup.hide();\r\n};\r\n\r\n/**\r\nConnect to VRoadcast service\r\n@param {string} address - the address of the service (optional). Default is same server where main service is running\r\n@example\r\nATON.VRoadcast.connect();\r\n*/\r\nVRoadcast.connect = (address)=>{\r\n    if (VRoadcast._connected) return;\r\n    if (address) VRoadcast.address = address;\r\n\r\n    let opts = {};\r\n\r\n    // Secure connection\r\n    if (window.location.protocol === \"https:\"){\r\n        opts.path = '/svrc/socket.io';\r\n        opts.secure = true;\r\n        opts.rejectUnauthorized = false;\r\n        //opts.transports = ['websocket']; \r\n        //opts.upgrade = false \r\n    }\r\n    else {\r\n        opts.path = '/vrc/socket.io';\r\n        //opts.transports = ['websocket'];\r\n        //opts.upgrade = false;\r\n    }\r\n\r\n    VRoadcast.socket = io.connect(VRoadcast.address, opts); //, { 'force new connection': true });\r\n\r\n    if (VRoadcast.socket === undefined) return;\r\n    VRoadcast._connected = VRoadcast.socket.connected;\r\n\r\n    VRoadcast._registerSocketHandlers();\r\n};\r\n\r\nVRoadcast.disconnect = ()=>{\r\n    if (VRoadcast.socket === undefined) return;\r\n\r\n    VRoadcast._numUsers = 1;\r\n\r\n    VRoadcast.socket.disconnect();\r\n    VRoadcast._connected = false;\r\n};\r\n\r\n\r\nVRoadcast._onConnected = ()=>{\r\n    //\r\n};\r\n\r\nVRoadcast.setUsername = (username)=>{\r\n    VRoadcast._username = username;\r\n    if (VRoadcast.socket === undefined) return;\r\n    if (VRoadcast.uid === undefined) return;\r\n\r\n    if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>Your username is now: \"+username+\"</i><br>\");\r\n    VRoadcast.socket.emit(\"UNAME\", username);\r\n};\r\nVRoadcast.setMessage = (msg)=>{\r\n    VRoadcast._msg = msg;\r\n    if (VRoadcast.socket === undefined) return;\r\n    if (VRoadcast.uid === undefined) return;\r\n\r\n    if (VRoadcast._elChat){\r\n        VRoadcast._elChat.append(\"<span style='color:\"+VRoadcast.ucolorhex[VRoadcast.uid%6]+\"'><b>YOU</b>: \"+msg+\"</span><br>\");\r\n        VRoadcast._elChat.scrollTop(VRoadcast._elChat.scrollHeight);\r\n    }\r\n\r\n    VRoadcast.socket.emit(\"UMSG\", msg);\r\n};\r\n\r\n\r\n// Handle incoming server msgs\r\nVRoadcast._registerSocketHandlers = ()=>{\r\n\r\n    // We connected to server\r\n    VRoadcast.socket.on('connect', ()=>{\r\n        VRoadcast._connected = true;\r\n\r\n        // If we have a valid Scene ID join corresponding session\r\n        if (ATON.SceneHub.currID !== undefined){\r\n            VRoadcast.joinSession();\r\n        }\r\n        \r\n        console.log(\"Connected to VRC service!\");\r\n        ATON.fireEvent(\"VRC_Connected\");\r\n\r\n        VRoadcast._onConnected();\r\n    });\r\n\r\n    VRoadcast.socket.on('disconnect', ()=>{\r\n        VRoadcast._connected = false;\r\n        VRoadcast.uid = undefined;\r\n\r\n        VRoadcast.avaGroup.hide();\r\n\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>YOU disconnected from VRoadcast service</i><br>\");\r\n\r\n        console.log(\"VRC disconnected!\");\r\n        ATON.fireEvent(\"VRC_Disconnected\");\r\n    });\r\n\r\n    // Incoming replicated event\r\n    VRoadcast.socket.on(VRoadcast.REPLICATED_EVT, (data)=>{\r\n        let evtname = data.e;\r\n        let d = data.d;\r\n\r\n        let ehList = ATON.EventHub.evNetwork[evtname];\r\n        ATON.EventHub.executeHandlers(ehList, d);\r\n    });\r\n\r\n    VRoadcast.socket.on('ID', (data)=>{\r\n        console.log(\"Your ID is \" + data);\r\n        VRoadcast.uid = data;\r\n\r\n        if (VRoadcast._bShowAvaG) VRoadcast.avaGroup.show();\r\n\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>Your ID is #\"+data+\"</i><br>\");\r\n\r\n        // Request scene state\r\n        VRoadcast.requestSceneState();\r\n\r\n        ATON.fireEvent(\"VRC_IDassigned\", data);\r\n    });\r\n\r\n    VRoadcast.socket.on('SSTATE', (data)=>{\r\n        VRoadcast._numUsers = data.numUsers;\r\n        console.log(\"Num. users: \"+VRoadcast._numUsers);\r\n\r\n        ATON.fireEvent(\"VRC_SceneState\", data);\r\n    });\r\n\r\n    VRoadcast.socket.on('UENTER', (data)=>{\r\n        let uid = data;\r\n        //if (uid === VRoadcast.uid) return; // myself\r\n\r\n        console.log(\"User #\" +uid+\" entered the scene\");\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>User #\"+uid+\" entered the scene</i><br>\");\r\n\r\n        VRoadcast.touchAvatar(uid);\r\n        \r\n        //VRoadcast._numUsers++;\r\n        VRoadcast.requestSceneState();\r\n        ATON.fireEvent(\"VRC_UserEnter\", uid);\r\n    });\r\n\r\n    VRoadcast.socket.on('ULEAVE', (data)=>{\r\n        let uid = data;\r\n        if (uid === undefined) return;\r\n        \r\n        let A = VRoadcast.avatarList[uid];\r\n        if (A) A.hide();\r\n        //VRoadcast.destroyAvatar(uid);\r\n\r\n        // TODO: hide also focus\r\n\r\n        console.log(\"User #\" +uid+\" left the scene\");\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>User #\"+uid+\" left the scene</i><br>\");\r\n\r\n        //if (VRoadcast._numUsers>1) VRoadcast._numUsers--;\r\n        VRoadcast.requestSceneState();\r\n        ATON.fireEvent(\"VRC_UserLeave\", uid);\r\n    });\r\n\r\n    VRoadcast.socket.on('USTATE', (data)=>{\r\n        if (!VRoadcast._bShowAvaG) return;\r\n\r\n        let S = VRoadcast.decodeState(data);\r\n\r\n        //console.log(data);\r\n\r\n        let uid = S.userid;\r\n        let A = VRoadcast.touchAvatar(uid);\r\n\r\n        //A.position.copy(S.position);\r\n        //A.quaternion.copy(S.quaternion);\r\n        \r\n        A.requestStateTransition(S);\r\n        //A.hideFocalPoint();\r\n    });\r\n\r\n    VRoadcast.socket.on('UFOCUS', (data)=>{\r\n        let uid = data.uid;\r\n        let fp  = data.fp;\r\n\r\n        let A = VRoadcast.touchAvatar(uid);\r\n\r\n        A.requestFocus(fp);\r\n    });\r\n\r\n    VRoadcast.socket.on('UNAME', (data)=>{\r\n        let uid   = data.uid;\r\n        let uname = data.name;\r\n\r\n        if (uid === undefined) return;\r\n\r\n        let A = VRoadcast.touchAvatar(uid);\r\n        A.setUsername(uname);\r\n\r\n        console.log(\"User #\" +uid+\" changed username to: \"+uname);\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<i>User #\"+uid+\" changed username to: \"+uname+\"</i><br>\");\r\n    });\r\n\r\n    VRoadcast.socket.on('UMSG', (data)=>{\r\n        let uid = data.uid;\r\n        let msg = data.msg;\r\n\r\n        if (uid === undefined) return;\r\n\r\n        let A = VRoadcast.touchAvatar(uid);\r\n        A.setMessage(msg);\r\n\r\n        console.log(\"User #\" +uid+\": \"+msg);\r\n        if (VRoadcast._elChat) VRoadcast._elChat.append(\"<span style='color:\"+VRoadcast.ucolorhex[uid%6]+\"'><b>\"+A.getUsername()+\"</b>: \"+msg+\"</span><br>\");\r\n    });\r\n\r\n    VRoadcast.socket.on('UTALK', (data)=>{\r\n        let uid = data.uid;\r\n        if (uid === undefined) return;\r\n\r\n        let audioURL = data.audio;\r\n        let A = VRoadcast.touchAvatar(uid);\r\n\r\n        //A.setTalkVolume(data.vol);\r\n        A.setTalkVolume(5.0);\r\n\r\n/*\r\n        if (A._auTalk === undefined || A._auTalk === null){\r\n            A._auTalk = new THREE.PositionalAudio( ATON.AudioHub._listener );\r\n            A._auTalk.setRefDistance(50.0);\r\n            A.add(A._auTalk);\r\n        }\r\n        else A._auTalk.stop();\r\n*/\r\n        if (A._auTalk.isPlaying) A._auTalk.stop();\r\n\r\n        ATON.AudioHub._loader.load( audioURL, (buffer)=>{\r\n            A._auTalk.setBuffer( buffer );\r\n            A._auTalk.setLoop( false );\r\n            //A._auTalk.setVolume( 0.5 );\r\n            //A._auTalk.setPlaybackRate(0.9);\r\n            A._auTalk.play();\r\n        });\r\n\r\n        audioURL = null;\r\n        \r\n/*\r\n        //let newblob  = new File([data.blob], \"blob\"+ATON.MediaRec.auExt, { type: ATON.MediaRec.auType });\r\n        //let audioURL = window.URL.createObjectURL(newblob);\r\n        \r\n        if (A._auTalk === undefined){\r\n            A._auTalk = new Audio();\r\n            //A._auTalk.type = ATON.MediaRec.auType;\r\n        }\r\n        else {\r\n            //A._auTalk.pause();\r\n            A._auTalk.currentTime = 0;    \r\n        }\r\n\r\n        A._auTalk.src = audioURL;\r\n        A._auTalk.play();\r\n*/\r\n\r\n/*\r\n        A._auChunks.push({\r\n            data: audioURL,\r\n            volume: data.vol\r\n        });\r\n*/\r\n    });\r\n};\r\n\r\n// Encode state\r\nVRoadcast.encodeState = (S)=>{\r\n    if (!S) return;\r\n\r\n    let A = new Float32Array(6); // make sufficient room\r\n    A[0] = S.position.x;\r\n    A[1] = S.position.y;\r\n    A[2] = S.position.z;\r\n\r\n    // Convert to byte array, we use last float storage (4 bytes)\r\n    var binData = new Int8Array(A.buffer);\r\n\r\n    binData[16] = (S.quaternion.x * 128.0);\r\n    binData[17] = (S.quaternion.y * 128.0);\r\n    binData[18] = (S.quaternion.z * 128.0);\r\n    binData[19] = (S.quaternion.w * 128.0);\r\n\r\n    binData[20] = S.userid;\r\n\r\n    //binData[21] = parseInt(S.rank);\r\n\r\n    //console.log(binData);\r\n    return binData;\r\n}\r\n\r\n// Decode state\r\nVRoadcast.decodeState = (binData)=>{\r\n    let S = {};\r\n    let view = new Int8Array(binData);\r\n\r\n    //S.userid = binData[20];\r\n    S.userid = view[20];\r\n\r\n    //console.log(view);\r\n\r\n    // First decode quat\r\n    S.quaternion = new THREE.Quaternion(\r\n        view[16] / 128.0,\r\n        view[17] / 128.0,\r\n        view[18] / 128.0,\r\n        view[19] / 128.0\r\n    );\r\n\r\n    // Now decode floats\r\n    view = new Float32Array(binData);\r\n    S.position = new THREE.Vector3(view[0],view[1],view[2]);\r\n    //S.scale = A[3];\r\n\r\n/*\r\n    // First decode quat\r\n    S.quaternion = new THREE.Quaternion(\r\n        binData[16] / 128.0,\r\n        binData[17] / 128.0,\r\n        binData[18] / 128.0,\r\n        binData[19] / 128.0\r\n    );\r\n\r\n    // Now decode floats\r\n    let a8 = new Int8Array(16);\r\n    for (var i=0; i<16; i++) a8[i] = binData[i];\r\n    let A = new Float32Array(a8.buffer);\r\n\r\n    S.position = new THREE.Vector3(A[0],A[1],A[2]);\r\n\r\n    //S.scale = A[3];\r\n*/\r\n    return S;\r\n}\r\n\r\n\r\n// Update\r\nVRoadcast.update = ()=>{\r\n    if (!VRoadcast._connected) return;\r\n\r\n    // State interpolation\r\n    for (let a=0; a<VRoadcast.avatarList.length; a++){\r\n        let A = VRoadcast.avatarList[a];\r\n        if (A && A.visible){\r\n            //A._tStateDur = VRoadcast.USER_STATE_FREQ;\r\n            A.update();\r\n        }\r\n    }\r\n};\r\n\r\nVRoadcast.setFocusStreaming = (b)=>{\r\n    if (b === undefined) return;\r\n\r\n    if (b){\r\n        if (!VRoadcast._bStreamFocus){\r\n\r\n            ATON.fireEvent(\"VRC_FocusStreamingStarted\");\r\n        }\r\n\r\n        VRoadcast._bStreamFocus = true;\r\n        return;\r\n    }\r\n    else {\r\n        if (VRoadcast._bStreamFocus){\r\n\r\n            ATON.fireEvent(\"VRC_FocusStreamingStopped\");\r\n        }\r\n\r\n        // Restore selector radius\r\n        let r = ATON.SUI._selectorRad;\r\n        ATON.SUI.mainSelector.scale.set(r,r,r);\r\n\r\n        VRoadcast._bStreamFocus = false;\r\n    }\r\n};\r\n\r\nVRoadcast.sendState = ()=>{\r\n    if (!VRoadcast.bSendState) return;\r\n    if (VRoadcast.uid === undefined) return;\r\n    if (!VRoadcast.socket || !VRoadcast._connected) return;\r\n    \r\n    let cpov = ATON.Nav._currPOV;\r\n    if (!cpov) return;\r\n    //console.log(cpov);\r\n\r\n    // Focus streaming\r\n    let fp = ATON.getSceneQueriedPoint();\r\n    if (VRoadcast._bStreamFocus && fp !== undefined){\r\n        //let F = new THREE.Vector3();\r\n        let fx = (fp.x /*- cpov.pos.x*/).toPrecision(5);\r\n        let fy = (fp.y /*- cpov.pos.y*/).toPrecision(5);\r\n        let fz = (fp.z /*- cpov.pos.z*/).toPrecision(5);\r\n        let r  = ATON.SUI.getSelectorRadius().toPrecision(5);\r\n        \r\n        VRoadcast.socket.emit(\"UFOCUS\", [fx,fy,fz, r]);\r\n    }\r\n\r\n    // Compose state\r\n    let S = {};\r\n    S.position = new THREE.Vector3();\r\n    S.quaternion = new THREE.Quaternion();\r\n\r\n    S.position.copy(cpov.pos);\r\n    S.quaternion.copy(ATON.Nav._qOri);\r\n    S.userid = VRoadcast.uid;\r\n\r\n    // Save bandwidth\r\n    if (VRoadcast._lastStateSent !== undefined){\r\n        let lastPos = VRoadcast._lastStateSent.position;\r\n        let lastOri = VRoadcast._lastStateSent.quaternion;\r\n\r\n        let dPos = lastPos.distanceToSquared(cpov.pos);\r\n        let dOri = lastOri.angleTo(ATON.Nav._qOri);\r\n\r\n        if ( dPos < VRoadcast.THRES_STATE_POS && dOri < VRoadcast.THRES_STATE_ORI) return;\r\n    }\r\n\r\n    // Encode and send\r\n    let binData = VRoadcast.encodeState(S);\r\n    VRoadcast.socket.emit(\"USTATE\", binData/*.buffer*/ );\r\n    VRoadcast._lastStateSent = S;\r\n\r\n    //console.log(\"State sent\");\r\n};\r\n\r\n\r\n// Avatars\r\nVRoadcast.getAvatar = (uid)=>{\r\n    return VRoadcast.avatarList[uid];\r\n};\r\n\r\nVRoadcast.touchAvatar = (uid)=>{\r\n    // First time\r\n    if (VRoadcast.avatarList[uid] === undefined){\r\n        let A = new VRoadcast.Avatar(uid);\r\n        A.attachTo(VRoadcast.avaGroup);\r\n        \r\n        A.loadRepresentation(ATON.PATH_RES+\"models/vrc/head.gltf\");\r\n        //console.log(VRoadcast.avaGroup);\r\n\r\n        VRoadcast.avatarList[uid] = A;\r\n\r\n        //console.log(VRoadcast.avatarList);\r\n        //console.log(ATON.MatHub.materials.avatars);\r\n        //console.log(A);\r\n        \r\n        //VRoadcast._numUsers++;\r\n        //ATON.fireEvent(\"VRC_UserEnter\", uid);\r\n    }\r\n\r\n    let A = VRoadcast.avatarList[uid];\r\n\r\n    // Reclaim of previously used slot\r\n    if (!A.visible){\r\n        VRoadcast._numUsers++;\r\n        ATON.fireEvent(\"VRC_UserEnter\", uid);\r\n    }\r\n\r\n    if (VRoadcast._bShowAvaG) A.show();\r\n\r\n    return A;\r\n}\r\n\r\nVRoadcast.destroyAvatar = (uid)=>{\r\n    let A = VRoadcast.avatarList[uid];\r\n    if (A === undefined) return;\r\n\r\n    A.destroy();\r\n};\r\n\r\nVRoadcast.clearAllAvatars = ()=>{\r\n    for (let i in VRoadcast.avatarList){\r\n        let A = VRoadcast.avatarList[i];\r\n        A.hide();\r\n        //A.dispose();\r\n    }\r\n};\r\n\r\nexport default VRoadcast;","/*\r\n    ATON Semantic shapes factory\r\n    TODO: rename in SemHub\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Semantic Factory\r\n@namespace SemFactory\r\n*/\r\nlet SemFactory = {};\r\n\r\nSemFactory.FLOAT_PREC = 5;\r\n\r\nSemFactory.init = ()=>{\r\n    SemFactory.bConvexBuilding = false;\r\n    SemFactory.convexPoints = [];\r\n    //SemFactory.convexMeshes = [];\r\n    SemFactory.convexNode   = undefined; // keeps track of current convex semnode\r\n    SemFactory.currConvexMesh = undefined;\r\n    \r\n    // Temp sem node to hold developing convex mesh\r\n    SemFactory.currSemNode = ATON.createSemanticNode();\r\n    SemFactory.currSemNode.disablePicking();\r\n    SemFactory.currSemNode.attachToRoot();\r\n\r\n    SemFactory.resetMaterial();\r\n\r\n    SemFactory._numShapes = 0; // counter of shapes produced\r\n};\r\n\r\n\r\n// Current material\r\nSemFactory.resetMaterial = ()=>{\r\n    SemFactory.currMaterial = ATON.MatHub.getMaterial(\"semanticShapeHL\"); // current sem material we are using. Was \"semanticShape\"\r\n};\r\n\r\nSemFactory.setMaterial = (m)=>{\r\n    if (m === undefined) return;\r\n    SemFactory.currMaterial = m;\r\n};\r\n\r\n\r\n// Convex shapes\r\n// NOTE: if semid exists, add mesh under the same id\r\nSemFactory.addConvexPoint = (/*semid,*/ p)=>{\r\n    if (p === undefined) return false;\r\n\r\n    if (SemFactory.convexPoints.length>0){\r\n        let pp = SemFactory.convexPoints[SemFactory.convexPoints.length-1];\r\n        if (p.equals(pp)) return false;\r\n    }\r\n\r\n    SemFactory.convexPoints.push(p);\r\n    let numPoints = SemFactory.convexPoints.length;\r\n\r\n    // Spatial UI\r\n    let M = new THREE.Mesh( ATON.Utils.geomUnitSphere, ATON.MatHub.getMaterial(\"semanticShapeEdit\"));\r\n    M.position.copy(p);\r\n    M.scale.set(0.001,0.001,0.001);\r\n    ATON.SUI.gPoints.add( M );\r\n\r\n    if (numPoints < 4) return false;\r\n\r\n    // lets build convex shape\r\n    let geom   = new THREE.ConvexGeometry( SemFactory.convexPoints ); // new THREE.ConvexBufferGeometry( SemFactory.convexPoints );\r\n    let semesh = new THREE.Mesh( geom, ATON.MatHub.getMaterial(\"semanticShapeEdit\") );\r\n\r\n    //let numMeshes = SemFactory.convexMeshes.length;\r\n\r\n    // First time: create semnode and add it to current sem group\r\n    if (!SemFactory.bConvexBuilding){\r\n        //if (semid === undefined) semid = \"sem\"+SemFactory._numShapes;\r\n\r\n        //SemFactory.convexNode = ATON.getSemanticNode(semid) || ATON.createSemanticNode(semid);\r\n        //SemFactory.convexNode = ATON.createSemanticNode();\r\n        //SemFactory.convexNode.add(semesh);\r\n        SemFactory.currSemNode.add(semesh);\r\n        \r\n        // Store\r\n        semesh.userData._convexPoints = [];\r\n        for (let i=0; i<numPoints; i++){\r\n            //semesh.userData._convexPoints.push( ATON.Utils.setVectorPrecision(SemFactory.convexPoints[i],3) );\r\n\r\n            ATON.Utils.setVectorPrecision(SemFactory.convexPoints[i], SemFactory.FLOAT_PREC);\r\n            \r\n            semesh.userData._convexPoints.push(SemFactory.convexPoints[i].x);\r\n            semesh.userData._convexPoints.push(SemFactory.convexPoints[i].y);\r\n            semesh.userData._convexPoints.push(SemFactory.convexPoints[i].z);\r\n        }\r\n\r\n        SemFactory.currConvexMesh = semesh;\r\n        SemFactory.bConvexBuilding = true;\r\n    }\r\n\r\n    // keep updating current semantic geometry\r\n    else {\r\n        let currSemesh = SemFactory.currConvexMesh;\r\n        currSemesh.geometry.dispose();\r\n        currSemesh.geometry = geom;\r\n\r\n        //currSemesh.userData._convexPoints.push( ATON.Utils.setVectorPrecision(p,3) );\r\n\r\n        ATON.Utils.setVectorPrecision(p,4);\r\n        currSemesh.userData._convexPoints.push( p.x );\r\n        currSemesh.userData._convexPoints.push( p.y );\r\n        currSemesh.userData._convexPoints.push( p.z );\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\nSemFactory.undoConvexPoint = ()=>{\r\n    let numPoints = SemFactory.convexPoints.length;\r\n    if (numPoints === 0) return;\r\n\r\n    //if (!SemFactory.bConvexBuilding) return;\r\n\r\n    SemFactory.convexPoints.pop();\r\n\r\n    if (SemFactory.currConvexMesh){\r\n        let udMesh = SemFactory.currConvexMesh.userData;\r\n        if (udMesh._convexPoints) udMesh._convexPoints.pop();\r\n    }\r\n};\r\n\r\nSemFactory.stopCurrentConvex = ()=>{\r\n    SemFactory.convexPoints = [];\r\n    SemFactory.bConvexBuilding = false;\r\n\r\n    SemFactory.currSemNode.removeChildren();\r\n    ATON.SUI.gPoints.removeChildren();\r\n};\r\n\r\nSemFactory.getCurrentConvexShape = ()=>{\r\n    return SemFactory.currSemNode;\r\n};\r\n\r\nSemFactory.isBuildingShape = ()=>{\r\n    if (SemFactory.convexPoints.length>0) return true;\r\n\r\n    return false;\r\n};\r\n\r\nSemFactory.completeConvexShape = (semid)=>{\r\n    SemFactory.convexPoints = [];\r\n    SemFactory.bConvexBuilding = false;\r\n\r\n    //if (SemFactory.convexNode === undefined) return undefined;\r\n    //if (SemFactory.currConvexMesh === undefined) return undefined;\r\n    if (SemFactory.currSemNode === undefined) return;\r\n\r\n    if (semid === undefined) semid = \"sem\"+SemFactory._numShapes;\r\n\r\n    let S = ATON.getSemanticNode(semid) || ATON.createSemanticNode(semid);\r\n    \r\n    let meshape = SemFactory.currSemNode.children[0];\r\n    \r\n    ATON.SUI.addSemIcon(semid, meshape);\r\n\r\n    S.add( meshape );\r\n    S.setMaterial( /*SemFactory.currMaterial*/ATON.MatHub.materials.semanticShape);\r\n    S.setDefaultAndHighlightMaterials(/*SemFactory.currMaterial*/ ATON.MatHub.materials.semanticShape, /*ATON.MatHub.materials.semanticShapeHL*/SemFactory.currMaterial);\r\n    S.enablePicking();\r\n\r\n    SemFactory.currSemNode.removeChildren();\r\n\r\n/*\r\n    SemFactory.convexNode = ATON.getSemanticNode(semid) || ATON.createSemanticNode(semid);\r\n    SemFactory.convexNode.add(SemFactory.currConvexMesh);\r\n\r\n    SemFactory.convexNode.setMaterial( SemFactory.currMaterial );\r\n    SemFactory.convexNode.setDefaultMaterial(SemFactory.currMaterial);\r\n    SemFactory.convexNode.enablePicking();\r\n*/\r\n    SemFactory._numShapes++;\r\n\r\n    //console.log(SemFactory.convexNode);\r\n    //console.log(SemFactory.convexNode.userData._convexPoints);\r\n\r\n    //return SemFactory.convexNode;\r\n\r\n    // Spatial UI\r\n    ATON.SUI.gPoints.removeChildren();\r\n    ATON._bqSem = true;\r\n\r\n    return S;\r\n};\r\n\r\nSemFactory.createConvexShape = (semid, points)=>{\r\n    let geom   = new THREE.ConvexGeometry( points ); // CHECK: it was THREE.ConvexBufferGeometry( points );\r\n    let semesh = new THREE.Mesh( geom, /*SemFactory.currMaterial*/ATON.MatHub.materials.semanticShape );\r\n\r\n    semesh.userData._convexPoints = [];\r\n    for (let i=0; i<points.length; i++){\r\n        let p = points[i];\r\n        ATON.Utils.setVectorPrecision(p,4);\r\n\r\n        semesh.userData._convexPoints.push( p.x );\r\n        semesh.userData._convexPoints.push( p.y );\r\n        semesh.userData._convexPoints.push( p.z );\r\n    }\r\n\r\n    ATON.SUI.addSemIcon(semid, semesh);\r\n\r\n    let S = ATON.getOrCreateSemanticNode(semid);\r\n    S.add(semesh);\r\n    S.setDefaultAndHighlightMaterials(/*SemFactory.currMaterial*/ATON.MatHub.materials.semanticShape, SemFactory.currMaterial /*ATON.MatHub.materials.semanticShapeHL*/);\r\n\r\n    S.enablePicking();\r\n    ATON._bqSem = true;\r\n\r\n    return S;\r\n};\r\n\r\nSemFactory.addSurfaceConvexPoint = (/*semid,*/ offset)=>{\r\n    if (ATON._queryDataScene === undefined) return false;\r\n\r\n    if (offset === undefined) offset = 0.02;\r\n\r\n    let p   = ATON._queryDataScene.p;\r\n    let eye = ATON.Nav.getCurrentEyeLocation();\r\n/*\r\n    let n = ATON._queryDataScene.n;\r\n    p.x += (n.x * offset);\r\n    p.y += (n.y * offset);\r\n    p.z += (n.z * offset);\r\n*/\r\n    p.lerpVectors(p, eye, offset);\r\n\r\n    SemFactory.addConvexPoint(p);\r\n    return p;\r\n};\r\n\r\n\r\n// Spherical semantic shapes\r\n// NOTE: if semid exists, add mesh under the same id\r\nSemFactory.createSphere = (semid, location, radius)=>{\r\n    if (location === undefined) return undefined;\r\n    if (radius === undefined) return undefined;\r\n\r\n/*\r\n    if (ATON.getSemanticNode(semid)){\r\n        console.log(\"ERROR SemFactory: semantic node \"+semid+\" already exists.\");\r\n        return false;\r\n    }\r\n*/\r\n    if (semid === undefined) semid = \"sem\"+SemFactory._numShapes;\r\n\r\n    let S = ATON.getOrCreateSemanticNode(semid);\r\n\r\n    //let g = new THREE.SphereGeometry( 1.0, 16, 16 );\r\n    let M = new THREE.Mesh( ATON.Utils.geomUnitSphere, /*SemFactory.currMaterial*/ATON.MatHub.materials.semanticShape );\r\n    \r\n    // Note: we add multiple spheres to the same <semid> node\r\n    let sphere = new THREE.Object3D();\r\n    sphere.position.copy(location);\r\n    sphere.scale.set(radius, radius, radius);\r\n    sphere.add(M);\r\n\r\n    ATON.SUI.addSemIcon(semid, sphere);\r\n\r\n    S.add( sphere );\r\n    S.enablePicking();\r\n    S.setDefaultAndHighlightMaterials(/*SemFactory.currMaterial*/ATON.MatHub.materials.semanticShape, SemFactory.currMaterial/*ATON.MatHub.materials.semanticShapeHL*/);\r\n\r\n    //SemFactory.currParent.add( S );\r\n\r\n    SemFactory._numShapes++;\r\n    ATON._bqSem = true;\r\n\r\n    return S;\r\n};\r\n\r\nSemFactory.createSurfaceSphere = (semid)=>{\r\n    if (!ATON._queryDataScene) return undefined;\r\n\r\n    let p = ATON._queryDataScene.p;\r\n    let r = ATON.SUI.getSelectorRadius();\r\n\r\n    return SemFactory.createSphere(semid, p,r);\r\n};\r\n\r\nSemFactory.deleteSemanticNode = (semid)=>{\r\n    let S = ATON.getSemanticNode(semid);\r\n\r\n    if (S === undefined) return false;\r\n    S.removeChildren();\r\n\r\n    if (ATON.SUI.gSemIcons === undefined) return true;\r\n\r\n    for (let s in ATON.SUI.gSemIcons.children){\r\n        let C = ATON.SUI.gSemIcons.children[s];\r\n        if (C && C.name === semid) ATON.SUI.gSemIcons.removeChild(C);\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\nexport default SemFactory;","/*\r\n    ATON Front-end blueprint\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nGeneric front-end routines for ATON-based web-apps. \r\nA set of blueprints to facilitate or support creation of a front-end\r\n@namespace FE\r\n*/\r\nlet FE = {};\r\n\r\n// Semantic-shapes types\r\nFE.SEMSHAPE_SPHERE = 0;\r\nFE.SEMSHAPE_CONVEX = 1;\r\n\r\nFE.POPUP_DELAY = 300;\r\n\r\n/**\r\nInitialize Front-end\r\n*/\r\nFE.realize = ()=>{\r\n    FE.PATH_RES_ICONS = ATON.PATH_RES+\"icons/\";\r\n\r\n    FE._bPopup = false;     // showing popup\r\n    FE.popupBlurBG = 0.5;   // blur 3D content on popup show, 0.0 to disable\r\n    FE._userAuth = {};\r\n\r\n    FE._bControlLight = false;\r\n    FE._bControlSelScale = false;\r\n    FE._cLightDir = new THREE.Vector3();\r\n\r\n    FE._auSemNode = undefined;\r\n    FE._auSemNodePlaying = false;\r\n\r\n    FE._bReqHome = false;   // auto-compute home\r\n\r\n    FE._vrcAddr = undefined;\r\n    FE._bVRCsetup = false;\r\n\r\n    FE.urlParams = new URLSearchParams(window.location.search);\r\n\r\n    FE._uiSetupBase();\r\n\r\n    // UI profiles\r\n    FE._uiProfiles    = {};\r\n    FE._uiCurrProfile = undefined;\r\n\r\n    FE._selRanges    = [0.01, 50.0]; // 3D Selector ranges\r\n    FE._selRefRadius = 0.5;\r\n\r\n    ATON.realize();\r\n\r\n    // Built-in events\r\n    ATON.on(\"Fullscreen\", (b)=>{\r\n        FE.uiSwitchButton(\"fullscreen\",b);\r\n    });\r\n\r\n    // built-in base front-end parameters\r\n    let ddens = ATON.FE.urlParams.get('d');\r\n    if (ddens && ddens>0.0) ATON.setDefaultPixelDensity(ddens);\r\n};\r\n\r\nFE._handleHomeReq = ()=>{\r\n    if (FE._bReqHome) return;\r\n\r\n    FE._bReqHome = true;\r\n\r\n    if (ATON.Nav.homePOV === undefined){\r\n        ATON.Nav.computeAndRequestDefaultHome(0.5);\r\n        return;\r\n    }\r\n    \r\n    ATON.Nav.requestHome(1.0);\r\n    //console.log(ATON.Nav.homePOV);\r\n};\r\n\r\n/**\r\nAdd basic front-end events such as showing spinner while loading assets and home viewpoint setup\r\n*/\r\nFE.addBasicLoaderEvents = ()=>{\r\n    ATON.on(\"NodeRequestFired\", ()=>{ $(\"#idLoader\").show(); });\r\n\r\n    ATON.on(\"SceneJSONLoaded\",()=>{\r\n        if (ATON.SceneHub.getDescription()) $(\"#btn-info\").show();\r\n        if (ATON.Nav.homePOV !== undefined) ATON.Nav.requestHome(1.0);\r\n    });\r\n\r\n    ATON.on(\"AllNodeRequestsCompleted\", ()=>{ \r\n        $(\"#idLoader\").hide();\r\n        if (ATON._ccModels.length>0) $(\"#btn-cc\").show();\r\n        \r\n        FE.computeSelectorRanges();\r\n        if (ATON.Nav.isOrbit()) ATON.SUI.setSelectorRadius( FE._selRefRadius );\r\n\r\n        FE._handleHomeReq();\r\n    });\r\n\r\n    //ATON.on(\"frame\", FE._update);\r\n    ATON.addUpdateRoutine(FE._update);\r\n};\r\n\r\nFE.controlLight = (b)=>{\r\n    FE._bControlLight = b;\r\n    ATON.Nav.setUserControl(!b);\r\n};\r\n\r\nFE.controlSelectorScale = (b)=>{\r\n    FE._bControlSelScale = b;\r\n    ATON._bPauseQuery = b;\r\n    ATON.Nav.setUserControl(!b);\r\n};\r\n\r\nFE.useMouseWheelToScaleSelector = (f)=>{\r\n    if (f === undefined) f = 0.9; \r\n\r\n    ATON.on(\"MouseWheel\", (d)=>{\r\n\r\n        if (ATON._kModCtrl){\r\n            let ff = ATON.Nav.getFOV();\r\n            \r\n            if (d > 0.0) ff += 1.0;\r\n            else ff -= 1.0;\r\n\r\n            ATON.Nav.setFOV(ff);\r\n            return;\r\n        }\r\n\r\n        if (ATON._kModShift){\r\n            let r = ATON.SUI.mainSelector.scale.x;\r\n\r\n            if (d > 0.0) r *= f;\r\n            else r /= f;\r\n\r\n            if (r < FE._selRanges[0]) r = FE._selRanges[0];\r\n            if (r > FE._selRanges[1]) r = FE._selRanges[1];\r\n\r\n            ATON.SUI.setSelectorRadius(r);\r\n            return;\r\n        }\r\n    });\r\n};\r\n\r\n\r\n/**\r\nLoad a scene. \r\nYou can use ATON.on(\"SceneJSONLoaded\", ...) to perform additional tasks when the scene JSON is fully loaded\r\n@param {string} sid - the scene ID (e.g.: 'sample/venus')\r\n*/\r\nFE.loadSceneID = (sid)=>{\r\n    if (sid === undefined) return;\r\n\r\n    let reqstr = ATON.PATH_RESTAPI_SCENE + sid;\r\n    //if (ATON.SceneHub._bEdit) reqstr += \",edit\";\r\n\r\n    ATON.SceneHub.load(reqstr, sid);\r\n\r\n    $(\"meta[property=og\\\\:image]\").attr(\"content\", ATON.PATH_SCENES+sid+'/cover.png');\r\n    $(\"meta[property=og\\\\:image\\\\:secure_url]\").attr(\"content\", ATON.PATH_SCENES+sid+'/cover.png');\r\n    $(\"meta[property=og\\\\:image\\\\:type]\").attr(\"content\", \"image/png\");\r\n    $(\"meta[property=og\\\\:image\\\\:width]\").attr(\"content\", \"200\");\r\n    $(\"meta[property=og\\\\:image\\\\:height]\").attr(\"content\", \"200\");\r\n\r\n    console.log(reqstr);\r\n};\r\n\r\nFE._update = ()=>{\r\n    //if (ATON.XR._bPresenting) return;\r\n\r\n    if (FE._bControlLight){\r\n        // Normalized\r\n        const sx = ATON._screenPointerCoords.x;\r\n        const sy = ATON._screenPointerCoords.y;\r\n        //console.log(sx,sy);\r\n\r\n        FE._cLightDir.x = -Math.cos(sx * Math.PI);\r\n        FE._cLightDir.y = -sy * 2.0;\r\n        FE._cLightDir.z = -Math.sin(sx * Math.PI);\r\n\r\n        //FE._cLightDir.x = ATON.Nav._vDir.x + (sx);\r\n\r\n        FE._cLightDir.normalize();\r\n\r\n        ATON.setMainLightDirection(FE._cLightDir);\r\n        //ATON.updateDirShadows();\r\n    }\r\n/*\r\n    if (FE._bControlSelScale){\r\n        //const sx = ATON._screenPointerCoords.x;\r\n        const f = ATON._screenPointerCoords.y;\r\n\r\n        const r = ATON.SUI.mainSelector.scale.x + f;\r\n        if (r > 0.0001) ATON.SUI.setSelectorRadius(r);\r\n    }\r\n*/\r\n};\r\n\r\n\r\n// HTML UI\r\n//=======================================\r\n// Sample basic UI setup\r\nFE.uiBasicSetup = ()=>{\r\n    FE.uiAddButton(\"idTopToolbar\",\"fullscreen\", ATON.toggleFullScreen );\r\n    if (ATON.Utils.isConnectionSecure()) FE.uiAddButton(\"idTopToolbar\",\"vr\", ATON.XR.toggle );\r\n\r\n    FE.uiAddButton(\"idBottomToolbar\",\"home\", ()=>{ ATON.Nav.requestHome(0.1); });\r\n};\r\n\r\nFE._uiSetupBase = ()=>{\r\n    $(\"#idPopup\").click( FE.popupClose );\r\n    $(\"#idLoader\").html(\"<img src='\"+ATON.PATH_RES+\"loader.png'>\");\r\n};\r\n\r\n/**\r\nAdd generic icon button inside a specific div container\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n@param {string} icon - the icon. Can be shortname for default icons in /res/icons/ or URL to .png image\r\n@param {function} onPress - function triggered when pressing the button\r\n@param {string} tooltip - (optional) tooltip\r\n*/\r\nFE.uiAddButton = (idcontainer, icon, onPress, tooltip)=>{\r\n    let iconurl;\r\n    let iconid;\r\n\r\n    if (icon.endsWith(\".png\")){\r\n        iconurl = icon;\r\n        iconid  = icon.slice(0,-4);\r\n    }\r\n    else {\r\n        iconurl = FE.PATH_RES_ICONS+icon+\".png\";\r\n        iconid  = icon;\r\n    }\r\n\r\n    let elid = \"btn-\"+iconid;\r\n    //let htmlcode = \"<div id='\"+elid+\"' class='atonBTN' ><img src='\"+iconurl+\"'></div>\";\r\n    let el = $(\"<div id='\"+elid+\"' class='atonBTN' ><img src='\"+iconurl+\"'></div>\");\r\n    \r\n    $(\"#\"+idcontainer).append(el);\r\n\r\n    if (onPress) el.click( onPress ); //$(\"#\"+elid).click( onPress );\r\n    if (tooltip) el.attr(\"title\", tooltip); //$(\"#\"+elid).attr(\"title\", tooltip);\r\n};\r\n\r\nFE.uiSwitchButton = (iconid, b)=>{\r\n    if (b) $(\"#btn-\"+iconid).addClass(\"switchedON\");\r\n    else $(\"#btn-\"+iconid).removeClass(\"switchedON\");\r\n};\r\n\r\n/**\r\nAdd home button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonHome = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"home\", ()=>{ \r\n        ATON.Nav.requestHome(0.3);\r\n    }, \"Home viewpoint\");\r\n};\r\n\r\n/**\r\nAdd first-person button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonFirstPerson = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"fp\", ()=>{\r\n        if (ATON.Nav.isFirstPerson()){\r\n            ATON.Nav.setOrbitControl();\r\n            //ATON.Nav.restorePreviousNavMode();\r\n            FE.uiSwitchButton(\"fp\",false);\r\n        }\r\n        else {\r\n            ATON.Nav.setFirstPersonControl();\r\n            FE.uiSwitchButton(\"fp\",true);\r\n        }\r\n    }, \"First-person navigation mode\");\r\n\r\n    if (ATON.Nav.isFirstPerson()) FE.uiSwitchButton(\"fp\",true);\r\n    else FE.uiSwitchButton(\"fp\",false);\r\n};\r\n\r\n/**\r\nAdd immersive-VR button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonVR = (idcontainer)=>{\r\n    if (!ATON.Utils.isConnectionSecure()) return;\r\n    //if (!ATON.Utils.isVRsupported()) return; //Not showing on mobile\r\n\r\n    //ATON.XR.setSessionType(\"immersive-ar\");\r\n\r\n    FE.uiAddButton(idcontainer, \"vr\", ATON.XR.toggle, \"Immersive VR mode\" );\r\n};\r\n\r\n/**\r\nAdd device-orientation button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonDeviceOrientation = (idcontainer)=>{\r\n    if (!ATON.Utils.isConnectionSecure()) return;\r\n    if (!ATON.Utils.isMobile()) return;\r\n\r\n    FE.uiAddButton(idcontainer,\"devori\", ()=>{\r\n        if (ATON.Nav.isDevOri()){\r\n            //ATON.Nav.setOrbitControl();\r\n            ATON.Nav.restorePreviousNavMode();\r\n            FE.uiSwitchButton(\"devori\",false);\r\n        }\r\n        else {\r\n            ATON.Nav.setDeviceOrientationControl();\r\n            FE.uiSwitchButton(\"devori\",true);\r\n        }\r\n    }, \"Device-orientation mode\");\r\n\r\n    if (ATON.Nav.isDevOri()) FE.uiSwitchButton(\"devori\",true);\r\n    else FE.uiSwitchButton(\"devori\",false);\r\n};\r\n\r\n/**\r\nAdd Navigation button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonNav = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer,\"nav\", ()=>{\r\n        FE.popupNav();\r\n    }, \"Navigation\");\r\n};\r\n\r\n/**\r\nAdd talk button (VRoadcast)\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonTalk = (idcontainer)=>{\r\n    if (!ATON.Utils.isConnectionSecure()) return;\r\n\r\n    FE.uiAddButton(idcontainer, \"talk\", ()=>{\r\n        if (ATON.MediaRec.isAudioRecording()){\r\n            ATON.MediaRec.stopMediaStreaming();\r\n            //FE.uiSwitchButton(\"talk\",false);\r\n            $(\"#btn-talk\").removeClass(\"atonBTN-rec\");\r\n        }\r\n        else {\r\n            ATON.MediaRec.startMediaStreaming();\r\n            //FE.uiSwitchButton(\"talk\",true);\r\n            $(\"#btn-talk\").addClass(\"atonBTN-rec\");\r\n        }\r\n    }, \"Talk ON/OFF\");\r\n\r\n    if (ATON.MediaRec.isAudioRecording()) $(\"#btn-talk\").addClass(\"atonBTN-rec\");\r\n    else $(\"#btn-talk\").removeClass(\"atonBTN-rec\");\r\n};\r\n\r\n/**\r\nAdd focus stream button (VRoadcast)\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonStreamFocus = (idcontainer)=>{\r\n\r\n    FE.uiAddButton(idcontainer, \"focus\", ()=>{\r\n        if (ATON.VRoadcast._bStreamFocus){\r\n            ATON.VRoadcast.setFocusStreaming(false);\r\n            $(\"#btn-focus\").removeClass(\"atonBTN-rec\");\r\n        }\r\n        else {\r\n            ATON.VRoadcast.setFocusStreaming(true);\r\n            $(\"#btn-focus\").addClass(\"atonBTN-rec\");\r\n        }\r\n    }, \"Focus streaming ON/OFF\");\r\n\r\n    if (ATON.VRoadcast._bStreamFocus) $(\"#btn-focus\").addClass(\"atonBTN-rec\");\r\n    else $(\"#btn-focus\").removeClass(\"atonBTN-rec\");\r\n};\r\n\r\n/**\r\nAdd QR-code button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonQR = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer,\"qr\", FE.popupQR, \"QR-code\" );\r\n};\r\n\r\n/**\r\nAdd scene information button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonInfo = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"info\", ATON.FE.popupSceneInfo, \"Scene information\");\r\n    $(\"#btn-info\").hide();\r\n};\r\n\r\n/**\r\nAdd fullscreen button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonFullScreen = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"fullscreen\", ()=>{\r\n        ATON.toggleFullScreen();\r\n    }, \"Fullscreen\");\r\n\r\n    FE.uiSwitchButton(\"fullscreen\", ATON.isFullscreen());\r\n};\r\n\r\n//TODO:\r\nFE.uiAddKeywordsArea = (idcontainer, kwList, onAddKeyword, onRemoveKeyword)=>{\r\n    let htmlcode = \"\";\r\n    htmlcode += \"Add keyword: <input id='idKWordInput' type='text' maxlength='100' size='20'><div class='atonBTN atonBTN-green' id='idKWadd'><img src='\"+ATON.FE.PATH_RES_ICONS+\"add.png'></div><br>\";\r\n    htmlcode += \"<div id='idKWords'></div>\";\r\n\r\n    $(\"#\"+idcontainer).html(htmlcode);\r\n\r\n    FE.uiAttachInputFilterID(\"idKWordInput\");\r\n\r\n    let kwsObj = {};\r\n\r\n    let addKWtoBox = (kw)=>{\r\n        if (kwsObj[kw]) return; // check duplicate\r\n\r\n        kw = kw.toLowerCase().trim();\r\n\r\n        $(\"#idKWordInput\").val(\"\"); // clear\r\n\r\n        kwsObj[kw] = 1;\r\n\r\n        console.log(\"Added keyword \"+kw);\r\n        if (onAddKeyword) onAddKeyword(kw);\r\n\r\n        // Populate box with remove handlers\r\n        $(\"#idKWords\").append(\"<div class='atonKeyword atonKeywordActivable' id='idkw-\"+kw+\"'>\"+kw+\"</div>\");\r\n        $(\"#idkw-\"+kw).click(()=>{\r\n            $(\"#idkw-\"+kw).remove();\r\n\r\n            kwsObj[kw] = undefined;\r\n\r\n            console.log(\"Removed keyword \"+kw);\r\n            if (onRemoveKeyword) onRemoveKeyword(kw);\r\n        });\r\n    };\r\n\r\n    if (kwList){\r\n        for (let k in kwList) addKWtoBox( kwList[k] );\r\n    }\r\n\r\n    $(\"#idKWordInput\").keypress(function(event){\r\n        let keycode = (event.keyCode ? event.keyCode : event.which);\r\n        if (keycode != '13') return;\r\n\r\n        let kw = $(\"#idKWordInput\").val().toLowerCase().trim();\r\n        if (!kw || kw.length < 3) return;\r\n\r\n        addKWtoBox(kw);\r\n    });\r\n\r\n    $(\"#idKWadd\").click(()=>{\r\n        let kw = $(\"#idKWordInput\").val().toLowerCase().trim();\r\n        if (!kw || kw.length < 3) return;\r\n\r\n        addKWtoBox(kw);\r\n    });\r\n};\r\n\r\n// Get css class from vrc ID\r\nFE.getVRCclassFromID = (uid)=>{\r\n    let i = (uid%6);\r\n    return \"atonVRCu\"+i;\r\n};\r\n\r\n// Setup VRC events\r\nFE._setupVRCevents = ()=>{\r\n    if (FE._bVRCsetup) return;\r\n\r\n    ATON.on(\"VRC_IDassigned\", (uid)=>{\r\n        $(\"#btn-vrc\").addClass( FE.getVRCclassFromID(uid) );\r\n\r\n        // Selector color\r\n        //ATON.MatHub.materials.selector.color = ATON.VRoadcast.ucolors[uid%6];\r\n        ATON.SUI.setSelectorColor(ATON.VRoadcast.ucolors[uid%6]);\r\n\r\n        FE.checkAuth((data)=>{\r\n            if (data.username!==undefined /*&& ATON.VRoadcast._username===undefined*/) ATON.VRoadcast.setUsername(data.username);\r\n        });\r\n    });\r\n\r\n    ATON.on(\"VRC_SceneState\", (sstate)=>{\r\n        let numUsers = ATON.VRoadcast.getNumUsers();\r\n        if (numUsers>1) $(\"#idVRCnumusers\").html(numUsers);\r\n        else $(\"#idVRCnumusers\").html(\"\");\r\n\r\n        console.log(\"Users: \"+numUsers);\r\n    });\r\n/*\r\n    ATON.on(\"VRC_UserEnter\", (uid)=>{\r\n        let numUsers = ATON.VRoadcast.getNumUsers();\r\n        $(\"#idVRCnumusers\").html(numUsers);\r\n        console.log(\"Users: \"+numUsers);\r\n    });\r\n    ATON.on(\"VRC_UserLeave\", (uid)=>{\r\n        let numUsers = ATON.VRoadcast.getNumUsers();\r\n        $(\"#idVRCnumusers\").html(numUsers);\r\n        console.log(\"Users: \"+numUsers);\r\n    });\r\n*/\r\n    ATON.on(\"VRC_Disconnected\", ()=>{\r\n        $(\"#btn-vrc\").attr(\"class\",\"atonBTN\");\r\n        // Selector color\r\n        //ATON.MatHub.materials.selector.color = ATON.MatHub.colors.green;\r\n        ATON.SUI.setSelectorColor(ATON.MatHub.colors.defUI);\r\n\r\n        $(\"#idVRCnumusers\").html(\"\");\r\n    });\r\n\r\n    FE._bVRCsetup = true;\r\n};\r\n\r\n/**\r\nAdd VRoadcast button (to connect/disconnect from collaborative sessions)\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonVRC = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"vrc\", ()=>{\r\n        if (ATON.VRoadcast.isConnected()){\r\n            FE.popupVRC();\r\n        }\r\n        else {\r\n            ATON.VRoadcast.connect(FE._vrcAddr);\r\n        }\r\n    }, \"VRoadcast (collaborative session)\");\r\n\r\n    $(\"#btn-vrc\").append(\"<span id='idVRCnumusers' class='atonVRCcounter'></span>\");\r\n\r\n    //$(\"<div id='idVRCchatPanel' class='atonVRCsidePanel'>xxx</div>\").appendTo(document.body);\r\n    //$(\"#idVRCchatPanel\").append(ATON.VRoadcast._elChat);\r\n    FE._setupVRCevents();\r\n\r\n    if (ATON.VRoadcast.uid !== undefined) $(\"#btn-vrc\").addClass( FE.getVRCclassFromID(ATON.VRoadcast.uid) );\r\n    else $(\"#btn-vrc\").attr(\"class\",\"atonBTN\");\r\n};\r\n\r\n/**\r\nAdd user button (login/logout)\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonUser = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"user\", ()=>{\r\n        FE.popupUser();\r\n    }, \"User\");\r\n\r\n    FE.checkAuth((r)=>{\r\n        if (r.username !== undefined) $(\"#btn-user\").addClass(\"switchedON\");\r\n        else $(\"#btn-user\").removeClass(\"switchedON\");\r\n    });\r\n};\r\n\r\n/**\r\nAdd persistent editing mode button\r\n@param {string} idcontainer - the id of html container (e.g.: \"idTopToolbar\")\r\n*/\r\nFE.uiAddButtonEditMode = (idcontainer)=>{\r\n    FE.uiAddButton(idcontainer, \"edit\", ()=>{\r\n        FE.checkAuth((data)=>{\r\n            if (data.username !== undefined){\r\n                ATON.SceneHub._bEdit = !ATON.SceneHub._bEdit;\r\n                FE.uiSwitchButton(\"edit\",ATON.SceneHub._bEdit);\r\n            }\r\n\r\n            else {\r\n                FE.popupUser();  \r\n            }\r\n        });\r\n    });\r\n};\r\n\r\n/**\r\nAdd UI Profile to the front-end\r\n@param {string} id - profile ID\r\n@param {function} uiFunction - function that creates UI (HTML or SUI elements) for that profile\r\n*/\r\nFE.uiAddProfile = (id, uiFunction)=>{\r\n    if (typeof uiFunction !== 'function') return;\r\n\r\n    FE._uiProfiles[id] = uiFunction;\r\n};\r\n\r\n/**\r\nLoad specific UI Profile for the front-end\r\n@param {string} id - profile ID\r\n*/\r\nFE.uiLoadProfile = (id)=>{\r\n    let f = FE._uiProfiles[id];\r\n    if (f === undefined) return;\r\n\r\n    f();\r\n    FE._uiCurrProfile = id;\r\n    console.log(\"Loaded UI Profile: \"+FE._uiCurrProfile);\r\n};\r\n\r\nFE.attachHandlerToButton = (idbutton, h)=>{\r\n    if (h === undefined) return;\r\n\r\n    $(\"#\"+idbutton).click(()=>{ h(); });\r\n};\r\n\r\n// Attach ID validator to given input field\r\nFE.uiAttachInputFilterID = (inputid)=>{\r\n    $(\"#\"+inputid).on('keyup change input', ()=>{\r\n        let value = $(\"#\"+inputid).val();\r\n        let regReplace = new RegExp('[^A-Za-z0-9-_]', 'ig');\r\n        $(\"#\"+inputid).val( value.replace(regReplace, '') );\r\n\r\n    });\r\n};\r\n\r\n// Utility to switch a node in a graph\r\nFE.switchNode = (nid, value, type)=>{\r\n    let N = undefined;\r\n    \r\n    if (type === ATON.NTYPES.SEM) N = ATON.getSemanticNode(nid);\r\n    else N = ATON.getSceneNode(nid);\r\n\r\n    if (N === undefined) return;\r\n\r\n    N.toggle(value);\r\n\r\n    ATON.fireEvent(\"FE_NodeSwitch\", {nid: nid, t: type, v: value});\r\n    //console.log(\"XXX\");\r\n};\r\n\r\n// Graphs\r\nFE.uiCreateGraph = (type)=>{\r\n    let nodes = ATON.snodes;\r\n    if (type === ATON.NTYPES.SEM) nodes = ATON.semnodes;\r\n\r\n    let htmlcontent = \"\";\r\n    for (let nid in nodes){\r\n        let N = nodes[nid];\r\n        \r\n        let chk = N.visible? \"checked\" : \"\";\r\n        if (nid !== \".\") htmlcontent += \"<input type='checkbox' \"+chk+\" onchange=\\\"ATON.FE.switchNode('\"+nid+\"',this.checked,\"+type+\");\\\">\"+nid+\"<br>\";\r\n    }\r\n\r\n    return htmlcontent;\r\n};\r\n\r\nFE.setupBasicUISounds = ()=>{\r\n    FE.auLib = {};\r\n\r\n    FE.auLib.switch = new Audio(ATON.PATH_RES+\"audio/switch.wav\");\r\n    FE.auLib.switch.loop = false;\r\n};\r\n\r\nFE.playAudioFromSemanticNode = (semid)=>{\r\n    //if (FE._auSemNodePlaying) return;\r\n    if (semid === undefined) return;\r\n\r\n    let S = ATON.getSemanticNode(semid);\r\n    if (S === undefined) return;\r\n\r\n    let au = S.getAudio();\r\n    if (au === undefined) return;\r\n\r\n    if (FE._auSemNode === undefined || FE._auSemNode === null) FE._auSemNode = new THREE.Audio( ATON.AudioHub._listener );\r\n    else FE._auSemNode.stop();\r\n\r\n    ATON.AudioHub._loader.load( au, (buffer)=>{\r\n        FE._auSemNode.setBuffer( buffer );\r\n        FE._auSemNode.setLoop( false );\r\n        //FE._auSemNode.setVolume( 0.5 );\r\n        //FE._auSemNode.setPlaybackRate(0.9);\r\n        FE._auSemNode.play();\r\n    });\r\n\r\n/*\r\n    if (FE._auSemNode === undefined) FE._auSemNode = new Audio();\r\n    \r\n    FE._auSemNodePlaying = true;\r\n    FE._auSemNode.src = au;\r\n    //FE._auSemNode.type = ATON.MediaRec.auType;\r\n    FE._auSemNode.play();\r\n\r\n    FE._auSemNode.onended = ()=>{\r\n        FE._auSemNodePlaying = false;\r\n    };\r\n*/\r\n};\r\n\r\n\r\n// Popups\r\n//===================================================================\r\n\r\n/**\r\nShow a modal popup.\r\n@param {string} htmlcontent - The HTML5 content for the popup\r\n@param {string} cssClasses - (optional) css classes for the popup\r\n*/\r\nFE.popupShow = (htmlcontent, cssClasses)=>{\r\n    if (FE._bPopup) return false;\r\n\r\n    let clstr = \"atonPopup \";\r\n    if (cssClasses) clstr += cssClasses;\r\n\r\n    let htcont = \"<div id='idPopupContent' class='\"+clstr+\"'>\";\r\n    htcont += htmlcontent+\"</div>\"\r\n\r\n    $('#idPopup').html(htcont);\r\n    $('#idPopupContent').click((e)=>{ e.stopPropagation(); });\r\n    $('#idPopup').fadeIn(FE.POPUP_DELAY);\r\n\r\n    FE._bPopup = true;\r\n\r\n    ATON._bListenKeyboardEvents = false;\r\n\r\n    if (FE.popupBlurBG > 0.0){\r\n        ATON._renderer.setPixelRatio( FE.popupBlurBG );\r\n        ATON._renderer.render( ATON._mainRoot, ATON.Nav._camera );\r\n    }\r\n\r\n    ATON._bPauseQuery = true;\r\n    \r\n    //ATON.renderPause();\r\n\r\n    $(\"#idTopToolbar\").hide();\r\n    $(\"#idBottomToolbar\").hide();\r\n    $(\"#idBottomRToolbar\").hide();\r\n    $(\"#idPoweredBy\").hide();\r\n\r\n    return true;\r\n};\r\n\r\n/**\r\nClose current popup\r\n*/\r\nFE.popupClose = (bNoAnim)=>{\r\n    FE._bPopup = false;\r\n\r\n    //ATON.renderResume();\r\n    ATON._bListenKeyboardEvents = true;\r\n    \r\n    if (FE.popupBlurBG > 0.0) ATON.resetPixelDensity();\r\n\r\n    if (bNoAnim === true) $(\"#idPopup\").hide();\r\n    else $(\"#idPopup\").fadeOut(FE.POPUP_DELAY);\r\n    //$(\"#idPopup\").empty();\r\n\r\n    ATON._bPauseQuery = false;\r\n\r\n    $(\"#idTopToolbar\").show();\r\n    $(\"#idBottomToolbar\").show();\r\n    $(\"#idBottomRToolbar\").show();\r\n    $(\"#idPoweredBy\").show();\r\n\r\n    ATON.focusOn3DView();\r\n};\r\n\r\nFE.subPopup = ( popupFunc )=>{\r\n    ATON.FE.popupClose();\r\n    setTimeout( popupFunc, ATON.FE.POPUP_DELAY);\r\n};\r\n\r\nFE.popupQR = ()=>{\r\n    let htmlcontent = \"<div class='atonPopupTitle'>Share</div>\";\r\n    htmlcontent += \"<div class='atonQRcontainer' id='idQRcode'></div><br><br>\";\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n    let url = window.location.href;\r\n    new QRCode(document.getElementById(\"idQRcode\"), url);\r\n};\r\n\r\nFE.popupScreenShot = ()=>{\r\n    let cover = ATON.Utils.takeScreenshot(200);\r\n\r\n    FE.checkAuth((r)=>{\r\n\r\n        let htmlcontent = \"<div class='atonPopupTitle'>Screenshot</div>\";\r\n        htmlcontent += \"This is a preview of what your screenshot will look like:<br><br>\";\r\n        htmlcontent += \"<img src='\"+cover.src+\"'><br>\";\r\n        htmlcontent += \"Resolution: <input id='isShotSize' type='number' min='100' max='4000' value='200'>px<br>\";\r\n\r\n        htmlcontent += \"<div class='atonBTN atonBTN-green' id='btnScreenShot' style='width:90%'><img src='\"+FE.PATH_RES_ICONS+\"sshot.png'>SHOT</div>\";\r\n\r\n        if (r.username !== undefined){\r\n            htmlcontent += \"<div class='atonBTN atonBTN-green' id='btnSetCover' style='width:90%'>Set as Cover</div>\";\r\n            /*\r\n            htmlcontent += \"<div class='atonBTN' id='btnSetCover' style='width:220px; height:220px; padding:5px'>\";\r\n            htmlcontent += \"<img src='\"+cover.src+\"'><br>\";\r\n            htmlcontent += \"Set as Cover</div>\";\r\n            */\r\n        }\r\n\r\n        if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n        $(\"#btnScreenShot\").click(()=>{\r\n            ATON.FE.popupClose();\r\n\r\n            let s = parseInt( $('#isShotSize').val() );\r\n            let img = ATON.Utils.takeScreenshot(s,\"shot.png\");\r\n        });\r\n\r\n        $(\"#btnSetCover\").click(()=>{\r\n            ATON.FE.popupClose();\r\n\r\n            ATON.Utils.postJSON(ATON.PATH_RESTAPI+\"cover/scene/\", {sid: ATON.SceneHub.currID, img: cover.src }, (r)=>{\r\n                console.log(r);\r\n            });\r\n\r\n        });\r\n    });\r\n};\r\n\r\nFE.popupVRC = ()=>{\r\n    let htmlcontent = \"\";\r\n    let numUsers = ATON.VRoadcast.getNumUsers();\r\n\r\n    if (numUsers>1) htmlcontent += \"<div class='atonPopupTitle'>Collaborative Session (\"+numUsers+\" users)</div>\";\r\n    else htmlcontent += \"<div class='atonPopupTitle'>Collaborative Session</div>\";\r\n\r\n    // Username\r\n    //htmlcontent += \"Your username in this collaborative session is:<br>\";\r\n    htmlcontent += \"<input id='idVRCusername' type='text' size='10' placeholder='username...' style='display:none'>\";\r\n    htmlcontent += \"<div id='idVRCusernameBTN' class='atonBTN' style='width:150px; display:none'>\"+ATON.VRoadcast._username+\"</div>\";\r\n\r\n    htmlcontent += \"<div id='idChatBox' style='width:100%; height:150px; text-align:left;' class='scrollableY'></div>\";\r\n\r\n    //htmlcontent += \"<div style='text-align:left'>\";\r\n    htmlcontent += \"<input id='idVRCmsg' style='width:90%' type='text' placeholder='message...'>\";\r\n    //htmlcontent += \"</div>\";\r\n\r\n    htmlcontent += \"<div class='atonBTN' id='idVRCdisconnect' style='width:90%'>LEAVE</div>\";\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent, \"atonPopupLarge\") ) return;\r\n\r\n    if (ATON.VRoadcast._username === undefined){\r\n        $('#idVRCusername').show();\r\n        $('#idVRCusernameBTN').hide();\r\n    }\r\n    else {\r\n        $('#idVRCusername').val(ATON.VRoadcast._username);\r\n        $('#idVRCusername').hide();\r\n        $('#idVRCusernameBTN').show();\r\n    }\r\n\r\n    if (ATON.VRoadcast.uid !== undefined) $('#idVRCusernameBTN').addClass(\"atonVRCu\"+(ATON.VRoadcast.uid % 6));\r\n\r\n    $(\"#idChatBox\").append(ATON.VRoadcast._elChat);\r\n\r\n    $(\"#idVRCmsg\").keypress((e)=>{\r\n        let keycode = (e.keyCode ? e.keyCode : e.which);\r\n        if (keycode == '13'){\r\n            let str = $(\"#idVRCmsg\").val();\r\n            ATON.VRoadcast.setMessage( str );\r\n            $(\"#idVRCmsg\").val(\"\");\r\n            //$(\"#idChatBox:first-child\").scrollTop( $(\"#idChatBox:first-child\").height() );\r\n        }\r\n    });\r\n\r\n    $(\"#idVRCusername\").keypress((e)=>{\r\n        let keycode = (e.keyCode ? e.keyCode : e.which);\r\n        if (keycode == '13'){\r\n            let str = $(\"#idVRCusername\").val();\r\n            ATON.VRoadcast.setUsername( str );\r\n            \r\n            $('#idVRCusername').hide();\r\n            $('#idVRCusernameBTN').html(ATON.VRoadcast._username);\r\n            $('#idVRCusernameBTN').show();\r\n        }\r\n    });\r\n\r\n    $(\"#idVRCusernameBTN\").click(()=>{\r\n        $('#idVRCusername').show();\r\n        $('#idVRCusernameBTN').hide();\r\n    });\r\n\r\n    $(\"#idVRCdisconnect\").click(()=>{\r\n        ATON.VRoadcast.disconnect();\r\n        ATON.FE.popupClose();\r\n    });\r\n\r\n};\r\n\r\n// User auth\r\nFE.checkAuth = (onReceive)=>{\r\n    ATON.Utils.checkAuth((data)=>{\r\n        FE._userAuth = data;\r\n        //console.log(FE._userAuth);\r\n\r\n        if (data.username !== undefined){\r\n            $(\"#btn-user\").addClass(\"switchedON\");\r\n            if (ATON.VRoadcast._username === undefined) ATON.VRoadcast.setUsername(data.username);\r\n        }\r\n        else {\r\n            $(\"#btn-user\").removeClass(\"switchedON\");\r\n        }\r\n\r\n        if (onReceive) onReceive(data);\r\n    });\r\n};\r\n\r\n/*\r\nFE.checkAuth = (onReceive)=>{\r\n    $.ajax({\r\n        type: 'GET',\r\n        url: ATON.PATH_RESTAPI+\"user\",\r\n        xhrFields: { withCredentials: true },            \r\n        dataType: 'json',\r\n\r\n        success: (data)=>{\r\n            FE._userAuth = data;\r\n            //console.log(FE._userAuth);\r\n\r\n            if (data.username !== undefined){\r\n                $(\"#btn-user\").addClass(\"switchedON\");\r\n                if (ATON.VRoadcast._username === undefined) ATON.VRoadcast.setUsername(data.username);\r\n            }\r\n            else {\r\n                $(\"#btn-user\").removeClass(\"switchedON\");\r\n            }\r\n\r\n            onReceive(data);\r\n        }\r\n    });\r\n};\r\n*/\r\n\r\nFE.popupUser = ()=>{\r\n\r\n    FE.checkAuth((r)=>{\r\n        \r\n        // We are already logged\r\n        if (r.username !== undefined){\r\n            let htmlcontent = \"<img src='\"+FE.PATH_RES_ICONS+\"user.png'><br>\";\r\n            htmlcontent += \"<b>'\"+r.username+\"'</b><br><br>\";\r\n\r\n            if (Object.keys(FE._uiProfiles)){\r\n                htmlcontent += \"UI Profile:<br><div class='select' style='width:150px;'><select id='idUIProfiles'>\";\r\n\r\n                for (let uip in FE._uiProfiles){\r\n                    htmlcontent += \"<option value='\"+uip+\"'>\"+uip+\"</option>\";\r\n                }\r\n                htmlcontent += \"</select><div class='selectArrow'></div></div><br><br>\";\r\n            }\r\n\r\n            htmlcontent += \"<div class='atonBTN atonBTN-red' id='idLogoutBTN' style='width:90%'>LOGOUT</div>\";\r\n\r\n            if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n            if (FE._uiCurrProfile){\r\n                console.log(FE._uiCurrProfile);\r\n                $(\"#idUIProfiles\").val(FE._uiCurrProfile);\r\n            }\r\n\r\n            $(\"#idLogoutBTN\").click(()=>{\r\n                $.get(ATON.PATH_RESTAPI+\"logout\", (r)=>{\r\n                    console.log(r);\r\n                    ATON.SceneHub.setEditMode(false);\r\n                    ATON.fireEvent(\"Logout\");\r\n                    $(\"#btn-user\").removeClass(\"switchedON\");\r\n                });\r\n\r\n                ATON.FE.popupClose();\r\n            });\r\n\r\n            $(\"#idSHUscenes\").click(()=>{\r\n                ATON.Utils.goToURL(\"/shu/scenes/\");\r\n            });\r\n            $(\"#idSHUuser\").click(()=>{\r\n                ATON.Utils.goToURL(\"/shu/auth/\");\r\n            });\r\n\r\n            $(\"#idUIProfiles\").on(\"change\", ()=>{\r\n                let uip = $(\"#idUIProfiles\").val();\r\n                FE.uiLoadProfile(uip);\r\n                ATON.FE.popupClose();\r\n            });\r\n\r\n        }\r\n\r\n        // Not logged in\r\n        else {\r\n            let htmlcontent = \"<img src='\"+FE.PATH_RES_ICONS+\"user.png'><br>\";\r\n            htmlcontent += \"username:<input id='idUsername' type='text' maxlength='15' size='15' ><br>\";\r\n            htmlcontent += \"password:<input id='idPassword' type='password' maxlength='15' size='15' ><br>\";\r\n\r\n            htmlcontent += \"<div class='atonBTN atonBTN-green' id='idLoginBTN' style='width:90%'>LOGIN</div>\";\r\n\r\n            if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n            $(\"#idLoginBTN\").click(()=>{\r\n                let jstr = JSON.stringify({\r\n                    username: $(\"#idUsername\").val(),\r\n                    password: $(\"#idPassword\").val()\r\n                });\r\n\r\n                $.ajax({\r\n                    url: ATON.PATH_RESTAPI+\"login\",\r\n                    type:\"POST\",\r\n                    data: jstr,\r\n                    contentType:\"application/json; charset=utf-8\",\r\n                    dataType:\"json\",\r\n\r\n                    success: (r)=>{\r\n                        console.log(r);\r\n                        if (r){\r\n                            ATON.fireEvent(\"Login\", r);\r\n                            $(\"#btn-user\").addClass(\"switchedON\");\r\n                            ATON.FE.popupClose();\r\n                        }\r\n                    }\r\n\r\n                }).fail((err)=>{\r\n                    //console.log(err);\r\n                    $(\"#idLoginBTN\").html(\"LOGIN FAILED\");\r\n                    $(\"#idLoginBTN\").attr(\"class\",\"atonBTN atonBTN-red\");\r\n                });\r\n            });\r\n        }\r\n    });\r\n};\r\n\r\n/*\r\nFE.popupPOV = ()=>{\r\n    let htmlcontent = \"<h1>Viewpoint</h1>\";\r\n\r\n    htmlcontent += \"<div class='select' style='width:200px;'><select id='idPOVmode'>\";\r\n    htmlcontent += \"<option value='0'>Set as Home viewpoint</option>\";\r\n    htmlcontent += \"<option value='1'>Add viewpoint</option>\";\r\n    htmlcontent += \"</select><div class='selectArrow'></div></div>\";\r\n\r\n    htmlcontent += \"<div class='atonBTN atonBTN-green' id='btnPOV' style='width:90%'>OK</div>\"; // <img src='\"+FE.PATH_RES_ICONS+\"pov.png'>\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n    let mode = $(\"#idPOVmode\").val();\r\n};\r\n*/\r\n\r\nFE.popupSceneInfo = ()=>{\r\n    let head = ATON.SceneHub.getTitle();\r\n    if (head === undefined) head = ATON.SceneHub.currID;\r\n\r\n    let descr = ATON.SceneHub.getDescription();\r\n\r\n    let htmlcontent = \"<div class='atonPopupTitle'>\"+head+\"</div>\";\r\n    if (descr) htmlcontent += \"<div class='atonPopupDescriptionContainer'>\" + JSON.parse(descr) + \"</div>\";\r\n\r\n    htmlcontent += \"<div class='atonBTN atonBTN-green' id='btnOK' style='width:90%'>OK</div>\";\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent) ) return;\r\n\r\n    $(\"#btnOK\").click(()=>{\r\n        ATON.FE.popupClose();\r\n    });\r\n};\r\n\r\nFE.computeSelectorRanges = ()=>{\r\n    let sceneBS = ATON.getRootScene().getBound();\r\n    let r = sceneBS.radius;\r\n\r\n    if (r <= 0.0) return;\r\n\r\n    FE._selRanges[0] = r * 0.001;\r\n    FE._selRefRadius = r * 0.02;\r\n    FE._selRanges[1] = r * 0.5;\r\n\r\n    //console.log(\"3D Selector ranges: \"+FE._selRanges[0]+\", \"+FE._selRanges[1]);\r\n};\r\n\r\nFE.popupSelector = ()=>{\r\n    let htmlcontent = \"<div class='atonPopupTitle'>3D Selector</div>\";\r\n\r\n    let rad = ATON.SUI.getSelectorRadius();\r\n    let hr = ATON.Utils.getHumanReadableDistance( rad );\r\n\r\n    FE.computeSelectorRanges();\r\n\r\n    htmlcontent += \"Radius (<span id='idSelRadTxt'>\"+hr+\"</span>):<br>\";\r\n    htmlcontent += \"<input id='idSelRad' type='range' min='\"+FE._selRanges[0]+\"' max='\"+FE._selRanges[1]+\"' step='\"+FE._selRanges[0]+\"' style='width:90%'>\";\r\n\r\n    if ( !ATON.FE.popupShow(htmlcontent, \"atonPopupLarge\") ) return;\r\n\r\n    $(\"#idSelRad\").val(rad);\r\n\r\n    $(\"#idSelRad\").on(\"input change\",()=>{\r\n        let r = parseFloat( $(\"#idSelRad\").val() );\r\n\r\n        ATON.SUI.setSelectorRadius(r);\r\n        $(\"#idSelRadTxt\").html( ATON.Utils.getHumanReadableDistance(r) );\r\n    });\r\n};\r\n\r\nFE.popupNav = ()=>{\r\n    let htmlcontent = \"<div class='atonPopupTitle'>Navigation</div>\";\r\n\r\n    //htmlcontent += \"<div id='idNavModes'></div>\";\r\n\r\n    htmlcontent += \"<div style='display:block; width:90%; min-height:50px; vertical-align:top'>\";\r\n    htmlcontent +=\"<div style='display:inline-block; width:60px; float:left' id='idNMfp'></div>\";\r\n    htmlcontent +=\"<div style='text-align:left'>Switch between first-person and orbit navigation mode</div>\";\r\n    htmlcontent += \"</div>\";\r\n\r\n    if (ATON.Utils.isConnectionSecure()){\r\n        htmlcontent += \"<div style='display:block; width:90%; min-height:50px; vertical-align:top'>\";\r\n        htmlcontent +=\"<div style='display:inline-block; width:60px; float:left' id='idNMvr'></div>\";\r\n        htmlcontent +=\"<div style='text-align:left'>Immersive VR mode</div>\";\r\n        htmlcontent += \"</div>\";\r\n\r\n        if (ATON.Utils.isMobile()){\r\n            htmlcontent += \"<div style='display:block; width:90%; min-height:50px; vertical-align:top'>\";\r\n            htmlcontent +=\"<div style='display:inline-block; width:60px; float:left' id='idNMdevori'></div>\";\r\n            htmlcontent +=\"<div style='text-align:left'>Enable or disable device-orientation mode</div>\";\r\n            htmlcontent += \"</div>\";\r\n        }\r\n    }\r\n\r\n    if ( !FE.popupShow(htmlcontent) ) return;\r\n\r\n    FE.uiAddButtonFirstPerson(\"idNMfp\");\r\n    FE.uiAddButtonDeviceOrientation(\"idNMdevori\");\r\n    FE.uiAddButtonVR(\"idNMvr\");\r\n\r\n};\r\n\r\nexport default FE;","/*\r\n    ATON Media Recorder\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nATON Media Recorder\r\n@namespace MediaRec\r\n*/\r\nlet MediaRec = {};\r\nMediaRec.auType = \"audio/wav\";\r\nMediaRec.auExt  = \".wav\";\r\n//MediaRec.auType = \"audio/webm\";\r\n//MediaRec.auExt  = \".webm\";\r\n\r\nMediaRec.auBitsPerSecond  = 9000; //9000;\r\nMediaRec.auStreamInterval = 1000;\r\nMediaRec.auMinVol = 1;\r\n\r\n\r\nMediaRec.init = ()=>{\r\n    MediaRec._bAudioRecording = false;\r\n    MediaRec._bStreaming = false;\r\n\r\n    MediaRec.recorder = undefined;\r\n};\r\n\r\nMediaRec.realizeAudioRecorder = ( onComplete )=>{\r\n    if (MediaRec.recorder !== undefined){\r\n        MediaRec.recorder.reset();\r\n        if (onComplete) onComplete();\r\n    }\r\n\r\n    // First time\r\n    else {\r\n        if (!ATON.Utils.isConnectionSecure()) return;\r\n        if (!navigator.mediaDevices) return;\r\n\r\n        if (MediaRec._ds === undefined) MediaRec._ds = setInterval( MediaRec._streamChunk, MediaRec.auStreamInterval);\r\n\r\n        let UM = navigator.mediaDevices.getUserMedia({ \r\n            video: false, \r\n            audio: true, \r\n            channelCount: 1,\r\n            echoCancellation: true,\r\n        });\r\n\r\n        UM.then(async function(stream){\r\n            MediaRec.recorder = RecordRTC(stream, { \r\n                type: 'audio',\r\n                mimeType: MediaRec.auType,\r\n                \r\n                bitsPerSecond: MediaRec.auBitsPerSecond,\r\n                audioBitsPerSecond: MediaRec.auBitsPerSecond,\r\n\r\n                sampleRate: 22050,\r\n                desiredSampRate: 22050,\r\n                \r\n                disableLogs: true,\r\n                \r\n                //recorderType: MediaStreamRecorder,\r\n                numberOfAudioChannels: 1,\r\n                //bufferSize: 16384,\r\n\r\n                //timeSlice: MediaRec.auStreamInterval,\r\n                //ondataavailable: MediaRec._onAuBlob,\r\n            });\r\n\r\n            // Audio analyser\r\n    /*\r\n            MediaRec._auAVGvolume = 0;\r\n\r\n            MediaRec._auCTX = new AudioContext();\r\n            const input = MediaRec._auCTX.createMediaStreamSource(stream);\r\n            const analyser = MediaRec._auCTX.createAnalyser();\r\n            const scriptProcessor = MediaRec._auCTX.createScriptProcessor();\r\n\r\n            // Some analyser setup\r\n            analyser.smoothingTimeConstant = 0.3;\r\n            analyser.fftSize = 1024;\r\n            \r\n            input.connect(analyser);\r\n            analyser.connect(scriptProcessor);\r\n            scriptProcessor.connect(MediaRec._auCTX.destination);\r\n\r\n            const getAverageVolume = array => {\r\n                const L = array.length;\r\n                if (L <= 0) return 0; \r\n                \r\n                let values = 0;\r\n                for (let i=0; i<L; i++) values += array[i];\r\n\r\n                return values / L;\r\n            };\r\n\r\n            scriptProcessor.onaudioprocess = audioProcessingEvent => {\r\n                if (!MediaRec._bAudioRecording) return;\r\n\r\n                const tempArray = new Uint8Array(analyser.frequencyBinCount);\r\n\r\n                analyser.getByteFrequencyData(tempArray);\r\n                MediaRec._auAVGvolume = parseInt(getAverageVolume(tempArray));\r\n                \r\n                //console.log(MediaRec._auAVGvolume);\r\n            };\r\n    */\r\n            if (onComplete) onComplete();\r\n        });\r\n    }\r\n};\r\n\r\nMediaRec.isAudioRecording = ()=>{\r\n    return MediaRec._bAudioRecording;\r\n};\r\n\r\n// helper routines\r\nMediaRec._stopRecAndSend = ( onFinish )=>{\r\n    if (MediaRec.recorder === undefined){\r\n        if (onFinish) onFinish();\r\n        return;\r\n    }\r\n\r\n    MediaRec.recorder.stopRecording(()=>{\r\n/*\r\n        let rblob = MediaRec.recorder.getBlob();\r\n\r\n        if (!rblob || rblob.size < 5 || !ATON.VRoadcast.socket || ATON.VRoadcast.uid === undefined){ // || MediaRec._auAVGvolume <= MediaRec.auMinVol\r\n            if (onFinish) onFinish();\r\n            return;\r\n        }\r\n\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(rblob); \r\n        reader.onloadend = ()=>{\r\n            let b64 = reader.result;\r\n            //let b64 = reader.result.split(',')[1];\r\n            //b64 = \"data:audio/wav;base64,\" + b64;\r\n*/\r\n        MediaRec.recorder.getDataURL((b64)=>{\r\n\r\n            if (!ATON.VRoadcast.socket || ATON.VRoadcast.uid === undefined){ // || MediaRec._auAVGvolume <= MediaRec.auMinVol\r\n                if (onFinish) onFinish();\r\n                return;\r\n            }\r\n\r\n            ATON.VRoadcast.socket.compress(false).emit(\"UTALK\", {\r\n                audio: b64,\r\n                uid: ATON.VRoadcast.uid,\r\n                //vol: MediaRec._auAVGvolume\r\n            });              \r\n            \r\n            if (onFinish) onFinish();\r\n            return;\r\n        });\r\n/*\r\n        console.log(\"sending blob...\"+rblob.size);\r\n\r\n        ATON.VRoadcast.socket.compress(false).emit(\"UTALK\", {\r\n            blob: rblob,\r\n            uid: ATON.VRoadcast.uid,\r\n            vol: MediaRec._auAVGvolume\r\n        });\r\n\r\n        if (onFinish) onFinish();\r\n*/\r\n        //if (onFinish) onFinish();\r\n    });\r\n};\r\n\r\nMediaRec._onAuBlob = (rblob)=>{\r\n    if (!rblob) return;\r\n    if (!ATON.VRoadcast.socket) return;\r\n    //if (ATON.vroadcast._auAVGvolume <= ATON.vroadcast.minAuVol) return;\r\n\r\n    //console.log(\"sending blob...\"+rblob.size);\r\n\r\n    ATON.VRoadcast.socket.emit(\"UTALK\", {\r\n        blob: rblob,\r\n        uid: ATON.VRoadcast.uid,\r\n        vol: MediaRec._auAVGvolume\r\n    });\r\n};\r\n\r\n// Audio Recording\r\nMediaRec.startRecording = ()=>{\r\n    MediaRec.realizeAudioRecorder(()=>{\r\n\r\n        if (!MediaRec.recorder) return;\r\n        if (MediaRec._bAudioRecording) return;\r\n\r\n        console.log(\"Recording...\");\r\n\r\n        MediaRec.recorder.startRecording();\r\n        MediaRec._bAudioRecording = true;\r\n    });\r\n};\r\n\r\nMediaRec.stopRecording = ()=>{\r\n    if (!MediaRec.recorder) return;\r\n\r\n    MediaRec.recorder.stopRecording(()=>{\r\n        let rblob = MediaRec.recorder.getBlob();\r\n        //let du = MediaRec.recorder.toURL();\r\n        //console.log(du);\r\n\r\n        console.log(\"Stop recording.\");\r\n\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(rblob); \r\n        reader.onloadend = ()=>{\r\n            let base64data = reader.result;                \r\n            //console.log(base64data);\r\n            ATON.fireEvent(\"AudioRecordCompleted\", base64data);\r\n        }\r\n\r\n        MediaRec._bAudioRecording = false;\r\n    });\r\n};\r\n\r\nMediaRec.startOrStopRecording = ()=>{\r\n    if (MediaRec._bAudioRecording) MediaRec.stopRecording();\r\n    else MediaRec.startRecording();\r\n};\r\n\r\nMediaRec._streamChunk = ()=>{\r\n    if (!MediaRec.recorder) return;\r\n    if (!MediaRec._bStreaming) return;\r\n\r\n    MediaRec._stopRecAndSend(()=>{ \r\n        MediaRec.recorder.startRecording();\r\n    });\r\n};\r\n\r\n// Audio Streaming\r\nMediaRec.startMediaStreaming = ()=>{\r\n    MediaRec.realizeAudioRecorder(()=>{\r\n        if (!MediaRec.recorder) return;\r\n        if (MediaRec._bAudioRecording) return;\r\n\r\n        //MediaRec.recorder.stopRecording(()=>{\r\n        console.log(\"Start MediaStreaming\");\r\n\r\n        MediaRec.recorder.startRecording();\r\n        MediaRec._bAudioRecording = true;\r\n        MediaRec._bStreaming = true;\r\n        //});\r\n    });\r\n};\r\n\r\nMediaRec.stopMediaStreaming = ()=>{\r\n    if (!MediaRec.recorder) return;\r\n    if (!MediaRec._bAudioRecording) return;\r\n\r\n    console.log(\"Stop MediaStreaming\");\r\n\r\n    MediaRec._stopRecAndSend(()=>{\r\n        //MediaRec._bStreaming = false;\r\n        //MediaRec._bAudioRecording = false;\r\n    });\r\n\r\n    MediaRec._bStreaming = false;\r\n    MediaRec._bAudioRecording = false;\r\n\r\n/*\r\n    MediaRec._stopRecAndSend(()=>{\r\n        clearInterval(MediaRec._dMediaRecorder);\r\n        MediaRec._bAudioRecording = false;\r\n    });\r\n*/\r\n};\r\n\r\nMediaRec.startOrStopMediaStreaming = ()=>{\r\n    if (MediaRec._bAudioRecording) MediaRec.stopMediaStreaming();\r\n    else MediaRec.startMediaStreaming();\r\n};\r\n\r\nexport default MediaRec;","/*\r\n    ATON GeoLoc\r\n    Outdoor geolocation tracking and Geo-POI handling\r\n    TODO: rename\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n/**\r\nOutdoor geolocation tracking and Geo-POI handling\r\n@namespace GeoLoc\r\n*/\r\nlet GeoLoc = {};\r\n\r\n//GeoLoc.INTERVAL  = 1000;\r\nGeoLoc.EARTH_R_KM = 6371.0;\r\nGeoLoc.EARTH_D_KM = GeoLoc.EARTH_R_KM * 2.0;\r\n\r\n\r\nGeoLoc.init = ()=>{\r\n    GeoLoc._bActive = false;\r\n\r\n    GeoLoc._wpid = undefined;\r\n    GeoLoc._currPos = new THREE.Vector2();\r\n\r\n    // POIs\r\n    GeoLoc._POIs = [];\r\n    GeoLoc._currPOI = undefined;    // POI we are inside if any\r\n    GeoLoc._closestPOI = undefined; // closest POI\r\n\r\n    GeoLoc._maxError = 40.0; // max accuracy error allowed\r\n};\r\n\r\n/**\r\nEnable geolocation tracking\r\n*/\r\nGeoLoc.enableTracking = ()=>{\r\n    if (GeoLoc._bActive) return;\r\n    if (!ATON.Utils.isConnectionSecure()) return;\r\n    if (!navigator.geolocation) return;\r\n\r\n    GeoLoc._wpid = navigator.geolocation.watchPosition(\r\n        GeoLoc._onPosition,\r\n        GeoLoc._onError,\r\n        {\r\n            enableHighAccuracy: true,\r\n            //maximumAge        : 30000,\r\n            //timeout           : 27000\r\n        }    \r\n    );\r\n\r\n    //window.setInterval( GeoLoc.update, GeoLoc.INTERVAL);\r\n    \r\n    GeoLoc._bActive = true;\r\n};\r\n\r\n/**\r\nDisable geolocation tracking\r\n*/\r\nGeoLoc.disableTracking = ()=>{\r\n    if (!GeoLoc._bActive) return;\r\n    \r\n    navigator.geolocation.clearWatch(GeoLoc._wpid);\r\n    GeoLoc._bActive = false;\r\n};\r\n\r\n/**\r\nSet max error allowed for location tracking\r\n@param {number} - the error (meters)\r\n*/\r\nGeoLoc.setMaxError = (r)=>{\r\n    if (r > 0.0) GeoLoc._maxError = r;\r\n};\r\n\r\nGeoLoc._onError = ()=>{\r\n    console.log(\"Geolocation error\");\r\n};\r\n\r\nGeoLoc._onPosition = (pos)=>{\r\n    if (!GeoLoc._bActive) return;\r\n    if (!pos.coords) return;\r\n\r\n    // filter locations\r\n    let acc = pos.coords.accuracy;\r\n    if (acc && acc > GeoLoc._maxError) return;\r\n\r\n    // update current location\r\n    GeoLoc._currPos.x = pos.coords.latitude;\r\n    GeoLoc._currPos.y = pos.coords.longitude;\r\n\r\n    //console.log(pos.coords.latitude+\",\"+pos.coords.longitude);\r\n    //console.log(pos);\r\n\r\n    ATON.fireEvent(\"GeoLocation\", pos);\r\n\r\n    GeoLoc._handlePOIs();\r\n};\r\n\r\nGeoLoc._handlePOIs = ()=>{\r\n    let numPOIs = GeoLoc._POIs.length;\r\n    if (numPOIs <= 0) return;\r\n\r\n    GeoLoc._closestPOIdist = undefined;\r\n    GeoLoc._closestPOI = undefined;\r\n\r\n    for (let i=0; i<numPOIs; i++){\r\n        let POI = GeoLoc._POIs[i];\r\n\r\n        let d = GeoLoc.distance(GeoLoc._currPos, POI.pos);\r\n\r\n        if (GeoLoc._closestPOIdist === undefined || d < GeoLoc._closestPOIdist){\r\n            GeoLoc._closestPOIdist = d;\r\n            GeoLoc._closestPOI     = i;\r\n        }\r\n\r\n        //console.log(\"Distance: \"+d);\r\n\r\n        // Inside this POI radius\r\n        if (d <= POI.radius){\r\n            if (GeoLoc._currPOI !== i){\r\n                ATON.fireEvent(\"EnterPOI\", { id: i, distance: d });\r\n                //console.log(\"Entered POI \"+i);\r\n            }\r\n            GeoLoc._currPOI = i;\r\n        }\r\n        // Ouside\r\n        else {\r\n            if (GeoLoc._currPOI !== undefined) ATON.fireEvent(\"LeavePOI\", { id: GeoLoc._currPOI, distance: d });\r\n            GeoLoc._currPOI = undefined;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\nGet current location\r\n@returns {THREE.Vector2} - latitude and longitude\r\n*/\r\nGeoLoc.getCurrentLocation = ()=>{\r\n    if (!GeoLoc._bActive) return undefined;\r\n\r\n    return GeoLoc._currPos;\r\n};\r\n\r\nGeoLoc.locationFromLatLon = (lat, lon)=>{\r\n    return new THREE.Vector2( lat, lon );\r\n};\r\n\r\n// Distance between two locations (in meters)\r\nGeoLoc.distance_orig = (latlonA, latlonB)=>{\r\n    let dLat = ATON.DEG2RAD * (latlonB.x - latlonA.x);  // deg2rad\r\n    let dLon = ATON.DEG2RAD * (latlonB.y - latlonA.y); \r\n    let a = \r\n        Math.sin(dLat/2) * Math.sin(dLat/2) +\r\n        Math.cos(ATON.DEG2RAD * latlonA.x) * Math.cos(ATON.DEG2RAD * latlonB.x) * \r\n        Math.sin(dLon/2) * Math.sin(dLon/2);\r\n\r\n    let c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \r\n    let d = GeoLoc.EARTH_R_KM * c; // Distance in km\r\n    \r\n    return d * 1000.0;\r\n};\r\n\r\n/**\r\nGet distance (meters) between two geo-locations\r\nre-adapted from https://stackoverflow.com/questions/27928/calculate-distance-between-two-latitude-longitude-points-haversine-formula\r\n@param {THREE.Vector2} latlonA - location A (lat,lon)\r\n@param {THREE.Vector2} latlonB - location B (lat,lon)\r\n@returns {number} - distance (meters)\r\n*/\r\nGeoLoc.distance = (latlonA, latlonB)=>{\r\n    let a = 0.5 - Math.cos((latlonB.x - latlonA.x) * ATON.DEG2RAD)/2.0 + \r\n        Math.cos(latlonA.x * ATON.DEG2RAD) * Math.cos(latlonB.x * ATON.DEG2RAD) * \r\n        (1.0 - Math.cos((latlonB.y - latlonA.y) * ATON.DEG2RAD))/2.0;\r\n\r\n    let d = GeoLoc.EARTH_D_KM * Math.asin(Math.sqrt(a));\r\n\r\n    return d * 1000.0;\r\n};\r\n\r\n/**\r\nAdd a Geo-POI (point-of-interest) in given location (lat,lon) and radius.\r\nYou can handle enter/leave POI events using ATON.on(\"EnterPOI\") and ATON.on(\"LeavePOI\")\r\n@param {THREE.Vector2} P - the (lat,lon) pair\r\n@param {number} r - the radius (meters)\r\n*/\r\nGeoLoc.addPOI = (P, r)=>{\r\n    let POI = {};\r\n    POI.pos = new THREE.Vector2(P.x,P.y);\r\n    POI.radius = r;\r\n\r\n    GeoLoc._POIs.push(POI);\r\n\r\n    if (!GeoLoc._bActive) GeoLoc.enableTracking();\r\n\r\n    //console.log(\"Added POI:\");\r\n    //console.log(POI);\r\n\r\n    GeoLoc._handlePOIs();\r\n\r\n    return (GeoLoc._POIs.length - 1);\r\n};\r\n\r\nGeoLoc.getPOIbyIndex = (i)=>{\r\n    return GeoLoc._POIs[i];\r\n};\r\n\r\n/**\r\nGet index of closest Geo-POI\r\n@returns {number} - index\r\n*/\r\nGeoLoc.getClosestPOI = ()=>{\r\n    return GeoLoc._closestPOI;\r\n};\r\n\r\n/**\r\nGet distance (meters) to the closest Geo-POI\r\n@returns {number} - distance (meters)\r\n*/\r\nGeoLoc.getClosestPOIdistance = ()=>{\r\n    return GeoLoc._closestPOIdist;\r\n};\r\n\r\n\r\n// Main update routine\r\n/*\r\nGeoLoc.update = ()=>{\r\n    if (!GeoLoc._bActive) return;\r\n\r\n    //navigator.geolocation.watchPosition(GeoLoc._onPosition);\r\n\r\n    //let P = GeoLoc.locationFromLatLon(42.06047573760282, 12.588698649224982);\r\n    //console.log( GeoLoc.distance(GeoLoc._currPos, P) );\r\n};\r\n*/\r\n\r\nexport default GeoLoc;","/*\r\n    ATON App Hub\r\n    Web-Apps\r\n\r\n    author: bruno.fanini_AT_gmail.com\r\n\r\n===========================================================*/\r\n\r\n//import AppData from \"./ATON.appdata.js\";\r\n\r\n/**\r\nATON App Hub\r\n@namespace AppHub\r\n*/\r\nlet AppHub = {};\r\n\r\n// Realize the hub\r\nAppHub.init = ()=>{\r\n    AppHub._appid   = $(\"meta[name='aton\\\\:appid']\").attr(\"content\");\r\n    AppHub._appdata = {};\r\n};\r\n\r\n// Send JSON patch\r\n// TODO: https://tools.ietf.org/html/rfc6902\r\nAppHub._sendDataPatch = (id, patch, mode)=>{\r\n    return new Promise((resolve, reject)=>{\r\n        if (id === undefined){\r\n            reject(\"No storage ID specified\");\r\n            return;\r\n        }\r\n        if (id.length < 3){\r\n            reject(\"Storage ID too short\");\r\n            return;\r\n        }\r\n        if (patch === undefined){\r\n            reject(\"No storage patch\");\r\n            return;\r\n        }\r\n        if (AppHub._appid === undefined){\r\n            reject(\"No app-ID\");\r\n            return;\r\n        }\r\n\r\n        if (mode === undefined) mode = ATON.PATCH_ADD;\r\n\r\n        let O = {};\r\n        O.wappid = AppHub._appid;\r\n        O.fid    = id;\r\n        O.data   = patch;\r\n        O.mode   = (mode === ATON.PATCH_DEL)? \"DEL\" : \"ADD\";\r\n\r\n        let jstr = JSON.stringify(O);\r\n        //console.log(jstr);\r\n\r\n        $.ajax({\r\n            url: ATON.PATH_RESTAPI+\"patch/wapp\",\r\n            type:\"POST\",\r\n            data: jstr,\r\n            contentType:\"application/json; charset=utf-8\",\r\n            dataType:\"json\",\r\n\r\n            success: (r)=>{\r\n                if (r === undefined){\r\n                    reject(\"Error writing on server\");\r\n                    return;\r\n                }\r\n\r\n                AppHub._appdata[id] = r;\r\n                resolve(r);\r\n            }\r\n        });\r\n    });\r\n};\r\n\r\n/**\r\nGet current web-app ID\r\n@returns {string} - web-app ID\r\n*/\r\nAppHub.getAppID = ()=>{\r\n    return AppHub._appid;\r\n};\r\n\r\n/**\r\nAdd data to persistent, server-side storage of current web-app\r\n@param {object} id - server-side storage ID\r\n@param {object} patch - a javascript object patch\r\n@example\r\nATON.AppHub.addToStorage(\"myStorage\", {score: 20}).then(...)\r\n*/\r\nAppHub.addToStorage = (id, patch)=>{\r\n    //AppHub._sendDataPatch(id, patch, ATON.PATCH_ADD, onComplete);\r\n    return AppHub._sendDataPatch(id, patch, ATON.PATCH_ADD);\r\n};\r\n\r\n/**\r\nDelete data from server-side storage of current web-app\r\n@param {object} id - server-side storage ID\r\n@param {object} patch - a javascript object patch\r\n@example\r\nATON.AppHub.deleteFromStorage(\"myStorage\", {score: {}}).then(...)\r\n*/\r\nAppHub.deleteFromStorage = (id, patch)=>{\r\n    //AppHub._sendDataPatch(id, patch, ATON.PATCH_DEL, onComplete);\r\n    return AppHub._sendDataPatch(id, patch, ATON.PATCH_DEL);\r\n};\r\n\r\n/**\r\nGet content of server-side storage for current web-app\r\n@param {object} id - server-side storage ID\r\n@example\r\nATON.AppHub.getStorage(\"myStorage\").then((s)=>{ console.log(s); })\r\n*/\r\nAppHub.getStorage = (id)=>{\r\n    return new Promise((resolve, reject)=>{\r\n        if (AppHub._appid === undefined){\r\n            reject();\r\n            return;\r\n        }\r\n        if (id === undefined){\r\n            reject(\"No storage ID specified\");\r\n            return;\r\n        }\r\n\r\n        $.getJSON( ATON.PATH_WAPPS+AppHub._appid+\"/data/\"+id+\".json\", (data)=>{\r\n            console.log(data);\r\n            AppHub._appdata[id] = data;\r\n            resolve(data);\r\n        });\r\n    });\r\n\r\n};\r\n\r\n\r\nexport default AppHub;","/*!\r\n    @preserve\r\n\r\n \tATON\r\n\r\n \t@author Bruno Fanini\r\n\tVHLab, CNR ISPC\r\n\r\n==================================================================================*/\r\n\r\n'use strict';\r\n\r\n/**\r\n@namespace ATON\r\n*/\r\nlet ATON = {};\r\nwindow.ATON = ATON;\r\n\r\n// Import\r\nimport Node from \"./ATON.node.js\";\r\nimport POV from \"./ATON.pov.js\";\r\n//import Period from \"./ATON.period.js\";\r\nimport LightProbe from \"./ATON.lightprobe.js\";\r\n\r\nimport EventHub from \"./ATON.eventhub.js\";\r\nimport MatHub from \"./ATON.mathub.js\";\r\nimport Utils from \"./ATON.utils.js\";\r\nimport SceneHub from \"./ATON.scenehub.js\";\r\nimport AudioHub from \"./ATON.audiohub.js\";\r\nimport Nav from \"./ATON.nav.js\";\r\nimport XR from \"./ATON.xr.js\";\r\nimport SUI from \"./ATON.sui.js\";\r\nimport VRoadcast from \"./ATON.vroadcast.js\";\r\nimport SemFactory from \"./ATON.semfactory.js\";\r\nimport FE from \"./ATON.fe.js\";\r\nimport MediaRec from \"./ATON.mediarec.js\";\r\nimport GeoLoc from \"./ATON.geoloc.js\";\r\nimport AppHub from \"./ATON.apphub.js\";\r\n\r\n// Classes\r\nATON.Node       = Node;\r\nATON.POV        = POV;\r\nATON.LightProbe = LightProbe;\r\n//ATON.Period = Period;\r\n\r\n// NS\r\nATON.EventHub   = EventHub;\r\nATON.Utils      = Utils;\r\nATON.SceneHub   = SceneHub;\r\nATON.MatHub     = MatHub;\r\nATON.Nav        = Nav;\r\nATON.AudioHub   = AudioHub;\r\nATON.XR         = XR;\r\nATON.SUI        = SUI;\r\nATON.VRoadcast  = VRoadcast;\r\nATON.SemFactory = SemFactory;\r\nATON.FE         = FE;\r\nATON.MediaRec   = MediaRec;\r\nATON.GeoLoc     = GeoLoc;\r\nATON.AppHub     = AppHub;\r\n\r\n//==============================================================\r\n// Consts\r\n//==============================================================\r\nATON.STD_UPVECTOR = new THREE.Vector3(0,1,0);\r\nATON.ROOT_NID = \".\"; // reserved node ID for graph-roots\r\n\r\nATON.RAD2DEG = (180.0 / Math.PI);\r\nATON.DEG2RAD = (Math.PI / 180.0);\r\n\r\nATON.PATCH_ADD = 0;\r\nATON.PATCH_DEL = 1;\r\n\r\n// Node types\r\nATON.NTYPES = {};\r\n// 1 and 2 are reserved\r\nATON.NTYPES.SCENE  = 3;\r\nATON.NTYPES.SEM    = 4;\r\nATON.NTYPES.UI     = 5;\r\n\r\n// Folders\r\nATON.PATH_RESTAPI       = window.location.origin + \"/api/\"; // \"../api/\";\r\nATON.PATH_RESTAPI_SCENE = ATON.PATH_RESTAPI + \"scene/\";\r\nATON.PATH_WAPPS         = window.location.origin + \"/a/\";\r\nATON.PATH_MODS          = window.location.origin + \"/mods/\"; // \"../mods/\";\r\n//ATON.PATH_THREE         = ATON.PATH_MODS + \"three/\";\r\nATON.PATH_DRACO_LIB     = window.location.origin + \"/dist/draco/\"; //ATON.PATH_THREE+\"examples/js/libs/draco/\";\r\nATON.PATH_BASIS_LIB     = window.location.origin + \"/dist/basis/\"; //ATON.PATH_THREE+\"examples/js/libs/basis/\";\r\nATON.PATH_IFC_LIB       = window.location.origin + \"/dist/ifc/\";\r\n\r\nATON.PATH_COLLECTION = window.location.origin + \"/collections/\"; // \"../collection/\";\r\nATON.PATH_SCENES     = window.location.origin + \"/scenes/\"; // \"../scenes/\";\r\nATON.PATH_RES        = window.location.origin + \"/res/\"; // \"../res/\";\r\nATON.PATH_FE         = window.location.origin + \"/fe/\"; // \"../res/\";\r\n\r\nATON.SHADOWS_NEAR = 0.1;\r\nATON.SHADOWS_FAR  = 50.0; //50.0;\r\nATON.SHADOWS_SIZE = 15.0;\r\nATON.SHADOWS_RES  = 1024; // 512\r\n\r\nATON.AMB_L = 0.1; // Ambient when using direct lighting\r\n\r\n/**\r\nSet path collection (3D models, audio, panoramas, ...)\r\n@param {string} path - path\r\n*/\r\nATON.setPathCollection = (path)=>{\r\n    ATON.PATH_COLLECTION = /*window.location.origin + */path;\r\n    //ATON.PATH_MODELS     = ATON.PATH_COLLECTION+\"models/\";\r\n};\r\n\r\n/**\r\nSet path scenes\r\n@param {string} path - path\r\n*/\r\nATON.setPathScenes = (path)=>{\r\n    ATON.PATH_SCENES = /*window.location.origin +*/ path;\r\n};\r\n\r\n// For resuming suspended audio/video streams\r\nATON._onUserInteraction = ()=>{\r\n    if (ATON._elPanoVideo && !ATON._vpanoPlaying) ATON._elPanoVideo.play();\r\n    if (ATON.AudioHub._listener.context.state === 'suspended') ATON.AudioHub._listener.context.resume();\r\n};\r\n\r\nATON._setupBaseListeners = ()=>{\r\n    let el = ATON._renderer.domElement;\r\n\r\n    window.addEventListener( 'resize', ATON._onResize, false );\r\n    window.onorientationchange = ATON._readDeviceOrientationMode;\r\n\r\n    if (screenfull.isEnabled){\r\n\t    screenfull.on('change', ()=>{\r\n            ATON._bFS = screenfull.isFullscreen;\r\n            ATON.fireEvent(\"Fullscreen\", ATON._bFS);\r\n\r\n\t\t    if (ATON._bFS) console.log(\"Now fullscreen\");\r\n            else console.log(\"Exit fullscreen\");\r\n\t    });\r\n    }\r\n\r\n/*\r\n    document.addEventListener('webkitfullscreenchange', ATON._onFSchange, false);\r\n    document.addEventListener('mozfullscreenchange', ATON._onFSchange, false);\r\n    document.addEventListener('fullscreenchange', ATON._onFSchange, false);\r\n    document.addEventListener('MSFullscreenChange', ATON._onFSchange, false);\r\n*/\r\n    el.addEventListener( 'mousemove', ATON._updateScreenMove, false );\r\n    ///el.addEventListener('dblclick', ATON._doubleTap, false);\r\n\r\n    el.addEventListener('mousedown', (e)=>{\r\n        if (e.button === 1) ATON.fireEvent(\"MouseMidButton\");      // middle-click\r\n        if (e.button === 2) ATON.fireEvent(\"MouseRightButton\");    // right-click\r\n    });\r\n\r\n    el.addEventListener( 'wheel', ATON._onMouseWheel, false );\r\n\r\n    // Generic pointer\r\n    ATON._bPointerDown = false;\r\n    window.addEventListener('pointerdown', (e)=>{\r\n        ATON._bPointerDown = true;\r\n        ATON._onUserInteraction();\r\n    });\r\n    window.addEventListener('pointerup', (e)=>{\r\n        ATON._bPointerDown = false;\r\n    });\r\n    window.addEventListener('pointermove', (e)=>{\r\n        if (!ATON._bPointerDown) return;\r\n\r\n        ATON._updateScreenMove(e);\r\n        ATON._handleQueries();\r\n    });\r\n\r\n    window.addEventListener('touchstart', (e)=>{\r\n        ATON._bPointerDown = true;\r\n        ATON._onUserInteraction();\r\n    });\r\n    window.addEventListener('touchend', (e)=>{\r\n        ATON._bPointerDown = false;\r\n    });\r\n    window.addEventListener('touchmove', (e)=>{\r\n        if (!ATON._bPointerDown) return;\r\n\r\n        ATON._updateScreenMove(e.touches[0]);\r\n        ATON._handleQueries();\r\n    });\r\n\r\n/*\r\n    Hammer(el).on(\"press pressup\", (ev)=>{\r\n\r\n        // Hold gesture start (press)\r\n        if (ev.type == \"press\") {\r\n            console.log(\"Hold active\");\r\n        }\r\n\r\n        // Hold gesture stop (pressup)\r\n        if (ev.type == \"pressup\") {\r\n            console.log(\"Hold inactive\");\r\n        }\r\n    });\r\n*/\r\n    // Touch events\r\n    Hammer(el).on(\"doubletap\", (e)=>{\r\n        ATON._bPointerDown = false;\r\n        ATON.fireEvent(\"DoubleTap\", e.srcEvent);\r\n        //console.log(e.srcEvent);\r\n    });\r\n\r\n    Hammer(el).on(\"tap\", (e)=>{\r\n        //ATON._evPointer = e.srcEvent;\r\n        ATON._bPointerDown = false;\r\n\r\n        ATON._onUserInteraction();\r\n\r\n        ATON._updateScreenMove(e.srcEvent);\r\n        ATON._handleQueries();\r\n\r\n        ATON.fireEvent(\"Tap\", e.srcEvent);\r\n        //console.log(e.srcEvent);\r\n\r\n        // UI selection\r\n        if (ATON._hoveredUI === undefined) return;\r\n        let H = ATON.getUINode(ATON._hoveredUI);\r\n        if (H && H.onSelect) H.onSelect();\r\n    });\r\n\r\n    ATON.on(\"DoubleTap\", (e)=>{\r\n        //console.log(e);\r\n        ATON.defaultDoubleTapFromScreenCoords(e);\r\n    });\r\n\r\n\r\n    // Keyboard\r\n    ATON._kModShift = false;\r\n    ATON._kModCtrl  = false;\r\n\r\n    ATON._bListenKeyboardEvents = true; // FIXME: check if there's a better way\r\n\r\n    window.addEventListener(\"keydown\", (e)=>{\r\n        //e.preventDefault();\r\n        ATON._onUserInteraction();\r\n\r\n        if (e.key === \"Shift\")   ATON._kModShift = true;\r\n        if (e.key === \"Control\") ATON._kModCtrl  = true;\r\n        \r\n        if (!ATON._bListenKeyboardEvents) return;\r\n\r\n        ATON.fireEvent(\"KeyPress\", e.key);\r\n        //ATON.fireEvent(\"KeyPress/\"+e.key);\r\n    }, false);\r\n\r\n    window.addEventListener(\"keyup\", (e)=>{\r\n        //e.preventDefault();\r\n\r\n        if (e.key === \"Shift\")   ATON._kModShift = false;\r\n        if (e.key === \"Control\") ATON._kModCtrl  = false;\r\n\r\n        if (!ATON._bListenKeyboardEvents) return;\r\n\r\n        ATON.fireEvent(\"KeyUp\", e.key);\r\n        //ATON.fireEvent(\"KeyUp/\"+e.key);\r\n    }, false);\r\n\r\n    // Defaults\r\n    ATON.on(\"KeyPress\", (k)=>{\r\n\r\n        if (k==='+'){\r\n            let f = ATON.Nav.getFOV() + 1.0;\r\n            ATON.Nav.setFOV(f);\r\n        }\r\n        if (k==='-'){\r\n            let f = ATON.Nav.getFOV() - 1.0;\r\n            ATON.Nav.setFOV(f);\r\n        }\r\n\r\n        if (k==='PageUp'){\r\n            let r = ATON.SUI.mainSelector.scale.x + 0.02;\r\n            ATON.SUI.setSelectorRadius(r);\r\n        }\r\n        if (k==='PageDown'){\r\n            let r = ATON.SUI.mainSelector.scale.x - 0.02;\r\n            r = Math.max(r, 0.01);\r\n            ATON.SUI.setSelectorRadius(r); \r\n        }\r\n    });\r\n\r\n    // Default semantic highlight\r\n/*\r\n    ATON.on(\"SemanticNodeLeave\", (semid)=>{\r\n        let S = ATON.getSemanticNode(semid);\r\n        if (S) S.restoreDefaultMaterial();\r\n    });\r\n    ATON.on(\"SemanticNodeHover\", (semid)=>{\r\n        let S = ATON.getSemanticNode(semid);\r\n        if (S) S.highlight();\r\n    });\r\n*/          \r\n};\r\n\r\nATON._onResize = ()=>{\r\n    ATON.Nav._camera.aspect = window.innerWidth / window.innerHeight;\r\n    ATON.Nav._camera.updateProjectionMatrix();\r\n\r\n    ATON._renderer.setSize( window.innerWidth, window.innerHeight );\r\n    console.log(\"onResize\");\r\n};\r\n\r\nATON._onMouseWheel = (e)=>{\r\n    e.preventDefault();\r\n\r\n    ATON.fireEvent(\"MouseWheel\", e.deltaY);\r\n};\r\n\r\nATON.focusOn3DView = ()=>{\r\n    ATON._renderer.domElement.focus();\r\n};\r\n\r\n// Base/default routine on generic user activation\r\n// E.g. double-tap, VR controller trigger, etc.\r\nATON._SUIactivation = ()=>{\r\n    const U = ATON.getUINode(ATON._hoveredUI);\r\n    \r\n    if (U === undefined) return false;\r\n    if (U.onSelect === undefined) return false;\r\n\r\n    U.onSelect();\r\n    return true;\r\n};\r\n\r\n\r\nATON._stdActivation = ()=>{\r\n    //if (!ATON.Nav._bControl) return;\r\n\r\n    // Handle SUI nodes\r\n    if (ATON._SUIactivation()) return;\r\n\r\n    if (!ATON.Nav._bControl) return;\r\n\r\n    // Handle active immersive AR/VR session\r\n    if (ATON.XR._bPresenting){\r\n        if (XR._sessionType === \"immersive-vr\") XR.teleportOnQueriedPoint();\r\n        ATON.FE.playAudioFromSemanticNode(ATON._hoveredSemNode);\r\n        return;\r\n    }\r\n\r\n    // Non-immersive sessions\r\n    let bFPtrans = ATON.Nav.isFirstPerson() || ATON.Nav.isDevOri();\r\n\r\n    // When first-person mode, teleport (non immersive)\r\n    if (bFPtrans){\r\n        if (ATON.Nav.currentQueryValidForLocomotion()){\r\n            let P = ATON._queryDataScene.p;\r\n            //let N = ATON._queryDataScene.n;\r\n\r\n            let currDir = ATON.Nav._vDir;\r\n            let feye = new THREE.Vector3(P.x, P.y+ATON.userHeight, P.z);\r\n            let ftgt = new THREE.Vector3(\r\n                feye.x + currDir.x,\r\n                feye.y + currDir.y,\r\n                feye.z + currDir.z,\r\n            );\r\n\r\n            let POV = new ATON.POV().setPosition(feye).setTarget(ftgt).setFOV(ATON.Nav._currPOV.fov);\r\n\r\n            ATON.Nav.requestPOV(POV, 0.5);\r\n        }\r\n        return;\r\n    }\r\n\r\n    // In orbit mode, focus on selected SemNode...\r\n    let hsn = ATON.getSemanticNode(ATON._hoveredSemNode);\r\n    if (ATON._queryDataSem && hsn){\r\n        ATON.Nav.requestPOVbyNode( hsn, 0.5);\r\n        return;\r\n    }\r\n    // ...or perform standard retarget on picked surface point\r\n    if (ATON._queryDataScene){\r\n        ATON.Nav.requestRetarget(ATON._queryDataScene.p, /*ATON._queryDataScene.n*/undefined, 0.5);\r\n    }\r\n\r\n    // TODO: go POV in sight if any (panorama only mode)\r\n};\r\n\r\n// Default retarget from screen coordinates (eg.: on double tap)\r\nATON.defaultDoubleTapFromScreenCoords = (e)=>{\r\n    ATON._updateScreenMove(e);\r\n    ATON._handleQueryScene();\r\n\r\n    ATON._stdActivation();\r\n}\r\n\r\n// Fullscreen\r\nATON.isFullscreen = ()=>{\r\n    return ATON._bFS;\r\n/*\r\n    if (document.webkitIsFullScreen || document.mozFullScreen || document.msFullscreenElement !== undefined){\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n*/\r\n};\r\n\r\n\r\nATON.toggleFullScreen = ()=>{\r\n    screenfull.toggle();\r\n};\r\n\r\n\r\n//============================================================================\r\n// ATON init routines\r\n//============================================================================\r\n/**\r\nMain ATON initialization, it will take care of all sub-components initialization, device profiling and much more\r\n@example\r\nATON.realize()\r\n*/\r\nATON.realize = ()=>{\r\n    console.log(\"Initialize ATON...\");\r\n\r\n    ATON.Utils.init();\r\n    ATON.Utils.profileDevice();\r\n    \r\n    //THREE.Object3D.DefaultUp = new THREE.Vector3(0,0,1); // mismatches WebXR y-up\r\n\r\n    // Timing\r\n    ATON._clock = new THREE.Clock(true);\r\n\r\n    ATON._bFS = false; // fullscreen\r\n\r\n    const wglopts = {\r\n        //canvas: document.getElementById(\"View3D\"),\r\n        antialias: true, //ATON.device.isMobile? false : true,\r\n        alpha: true,\r\n\r\n        powerPreference: \"high-performance\",\r\n        ///pecision: \"lowp\", //\"mediump\"\r\n        //preserveDrawingBuffer: true\r\n    };\r\n\r\n    ATON._renderer = new THREE.WebGLRenderer(wglopts);\r\n    ATON._renderer.setSize( window.innerWidth, window.innerHeight );\r\n    //console.log(ATON._renderer);\r\n\r\n    ATON._stdpxd = 1.0; //window.devicePixelRatio? (window.devicePixelRatio) : 1.0;\r\n    ATON._renderer.setPixelRatio( ATON._stdpxd );\r\n    //console.log(ATON._stdpxd);\r\n\r\n    ATON._fps = 60.0;\r\n    ATON._dt  = 0.01;\r\n    ATON._dtAccum     = 0.0;\r\n    ATON._avgFPScount = 0.0;\r\n    ATON._avgFPSaccum = 0.0;\r\n    ATON._avgFPS = 60.0;\r\n\r\n    ATON._bDynamicDensity = false;\r\n\r\n    ATON._aniMixers = [];\r\n    \r\n    ATON._renderer.outputEncoding = THREE.sRGBEncoding;\r\n    ATON._renderer.toneMapping = THREE.LinearToneMapping; // THREE.ACESFilmicToneMapping\r\n    ATON._renderer.toneMappingExposure = 1.0;\r\n\r\n    //console.log(ATON._renderer.getPixelRatio());\r\n\r\n    ATON._renderer.setAnimationLoop( ATON._onFrame );\r\n    //ATON._bDirtyLP = false;\r\n\r\n    ATON._maxAnisotropy = ATON._renderer.capabilities.getMaxAnisotropy();\r\n    console.log(ATON._renderer.capabilities);\r\n\r\n    THREE.Cache.enabled = true;\r\n\r\n    ATON.userHeight = 1.7;\r\n \r\n    document.body.appendChild( ATON._renderer.domElement );\r\n    //console.log(ATON._renderer);\r\n    \r\n    let canvas = ATON._renderer.domElement;\r\n    canvas.style.outline = \"none\";\r\n    canvas.style.border  = \"none\";\r\n    //canvas.style.padding = \"0px\";\r\n    //canvas.style.margin  = \"0px\";\r\n    //canvas.style.width   = \"100%\";\r\n    //canvas.style.height  = \"100%\";\r\n\r\n    // Multimedia\r\n    ATON._vpanoPlaying = false;\r\n    ATON._bUserInts = 0;\r\n\r\n    ATON.EventHub.init();\r\n    ATON.MatHub.init();\r\n\r\n    //ATON._setupLoadManager();\r\n    ATON._assetsManager = {};\r\n    ATON._aLoader = new THREE.GLTFLoader(/*ATON._loadManager*/);\r\n    ATON._dracoLoader = new THREE.DRACOLoader();\r\n    ATON._dracoLoader.setDecoderPath( ATON.PATH_DRACO_LIB );\r\n    ATON._aLoader.setDRACOLoader( ATON._dracoLoader );\r\n    ATON._numReqLoad = 0;\r\n\r\n    // CC Manager\r\n    ATON._ccModels = [];\r\n\r\n    // Update routines\r\n    ATON._updRoutines = [];\r\n\r\n    // Periods (TODO:)\r\n    //ATON.periods = [];\r\n\r\n    ATON._lps = []; // lightprobes\r\n    ATON._bAutoLP = false;\r\n    ATON._envMapInt = 1.0;\r\n    //ATON._dirtyLPs = true;\r\n    ATON._bShadowsFixedBound = false;\r\n\r\n    ATON._shadowsNear = ATON.SHADOWS_NEAR;\r\n    ATON._shadowsFar  = ATON.SHADOWS_FAR;\r\n    ATON._shadowsSize = ATON.SHADOWS_SIZE;\r\n    ATON._shadowsRes  = ATON.SHADOWS_RES;\r\n\r\n    ATON.initGraphs();\r\n    ATON.SceneHub.init();\r\n\r\n    // TileSets (3D Tiles)\r\n    ATON._tsets = [];\r\n\r\n    // Init audio hub\r\n    ATON.AudioHub.init();\r\n\r\n    // Init nav system\r\n    ATON.Nav.init();\r\n\r\n    // XR\r\n    ATON.XR.init();\r\n\r\n    // Spatial UI\r\n    ATON.SUI.init();\r\n\r\n    // VRoadcast\r\n    ATON.VRoadcast.init();\r\n\r\n    // Media Recorder\r\n    ATON.MediaRec.init();\r\n\r\n    // Semantic Factory\r\n    ATON.SemFactory.init();\r\n\r\n    // App Hub\r\n    ATON.AppHub.init();\r\n\r\n    // GeoLoc\r\n    ATON.GeoLoc.init();\r\n\r\n    // Query / picked data\r\n    ATON._queryDataScene = undefined;\r\n    ATON._queryDataSem   = undefined;\r\n    ATON._queryDataUI    = undefined;\r\n\r\n    ATON._hoveredSemNode = undefined;\r\n    ATON._hoveredUI      = undefined;\r\n\r\n    ATON._bQuerySemOcclusion = true;\r\n    ATON._bQueryNormals  = true;\r\n    ATON._bPauseQuery    = false;\r\n    \r\n    ATON._bqScene = false;\r\n    ATON._bqSem   = false;\r\n\r\n    // Timed Gaze Input\r\n    ATON._tgiDur = undefined; // set to seconds (e.g. 2.0 to enable)\r\n    ATON._tgiPer = undefined; // tgi percentage\r\n    ATON._tHover  = undefined;\r\n\r\n    // Main Panorama\r\n    ATON._bMainPanoInfinite = true;\r\n    ATON._matMainPano = undefined;\r\n    ATON._mMainPano   = undefined;\r\n\r\n    //window.setInterval(()=>{ if (!ATON._bPauseQuery) ATON._handleQueries(); }, 500 );\r\n\r\n\r\n    // IFC\r\n/*\r\n    ATON._ifcLoader = new IFCLoader();\r\n    ATON._ifcLoader.setWasmPath( ATON.PATH_IFC_LIB );\r\n*/\r\n\r\n    // Basis\r\n/*\r\n    ATON._basisLoader = new BasisTextureLoader();\r\n    ATON._basisLoader.setTranscoderPath( ATON.PATH_BASIS_LIB );\r\n    ATON._basisLoader.detectSupport( ATON._renderer );\r\n    \r\n    // Register BasisTextureLoader for .basis extension.\r\n    THREE.DefaultLoadingManager.addHandler( /\\.basis$/, ATON._basisLoader );\r\n*/\r\n\r\n\r\n    // Mouse/Touch screen coords\r\n    ATON._screenPointerCoords = new THREE.Vector2(0.0,0.0);\r\n\r\n    // Ray casters\r\n    ATON._rcScene = new THREE.Raycaster();\r\n    ATON._rcScene.layers.set(ATON.NTYPES.SCENE);\r\n    ATON._rcSemantics = new THREE.Raycaster();\r\n    ATON._rcSemantics.layers.set(ATON.NTYPES.SEM);\r\n    ATON._rcUI = new THREE.Raycaster();\r\n    ATON._rcUI.layers.set(ATON.NTYPES.UI);\r\n\r\n    ATON._registerRCS(); // not used for now\r\n\r\n    ATON._setupBaseListeners();\r\n\r\n    if (ATON.device.isMobile) ATON._readDeviceOrientationMode();\r\n\r\n    ATON._wappID = undefined;\r\n\r\n    ATON.focusOn3DView();\r\n};\r\n\r\n/**\r\nSet timed-gaze duration\r\n@param {number} dt - time to trigger activation\r\n*/\r\nATON.setTimedGazeDuration = (dt)=>{\r\n    ATON._tgiDur = dt;\r\n};\r\n\r\n/**\r\nGet timed-gaze current progress (percentage)\r\n@returns {number}\r\n*/\r\nATON.getTimedGazeProgress = ()=>{\r\n    if (ATON._tgiDur === undefined) return undefined;\r\n    return ATON._tgiPer;\r\n};\r\n\r\n/**\r\nGet current elapsed time since ATON initialization\r\n@returns {number}\r\n*/\r\nATON.getElapsedTime = ()=>{\r\n    return ATON._clock.elapsedTime;\r\n};\r\n\r\n/**\r\nPause rendering\r\n*/\r\nATON.renderPause = ()=>{\r\n    ATON._renderer.setAnimationLoop( undefined );\r\n};\r\n\r\n/**\r\nResume rendering (if paused)\r\n*/\r\nATON.renderResume = ()=>{\r\n    ATON._renderer.setAnimationLoop( ATON._onFrame );\r\n};\r\n\r\nATON._setupLoadManager = ()=>{\r\n    ATON._loadManager = new THREE.LoadingManager();\r\n    ATON._loadManager.onStart = ( url, itemsLoaded, itemsTotal )=>{\r\n\t    console.log( 'Started loading file: ' + url + '.\\nLoaded ' + itemsLoaded + ' of ' + itemsTotal + ' files.' );\r\n        ATON.fireEvent(\"NodeRequestFired\", url);\r\n    };\r\n\r\n    ATON._loadManager.onLoad = ()=>{\r\n\t    console.log( 'Loading complete!');\r\n        ATON.fireEvent(\"AllNodeRequestsCompleted\");\r\n    };\r\n\r\n    ATON._loadManager.onProgress = ( url, itemsLoaded, itemsTotal )=>{\r\n\t    //console.log( 'Loading file: ' + url + '.\\nLoaded ' + itemsLoaded + ' of ' + itemsTotal + ' files.' );\r\n    };\r\n\r\n    ATON._loadManager.onError = ( url )=>{\r\n\t    console.log( 'There was an error loading ' + url );\r\n    };\r\n};\r\n\r\n/**\r\nSet the default pixel density (standard is 1.0)\r\n@example\r\nATON.setDefaultPixelDensity(0.5)\r\n*/\r\nATON.setDefaultPixelDensity = (d)=>{\r\n    ATON._stdpxd = d;\r\n    ATON._renderer.setPixelRatio( d );\r\n\r\n    // WebXR density\r\n    if (ATON._renderer.xr === undefined) return;\r\n\r\n    if (ATON.device.isMobile) ATON._renderer.xr.setFramebufferScaleFactor(ATON._stdpxd * ATON.XR.MOBILE_DENSITY_F);\r\n    else ATON._renderer.xr.setFramebufferScaleFactor(ATON._stdpxd);\r\n};\r\n\r\n/**\r\nReset pixel density to default\r\n*/\r\nATON.resetPixelDensity = ()=>{\r\n    ATON._renderer.setPixelRatio( ATON._stdpxd );\r\n};\r\n\r\nATON._readDeviceOrientationMode = ()=>{\r\n    if (Math.abs(window.orientation) === 90){\r\n        console.log(\"Landscape Mode\");\r\n        ATON.fireEvent(\"MobileLandscapeMode\");\r\n    }\r\n    else {\r\n        console.log(\"Portrait Mode\");\r\n        ATON.fireEvent(\"MobilePortraitMode\");\r\n    }\r\n\r\n    setTimeout( ATON._onResize, 500);\r\n};\r\n\r\n\r\n//============================================================================\r\n// Scene-graphs\r\n//============================================================================\r\nATON.snodes   = {}; // Visible scene-graph\r\nATON.semnodes = {}; // Semantics graph\r\nATON.uinodes  = {}; // UI graph\r\n\r\n// Visible scene-graph\r\n//=============================================\r\n/**\r\nCreate a scene node (visible scene-graph)\r\n@param {string} id - a string representing unique ID of the node (optional)\r\n@returns {Node}\r\n*/\r\nATON.createSceneNode = (id)=>{\r\n    return new ATON.Node(id, ATON.NTYPES.SCENE);\r\n};\r\n\r\n/**\r\nGet a previously created scene node (visible scene-graph)\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getSceneNode = (id)=>{ \r\n    if (id === undefined) return undefined;    \r\n    return ATON.snodes[id];\r\n};\r\n\r\n/**\r\nGet or create a scene node (visible scene-graph)\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getOrCreateSceneNode = (id)=>{\r\n    let N = ATON.getSceneNode(id);\r\n    if (N !== undefined) return N;\r\n    return ATON.createSceneNode(id);\r\n};\r\n\r\n/**\r\nGet root (visible scene-graph)\r\n@returns {Node}\r\n*/\r\nATON.getRootScene = ()=>{\r\n    return ATON._rootVisible;\r\n};\r\n\r\n// Semantics, shape descriptors\r\n//=============================================\r\n\r\n/**\r\nCreate a semantic node\r\n@param {string} id - a string representing unique ID of the node (optional)\r\n@returns {Node}\r\n*/\r\nATON.createSemanticNode = (id)=>{\r\n    return new ATON.Node(id, ATON.NTYPES.SEM);\r\n};\r\n\r\n/**\r\nGet a previously created semantic node\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getSemanticNode = (id)=>{\r\n    if (id === undefined) return undefined; \r\n    return ATON.semnodes[id];\r\n};\r\n\r\n/**\r\nGet or create a semantic node\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getOrCreateSemanticNode = (id)=>{\r\n    let S = ATON.getSemanticNode(id);\r\n    if (S !== undefined) return S;\r\n    return ATON.createSemanticNode(id);\r\n};\r\n\r\n/**\r\nGet root of semantic graph\r\n@returns {Node}\r\n*/\r\nATON.getRootSemantics = ()=>{\r\n    return ATON._rootSem;\r\n};\r\n\r\n// UI graph\r\n//=============================================\r\n\r\n/**\r\nCreate a UI node\r\n@param {string} id - a string representing unique ID of the node (optional)\r\n@returns {Node}\r\n*/\r\nATON.createUINode = (id)=>{\r\n    return new ATON.Node(id, ATON.NTYPES.UI);\r\n};\r\n\r\n/**\r\nGet a previously created UI node\r\n@param {string} id - the node ID\r\n@returns {Node}\r\n*/\r\nATON.getUINode = (id)=>{\r\n    if (id === undefined) return undefined; \r\n    return ATON.uinodes[id];\r\n};\r\n\r\n/**\r\nGet root of UI graph\r\n@returns {Node}\r\n*/\r\nATON.getRootUI = ()=>{\r\n    return ATON._rootUI;\r\n};\r\n\r\n// Asset loading routines\r\nATON._assetReqNew = (url)=>{\r\n    ATON._numReqLoad++;\r\n    ATON.fireEvent(\"NodeRequestFired\", url);\r\n};\r\n\r\nATON._assetReqComplete = (url)=>{\r\n    ATON.fireEvent(\"NodeRequestCompleted\", url);\r\n    ATON._numReqLoad--;\r\n\r\n    if (ATON._numReqLoad <= 0) ATON._onAllReqsCompleted();\r\n};\r\n\r\nATON._onAllReqsCompleted = ()=>{\r\n    // Bounds\r\n    let c = ATON._rootVisible.getBound().center;\r\n    let r = ATON._rootVisible.getBound().radius;\r\n\r\n    if (ATON._renderer.shadowMap.enabled){\r\n\r\n        ATON._rootVisible.traverse((o) => {\r\n            if (o.isMesh){\r\n                o.castShadow = true;\r\n                o.receiveShadow = true;\r\n            }\r\n        });\r\n\r\n        ATON.adjustShadowsParamsFromSceneBounds();\r\n\r\n        if (ATON._bShadowsFixedBound){\r\n            ATON.updateDirShadows(c);\r\n        }\r\n    }\r\n\r\n    if (ATON._bAutoLP){\r\n        if (ATON._lps[0] === undefined) ATON.addLightProbe( new ATON.LightProbe().setPosition(c).setNear(r) );\r\n        else {\r\n            ATON._lps[0].setPosition(c.x, c.y, c.z).setNear(r);\r\n        }\r\n        console.log(\"Auto LP\");\r\n    }\r\n\r\n    //ATON.Utils.graphPostVisitor(ATON._rootVisible);\r\n\r\n    // re-center main pano\r\n    if (c && ATON._mMainPano) ATON._mMainPano.position.copy(c);\r\n\r\n    ATON.getRootScene().assignLightProbesByProximity();\r\n    //ATON.updateLightProbes();\r\n\r\n    //ATON._bDirtyLP = true;\r\n\r\n    ATON.fireEvent(\"AllNodeRequestsCompleted\");\r\n\r\n    ATON._postAllReqsCompleted();\r\n\r\n    // FIXME: dirty\r\n    setTimeout( ()=>{\r\n        //if (c && ATON._mMainPano) ATON._mMainPano.position.copy(c);\r\n        ATON.updateLightProbes();\r\n\r\n        // Lazy shadows updates (performances)\r\n        if (ATON._renderer.shadowMap.enabled && ATON._bShadowsFixedBound && ATON._aniMixers.length === 0){\r\n            ATON._dMainL.shadow.autoUpdate = false;\r\n            console.log(\"Lazy shadows\");\r\n        }\r\n    }, 1000);\r\n};\r\n\r\nATON._postAllReqsCompleted = (R)=>{\r\n    if (R === undefined) R = ATON._rootVisible;\r\n\r\n    for (let n in R.children){\r\n        let N = R.children[n];\r\n\r\n        if (N && N.toggle){\r\n            ATON._postAllReqsCompleted(N);\r\n            N.toggle(N.visible);\r\n            //if (N.bPickable !== undefined) N.setPickable(N.bPickable);\r\n        }\r\n    }\r\n};\r\n\r\n\r\nATON.initGraphs = ()=>{\r\n    // Global root\r\n    ATON._mainRoot = new THREE.Scene();\r\n    ATON._mainRoot.background = new THREE.Color( 0.7,0.7,0.7 );\r\n    //ATON._mainRoot.fog = new THREE.Fog(new THREE.Color( 0.7,0.7,0.7 ), 5, 200);\r\n\r\n    // visible scene-graph\r\n    ATON._rootVisibleGlobal = new THREE.Group();\r\n    ATON._mainRoot.add(ATON._rootVisibleGlobal);\r\n\r\n    ATON._rootVisible = ATON.createSceneNode().setAsRoot();\r\n    ATON._rootVisibleGlobal.add(ATON._rootVisible);\r\n\r\n\r\n    // semantics graph\r\n    ATON._rootSem = ATON.createSemanticNode().setAsRoot();\r\n    ATON._mainRoot.add(ATON._rootSem);\r\n\r\n    // UI graph\r\n    ATON._rootUI = ATON.createUINode().setAsRoot();\r\n    //ATON._rootUI.renderOrder = 10;\r\n    ATON._mainRoot.add(ATON._rootUI);\r\n\r\n    // Uniform lighting\r\n    ATON.ambLight = new THREE.AmbientLight( new THREE.Color(1,1,1) /*ATON._mainRoot.background*/ );\r\n    ATON._rootVisibleGlobal.add(ATON.ambLight);\r\n};\r\n\r\nATON.setBackgroundColor = (bg)=>{\r\n    ATON._mainRoot.background = bg;\r\n    //ATON._mainRoot.fog = new THREE.Fog(bg, 5, 200);\r\n};\r\n\r\n//==============================================================\r\n// LightProbes\r\n//==============================================================\r\nATON.setAutoLP = (b)=>{\r\n    ATON._bAutoLP = b;\r\n};\r\n\r\nATON.setNeutralAmbientLight = (a)=>{\r\n    ATON.ambLight.color = new THREE.Color( a,a,a );\r\n};\r\n\r\n/**\r\nAdd a LightProbe to the scene\r\n@param {LightProbe} LP - the light probe being added \r\n*/\r\nATON.addLightProbe = (LP)=>{\r\n    if (LP === undefined) return;\r\n\r\n    if (ATON._lps.length === 0) ATON.setNeutralAmbientLight(ATON.AMB_L);\r\n\r\n    ATON._lps.push(LP);\r\n\r\n    // SUI\r\n    if (ATON.SUI.gLPIcons === undefined) return;\r\n    SUI.addLPIcon(LP);\r\n};\r\n\r\n/**\r\nUpdate all LightProbes in the scene\r\n*/\r\nATON.updateLightProbes = ()=>{\r\n    if (ATON._lps.length === 0) return;\r\n\r\n    for (let i in ATON._lps){\r\n        ATON._lps[i].update();\r\n/*\r\n        if (ATON._indLPs === undefined) ATON._indLPs = [];\r\n        if (ATON._indLPs[i]) ATON._mainRoot.remove(ATON._indLPs[i]);\r\n\r\n        ATON._indLPs[i] = THREE.LightProbeGenerator.fromCubeRenderTarget( ATON._renderer, ATON._lps[i]._prevCCtarget );\r\n        ATON._indLPs[i].intensity = 1.0;\r\n\r\n        ATON._mainRoot.add( ATON._indLPs[i] );\r\n\r\n        console.log(ATON._mainRoot);\r\n*/\r\n    }\r\n\r\n    // FIXME: indirect LP based on first LP (for now)\r\n    if (ATON._lps[0]){\r\n        if (ATON._indLP) ATON._mainRoot.remove(ATON._indLP);\r\n\r\n        ATON._indLP = THREE.LightProbeGenerator.fromCubeRenderTarget( ATON._renderer, ATON._lps[0]._prevCCtarget );\r\n        ATON._indLP.intensity = 1.0;\r\n\r\n        ATON._mainRoot.add( ATON._indLP );\r\n    }\r\n\r\n    //for (let i in ATON._lps) ATON._lps[i].update();\r\n\r\n    ATON._rootVisible.traverse((o) => {\r\n        let LP = o.userData.LP;\r\n        if (LP !== undefined && LP instanceof ATON.LightProbe){\r\n            o.material.envMap = LP.getEnvTex();\r\n            o.material.combine = THREE.AddOperation;\r\n            o.material.envMapIntensity = ATON._envMapInt;\r\n        }\r\n    });\r\n\r\n    console.log(\"LPs updated.\");\r\n};\r\n\r\n//==============================================================\r\n// Environment\r\n//==============================================================\r\n\r\n/**\r\nSet the main panorama (360)\r\n@param {string} path - url to equirectangular image\r\n@example\r\nATON.setMainPanorama(\"my/pano.jpg\");\r\n*/\r\nATON.setMainPanorama = (path)=>{\r\n    let tpano = undefined;\r\n\r\n    path = ATON.Utils.resolveCollectionURL(path);\r\n\r\n    //const pmremGenerator = new THREE.PMREMGenerator( ATON._renderer );\r\n    //pmremGenerator.compileEquirectangularShader();\r\n/*\r\n    if (path.endsWith(\".hdr\")){\r\n        new THREE.RGBELoader().setDataType( THREE.UnsignedByteType ).load(path, (hdr)=>{\r\n            //const envMap = pmremGenerator.fromEquirectangular( hdr ).texture;\r\n            \r\n            tpano = hdr;\r\n            if (ATON._matMainPano) ATON._matMainPano.map = hdr;\r\n        });\r\n\r\n        //return;\r\n    }\r\n*/\r\n\r\n    // Geometry\r\n    if (ATON._mMainPano === undefined){\r\n        ATON._gMainPano = new THREE.SphereBufferGeometry( /*ATON.Nav.STD_FAR * 0.8*/1.0, 60,60 );\r\n        //ATON._gMainPano = new THREE.SphereGeometry( ATON.Nav.STD_FAR * 0.8, 60,60 );\r\n        \r\n        ATON._gMainPano.castShadow    = false;\r\n        ATON._gMainPano.receiveShadow = false;\r\n\r\n        ATON._mMainPano = new THREE.Mesh(ATON._gMainPano, ATON._matMainPano);\r\n        ATON._mMainPano.frustumCulled = false;\r\n        ATON._mMainPano.renderOrder = -100;\r\n        \r\n        ATON.setMainPanoramaRadius(ATON.Nav.STD_FAR * 0.8);\r\n        ///ATON.setMainPanoramaRadius(100.0);\r\n    }\r\n\r\n    // Panoramic Video\r\n    if (ATON.Utils.isVideo(path)){\r\n        // First time\r\n        if (ATON._elPanoVideo === undefined){\r\n            ATON._elPanoVideo = document.createElement('video');\r\n            ATON._elPanoVideo.id = \"idPanoVideo\";\r\n            ATON._elPanoVideo.innerHTML = \"<source src='\"+path+\"'>\";\r\n            ATON._elPanoVideo.crossOrigin = \"anonymous\";\r\n            ATON._elPanoVideo.loop = true;\r\n            ATON._elPanoVideo.playsinline = true;\r\n            ATON._elPanoVideo.style.cssText = \"display:none;\";\r\n            //ATON._elPanoVideo.src = path;\r\n            ATON._elPanoVideo.autoplay = true;\r\n\r\n            ATON._elPanoVideo.onplaying = ()=>{\r\n                console.log(\"VideoPano playing\");\r\n                ATON._vpanoPlaying = true;\r\n            };\r\n        }\r\n\r\n        tpano = new THREE.VideoTexture( ATON._elPanoVideo );\r\n        tpano.encoding = THREE.sRGBEncoding;\r\n        //tpano.minFilter = THREE.NearestFilter;\r\n\t\t//tpano.generateMipmaps = false;\r\n        //console.log(ATON._elPanoVideo);\r\n\r\n        ATON._realizeOrUpdateMainPano(tpano);\r\n    }\r\n    // Static Panorama\r\n    else {\r\n        /*\r\n        tpano = new THREE.TextureLoader().load(path);\r\n        tpano.encoding = THREE.sRGBEncoding;\r\n        //tpano.minFilter = THREE.NearestFilter;\r\n\t\ttpano.generateMipmaps = true;\r\n        */\r\n        ATON.Utils.textureLoader.load(path, (tex)=>{\r\n            tex.encoding = THREE.sRGBEncoding;\r\n            //tex.minFilter = THREE.NearestFilter;\r\n\t\t    tex.generateMipmaps = true;\r\n\r\n            ATON._realizeOrUpdateMainPano(tex);\r\n        });\r\n    }\r\n};\r\n\r\nATON._realizeOrUpdateMainPano = (tpano)=>{\r\n    // We already created a main pano\r\n    if (ATON._matMainPano !== undefined){\r\n        ATON._matMainPano.map = tpano;\r\n        //ATON._matMainPano.emissive = tpano;\r\n        return;\r\n    }\r\n\r\n    ATON._matMainPano = new THREE.MeshBasicMaterial({ \r\n        map: tpano,\r\n        ///emissive: tpano,\r\n        //fog: false,\r\n        \r\n        depthTest: false,\r\n        depthWrite: false,\r\n        \r\n        ///depthFunc: THREE.AlwaysDepth,\r\n        //side: THREE.BackSide, // THREE.DoubleSide\r\n    });\r\n\r\n    ATON._mMainPano.material = ATON._matMainPano;\r\n\r\n/*\r\n    ATON._mMainPano = new THREE.Mesh(ATON._gMainPano, ATON._matMainPano);\r\n    ATON._mMainPano.frustumCulled = false;\r\n    ATON._mMainPano.renderOrder = -100;\r\n    \r\n    ATON.setMainPanoramaRadius(ATON.Nav.STD_FAR * 0.8);\r\n    ///ATON.setMainPanoramaRadius(100.0);\r\n*/\r\n    // FIXME: dirty, find another way\r\n    if (ATON._bMainPanoInfinite){\r\n        ATON._mMainPano.onAfterRender = ()=>{\r\n            //if (ATON._numReqLoad > 0) return;\r\n            if (ATON.Nav._currPOV) ATON._mMainPano.position.copy(ATON.Nav._currPOV.pos);\r\n        };\r\n    }\r\n\r\n    ATON._rootVisibleGlobal.add(ATON._mMainPano);\r\n};\r\n\r\n\r\nATON.setMainPanoramaRadius = (r)=>{\r\n    if (ATON._gMainPano === undefined) return;\r\n    ATON._gMainPano.scale( -r,r,r );\r\n};\r\n\r\n/**\r\nSet main panorama rotation (radians) around up vector\r\n@param {number} r - rotation\r\n@example\r\nATON.setMainPanoramaRotation(1.5);\r\n*/\r\nATON.setMainPanoramaRotation = (r)=>{\r\n    if (ATON._mMainPano === undefined) return;\r\n    ATON._mMainPano.rotation.set( 0,r,0 );\r\n};\r\n\r\n/**\r\nEnable or disable main panorama infinite distance\r\n@param {boolean} b\r\n@example\r\nATON.setMainPanoramaInfinite(false);\r\n*/\r\nATON.setMainPanoramaInfinite = (b)=>{\r\n    ATON._bMainPanoInfinite = b;\r\n\r\n    if (ATON._mMainPano === undefined) return;\r\n\r\n    if (b){\r\n        ATON._mMainPano.onAfterRender = ()=>{\r\n            //if (ATON._numReqLoad > 0) return;\r\n            if (ATON.Nav._currPOV) ATON._mMainPano.position.copy(ATON.Nav._currPOV.pos);\r\n        };\r\n    }\r\n    else {\r\n        ATON._mMainPano.onAfterRender = undefined;\r\n    }\r\n};\r\n\r\nATON.setMainPanoramaLocation = (c)=>{\r\n    if (ATON._bMainPanoInfinite) return;\r\n    if (ATON._mMainPano === undefined) return;\r\n\r\n    ATON._mMainPano.position.copy(c);    \r\n};\r\n\r\n/**\r\nSet and activate main directional light\r\n@param {THREE.Vector3} v - light direction\r\n@example\r\nATON.setMainLightDirection( new THREE.Vector(0.1,-1.0,0.0) );\r\n*/\r\nATON.setMainLightDirection = (v)=>{\r\n\r\n    let d = v.clone();\r\n    d.normalize();\r\n\r\n    d.x *= ATON.SHADOWS_FAR * 0.5;\r\n    d.y *= ATON.SHADOWS_FAR * 0.5;\r\n    d.z *= ATON.SHADOWS_FAR * 0.5;\r\n\r\n    if (ATON._dMainL === undefined){\r\n        ATON._dMainL = new THREE.DirectionalLight( new THREE.Color(1,1,1), 1.0 );\r\n        ATON._dMainL.castShadow = false;\r\n\r\n        ATON._dMainLtgt = new THREE.Object3D();\r\n        ATON._rootVisibleGlobal.add(ATON._dMainLtgt);\r\n        ATON._dMainL.target = ATON._dMainLtgt;\r\n\r\n        ATON._rootVisibleGlobal.add(ATON._dMainL);\r\n        ATON._dMainLpos = new THREE.Vector3();\r\n    }\r\n\r\n    ATON._dMainLdir = d;\r\n\r\n    ATON._dMainL.position.set(-d.x,-d.y,-d.z);\r\n\r\n    if (ATON._renderer.shadowMap.enabled) ATON._dMainL.shadow.needsUpdate = true;\r\n\r\n    ATON.toggleMainLight(true);\r\n};\r\n\r\nATON.getMainLightDirection = ()=>{\r\n    if (ATON._dMainLdir === undefined) return undefined;\r\n\r\n    let ld = ATON._dMainLdir.clone();\r\n    ld.normalize();\r\n    return ld;\r\n};\r\n\r\nATON.toggleMainLight = (b)=>{\r\n    if (ATON._dMainL === undefined) return;\r\n    ATON._dMainL.visible = b;\r\n    \r\n    if (b){\r\n        ATON.setNeutralAmbientLight(ATON.AMB_L);\r\n        ATON.updateDirShadows();\r\n    }\r\n    else ATON.setNeutralAmbientLight(1.0);\r\n};\r\n\r\nATON.isMainLightEnabled = ()=>{\r\n    if (ATON._dMainL === undefined) return false;\r\n    if (!ATON._dMainL.visible) return false;\r\n\r\n    return true;\r\n};\r\n\r\nATON.setExposure = (d)=>{\r\n    ATON._renderer.toneMappingExposure = d;\r\n};\r\nATON.getExposure = ()=>{\r\n    return ATON._renderer.toneMappingExposure;\r\n};\r\n\r\n// Shadows\r\n// Smart adjustment of shadows params\r\nATON.adjustShadowsParamsFromSceneBounds = ()=>{\r\n    let r = ATON._rootVisible.getBound().radius;\r\n    let c = ATON._rootVisible.getBound().center;\r\n    \r\n    if (r <= 0.0 || r >= ATON.SHADOWS_SIZE){\r\n        ATON._bShadowsFixedBound = false;\r\n        ATON._shadowsSize = ATON.SHADOWS_SIZE;\r\n        //ATON._shadowsNear = ATON.SHADOWS_NEAR;\r\n        //ATON._shadowsFar  = ATON.SHADOWS_FAR;\r\n    }\r\n    else {\r\n        ATON._bShadowsFixedBound = true;\r\n        ATON._shadowsSize = r * 1.5;\r\n\r\n        //console.log(ATON._shadowsNear,ATON._shadowsFar);\r\n    }\r\n\r\n    // must dispose when changing shadow params\r\n    if (ATON._dMainL.shadow.map){\r\n        ATON._dMainL.shadow.map.dispose();\r\n        ATON._dMainL.shadow.map = null;\r\n    }\r\n\r\n    //console.log(ATON._dMainL.shadow.camera);\r\n\r\n    ATON._dMainL.shadow.camera.left   = -ATON._shadowsSize;\r\n    ATON._dMainL.shadow.camera.right  = ATON._shadowsSize;\r\n    ATON._dMainL.shadow.camera.bottom = -ATON._shadowsSize;\r\n    ATON._dMainL.shadow.camera.top    = ATON._shadowsSize;\r\n\r\n    ATON._dMainL.shadow.mapSize.width  = ATON._shadowsRes;\r\n    ATON._dMainL.shadow.mapSize.height = ATON._shadowsRes;\r\n    ATON._dMainL.shadow.camera.near    = ATON._shadowsNear;\r\n    ATON._dMainL.shadow.camera.far     = ATON._shadowsFar;\r\n\r\n    //ATON._dMainL.shadow.camera.updateProjectionMatrix();\r\n\r\n    ATON._dMainL.shadow.bias = -0.0005;\r\n    //ATON._dMainL.shadow.normalBias = 0.05;\r\n};\r\n\r\n\r\nATON.toggleShadows = (b)=>{\r\n    if (ATON._dMainL === undefined) return;\r\n\r\n    if (b){\r\n        ATON._dMainL.castShadow = true;\r\n        ATON._renderer.shadowMap.enabled = true;\r\n\r\n        if (ATON.device.isMobile) ATON._renderer.shadowMap.type = THREE.PCFShadowMap;\r\n        else ATON._renderer.shadowMap.type = THREE.PCFSoftShadowMap; // THREE.VSMShadowMap; \r\n\r\n        //ATON._renderer.shadowMap.type    = THREE.BasicShadowMap;\r\n        //ATON._renderer.shadowMap.type    = THREE.PCFShadowMap;\r\n        //ATON._renderer.shadowMap.type    = THREE.PCFSoftShadowMap; //\r\n        //ATON._renderer.shadowMap.type    = THREE.VSMShadowMap;\r\n\r\n        ATON._rootVisible.traverse((o) => {\r\n            if (o.isMesh){\r\n                o.castShadow = true;\r\n                o.receiveShadow = true;\r\n            }\r\n        });\r\n\r\n        ATON.adjustShadowsParamsFromSceneBounds();\r\n\r\n        if (ATON._bShadowsFixedBound){\r\n            let c = ATON._rootVisible.getBound().center;\r\n            ATON.updateDirShadows(c);\r\n        }\r\n        else ATON.updateDirShadows();\r\n\r\n        ATON._dMainL.shadow.needsUpdate = true;\r\n\r\n        console.log(\"Shadows ON\");\r\n    }\r\n    else {\r\n        ATON._dMainL.castShadow = false;\r\n        ATON._renderer.shadowMap.enabled = false;\r\n        console.log(\"Shadows OFF\");\r\n    }\r\n};\r\n\r\nATON.updateDirShadows = (p)=>{\r\n    if (ATON._dMainLdir === undefined) return;\r\n\r\n    if (p === undefined){\r\n        p = ATON.Nav.getCurrentEyeLocation();\r\n\r\n        ATON._dMainLpos.x = p.x + (ATON.Nav._vDir.x * ATON._shadowsSize);\r\n        ATON._dMainLpos.y = p.y + (ATON.Nav._vDir.y * ATON._shadowsSize);\r\n        ATON._dMainLpos.z = p.z + (ATON.Nav._vDir.z * ATON._shadowsSize);\r\n    }\r\n    else {\r\n        ATON._dMainLpos.x = p.x;\r\n        ATON._dMainLpos.y = p.y;\r\n        ATON._dMainLpos.z = p.z;\r\n    }\r\n\r\n    ATON._dMainL.position.set(\r\n        ATON._dMainLpos.x - ATON._dMainLdir.x, \r\n        ATON._dMainLpos.y - ATON._dMainLdir.y, \r\n        ATON._dMainLpos.z - ATON._dMainLdir.z\r\n    );\r\n\r\n    ATON._dMainLtgt.position.copy(ATON._dMainLpos);\r\n};\r\n\r\nATON._updateEnvironment = ()=>{\r\n    if (!ATON._renderer.shadowMap.enabled) return;\r\n    if (ATON._bShadowsFixedBound) return;\r\n\r\n    ATON.updateDirShadows();\r\n};\r\n\r\n// main audio\r\nATON.setGlobalAudio = (audioURL, bLoop)=>{\r\n    if (audioURL === undefined) return;\r\n    if (bLoop === undefined) bLoop = true;\r\n\r\n    audioURL = ATON.Utils.resolveCollectionURL(audioURL);\r\n\r\n    if (ATON._auMain === undefined || ATON._auMain === null) ATON._auMain = new THREE.Audio( ATON.AudioHub._listener );\r\n    else if (ATON._auMain.isPlaying) ATON._auMain.stop();\r\n\r\n    ATON.AudioHub._loader.load( audioURL, (buffer)=>{\r\n        ATON._auMain.setBuffer( buffer );\r\n        ATON._auMain.setLoop( bLoop );\r\n        //ATON._auMain.setVolume( 2.0 );\r\n        //A._auTalk.setPlaybackRate(0.9);\r\n        ATON._auMain.play();\r\n    });\r\n};\r\n\r\n// FPS monitoring\r\nATON._markFPS = ()=>{\r\n    if (ATON._numReqLoad > 0) return;\r\n\r\n    const fps = (1.0 / ATON._dt);\r\n\r\n    ATON._avgFPScount += 1.0;\r\n    ATON._dtAccum += ATON._dt;\r\n    ATON._avgFPSaccum += fps;\r\n\r\n    if (ATON._dtAccum < 1.0) return;\r\n\r\n    ATON._fps = ATON._avgFPSaccum / ATON._avgFPScount;\r\n    //console.log(ATON._fps);\r\n\r\n    ATON._avgFPSaccum = 0.0;\r\n    ATON._avgFPScount = 0.0;\r\n    ATON._dtAccum = 0.0;\r\n\r\n    // Dynamic density\r\n    if (!ATON._bDynamicDensity) return;\r\n    let d = ATON._renderer.getPixelRatio();\r\n\r\n    if (ATON._fps < 30.0){\r\n        d *= 0.75;\r\n        if (d >= 0.1){\r\n            ATON._renderer.setPixelRatio( d );\r\n            console.log(d);\r\n        }\r\n    } \r\n    if (ATON._fps > 50.0){\r\n        d *= 1.33;\r\n        if (d <= ATON._stdpxd){\r\n            ATON._renderer.setPixelRatio( d );\r\n            console.log(d);\r\n        }\r\n    }\r\n};\r\n\r\n//==============================================================\r\n// Update routines\r\n//==============================================================\r\nATON._onFrame = ()=>{\r\n    // TODO: add pause render\r\n\r\n    ATON._dt = ATON._clock.getDelta();\r\n    //ATON._fps = (1.0 / ATON._dt);\r\n    \r\n    ATON._markFPS();\r\n\r\n    //ATON.fireEvent(\"preframe\");\r\n\r\n    // Render\r\n    //ATON._renderer.render( ATON._mainRoot, ATON.Nav._camera );\r\n\r\n\r\n    if (ATON.XR._bPresenting) ATON.XR.update();\r\n    else ATON.Nav._controls.update(ATON._dt);\r\n\r\n    // Spatial queries\r\n    ATON._handleQueries(); // k\r\n\r\n    // Navigation system\r\n    ATON.Nav.update(); // k\r\n\r\n    // VRoadcast\r\n    ATON.VRoadcast.update();\r\n\r\n    // SUI\r\n    ATON.SUI.update(); // k\r\n\r\n    // Mat\r\n    ATON.MatHub.update(); // k\r\n\r\n    // Environment/lighting\r\n    ATON._updateEnvironment();\r\n\r\n    // 3D models animations\r\n    ATON._updateAniMixers();\r\n\r\n    //ATON.fireEvent(\"frame\");\r\n    ATON._updateRoutines();\r\n\r\n    // TileSets\r\n    ATON._updateTSets();\r\n\r\n    // Render\r\n    ATON._renderer.render( ATON._mainRoot, ATON.Nav._camera );\r\n};\r\n\r\nATON.addUpdateRoutine = (U)=>{\r\n    if (U === undefined) return;\r\n    ATON._updRoutines.push(U);\r\n};\r\n\r\nATON.deleteAllUpdateRoutines = ()=>{\r\n    ATON._updRoutines = [];\r\n};\r\n\r\nATON._updateRoutines = ()=>{\r\n    let n = ATON._updRoutines.length;\r\n    if (n <= 0) return;\r\n\r\n    for (let u=0; u<n; u++) ATON._updRoutines[u]();\r\n};\r\n\r\n//================================================\r\nATON._updateTSets = ()=>{\r\n    const nts = ATON._tsets.length;\r\n    if (nts <= 0) return;\r\n\r\n    ATON.Nav._camera.updateMatrixWorld();\r\n    //if (Nav._camOrbit) Nav._camOrbit.updateMatrixWorld();\r\n    //if (Nav._camFP) Nav._camFP.updateMatrixWorld();\r\n\r\n    for (let ts=0; ts<nts; ts++){\r\n        const TS = ATON._tsets[ts];   \r\n        TS.update();\r\n    }\r\n};\r\n\r\n\r\nATON._updateAniMixers = ()=>{\r\n    let num = ATON._aniMixers.length;\r\n    if (num < 1) return;\r\n\r\n    for (let m=0; m<num; m++){\r\n        let M = ATON._aniMixers[m];\r\n        M.update( ATON._dt );\r\n        //console.log(M);\r\n    }\r\n};\r\n\r\nATON._updateScreenMove = (e)=>{\r\n    if (e.preventDefault) e.preventDefault();\r\n\r\n    if (ATON.Nav._mode === ATON.Nav.MODE_DEVORI){\r\n        ATON._screenPointerCoords.x = 0.0;\r\n        ATON._screenPointerCoords.y = 0.0;\r\n        return;\r\n    }\r\n\r\n\tATON._screenPointerCoords.x = ( e.clientX / window.innerWidth ) * 2 - 1;\r\n\tATON._screenPointerCoords.y = -( e.clientY / window.innerHeight ) * 2 + 1;\r\n\r\n    //console.log(ATON._screenPointerCoords);\r\n};\r\n\r\n//==============================================================\r\n// Query rountines\r\n//==============================================================\r\nATON._registerRCS = ()=>{\r\n    ATON._rcRR = 0;\r\n    ATON._rcHandlers = [];\r\n\r\n    ATON._rcHandlers.push( ATON._handleQueryScene );\r\n    ATON._rcHandlers.push( ATON._handleQuerySemantics );\r\n    ATON._rcHandlers.push( ATON._handleQueryUI );\r\n};\r\n\r\nATON._handleQueries = ()=>{\r\n    if (ATON._bPauseQuery) return;\r\n    if (ATON.Nav._bInteracting) return;\r\n    if (ATON._numReqLoad > 0) return;\r\n\r\n    if (ATON.Nav.isTransitioning()) return; // do not query during POV transitions\r\n    //if (ATON.device.isMobile || !ATON.XR.isPresenting()) return; \r\n\r\n    // interleaving mode\r\n    //ATON._rcHandlers[ATON._rcRR]();\r\n    //ATON._rcRR = (ATON._rcRR+1) % 3;\r\n\r\n    ATON._handleQueryUI();\r\n\r\n    if (ATON._bqScene) ATON._handleQueryScene();\r\n    if (ATON._bqSem)   ATON._handleQuerySemantics();\r\n    \r\n    //ATON._handleQueryUI();\r\n\r\n    ATON.Nav.locomotionValidator();\r\n\r\n    // Timed gaze input\r\n    if (ATON._tgiDur === undefined) return;\r\n    if (ATON._tHover === undefined) return;\r\n    //console.log(ATON._tHover);\r\n\r\n    const d = ATON._clock.elapsedTime - ATON._tHover;\r\n    if (d >= ATON._tgiDur){\r\n        ATON._stdActivation();\r\n\r\n        ATON._tHover = undefined;\r\n        ATON._tgiPer = undefined;\r\n    }\r\n    else ATON._tgiPer = (d/ATON._tgiDur);\r\n\r\n};\r\n\r\n// Ray casting visible scenegraph\r\nATON._handleQueryScene = ()=>{\r\n    if (ATON.XR.isPresenting()){\r\n        ATON.XR.setupQueryRay(ATON._rcScene);\r\n    }\r\n    else \r\n        ATON._rcScene.setFromCamera( ATON._screenPointerCoords, ATON.Nav._camera );\r\n\r\n    ATON._hitsScene = [];\r\n    //ATON._rcScene.intersectObjects( ATON._rootVisible.children, true, ATON._hitsScene );\r\n    ATON._rcScene.intersectObjects( ATON._mainRoot.children, true, ATON._hitsScene );\r\n\r\n    //ATON._hitsOperator(ATON._hits);\r\n\r\n    // Process hits\r\n    const hitsnum = ATON._hitsScene.length;\r\n    if (hitsnum <= 0){\r\n        ATON._queryDataScene = undefined;\r\n        return;\r\n    }\r\n\r\n    const h = ATON._hitsScene[0];\r\n\r\n    ATON._queryDataScene = {};\r\n    ATON._queryDataScene.p = h.point;\r\n    ATON._queryDataScene.d = h.distance;\r\n    ATON._queryDataScene.o = h.object;\r\n    \r\n    //console.log(ATON._queryDataScene.o);\r\n\r\n    // Normals\r\n    if (!ATON._bQueryNormals) return;\r\n    if (h.face === null) return;\r\n    if (h.face.normal === undefined) return;\r\n\r\n    ATON._queryDataScene.matrixWorld = new THREE.Matrix3().getNormalMatrix( h.object.matrixWorld );\r\n    ATON._queryDataScene.n = h.face.normal.clone().applyMatrix3( ATON._queryDataScene.matrixWorld ).normalize();\r\n};\r\n\r\n/**\r\nGet location of current queried point (if any) on visible scene.\r\nIf no point is queried, return undefined\r\n@returns {THREE.Vector3}\r\n@example\r\nlet p = ATON.getSceneQueriedPoint()\r\n*/\r\nATON.getSceneQueriedPoint = ()=>{\r\n    if (ATON._queryDataScene === undefined) return undefined;\r\n    return ATON._queryDataScene.p;\r\n};\r\n\r\n/**\r\nGet distance to queried location (if any) on visible scene.\r\nIf no point is queried, return undefined\r\n@returns {number}\r\n@example\r\nlet d = ATON.getSceneQueriedDistance()\r\n*/\r\nATON.getSceneQueriedDistance = ()=>{\r\n    if (ATON._queryDataScene === undefined) return undefined;\r\n    return ATON._queryDataScene.d;\r\n};\r\n\r\n/**\r\nGet queried location normal (if any) on visible scene.\r\nIf no point is queried, return undefined\r\n@returns {THREE.Vector3}\r\n@example\r\nlet n = ATON.getSceneQueriedNormal()\r\n*/\r\nATON.getSceneQueriedNormal = ()=>{\r\n    if (ATON._queryDataScene === undefined) return undefined;\r\n    return ATON._queryDataScene.n;\r\n};\r\n\r\n\r\n// Ray casting semantic-graph\r\nATON._handleQuerySemantics = ()=>{\r\n    if (ATON.XR.isPresenting()){\r\n        ATON.XR.setupQueryRay(ATON._rcSemantics);\r\n    }\r\n    else \r\n        ATON._rcSemantics.setFromCamera( ATON._screenPointerCoords, ATON.Nav._camera );\r\n\r\n    ATON._hitsSem = [];\r\n    ATON._rcSemantics.intersectObjects( ATON._mainRoot.children, true, ATON._hitsSem );\r\n\r\n    //console.log(ATON._hitsSem);\r\n\r\n    // Process hits\r\n    const hitsnum = ATON._hitsSem.length;\r\n    if (hitsnum <= 0){\r\n        ATON._queryDataSem = undefined;\r\n\r\n        if (ATON._hoveredSemNode){\r\n            ATON.fireEvent(\"SemanticNodeLeave\", ATON._hoveredSemNode);\r\n            let S = ATON.getSemanticNode(ATON._hoveredSemNode);\r\n            if (S && S.onLeave) S.onLeave();\r\n        }\r\n        \r\n        ATON._hoveredSemNode = undefined;\r\n        ATON._tHover = undefined;\r\n        return;\r\n    }\r\n\r\n    const h = ATON._hitsSem[0];\r\n\r\n    // Occlusion\r\n    if (ATON._bQuerySemOcclusion && ATON._queryDataScene){\r\n        if (ATON._queryDataScene.d < h.distance){\r\n\r\n            ATON._queryDataSem = undefined;\r\n\r\n            if (ATON._hoveredSemNode){\r\n                ATON.fireEvent(\"SemanticNodeLeave\", ATON._hoveredSemNode);\r\n                let S = ATON.getSemanticNode(ATON._hoveredSemNode);\r\n                if (S && S.onLeave) S.onLeave();\r\n            }\r\n\r\n            ATON._hoveredSemNode = undefined;\r\n            ATON._tHover = undefined;\r\n            return;\r\n        }\r\n    }\r\n\r\n    ATON._queryDataSem = {};\r\n    ATON._queryDataSem.p = h.point;\r\n    ATON._queryDataSem.d = h.distance;\r\n    ATON._queryDataSem.o = h.object;\r\n    ATON._queryDataSem.list = []; // holds sem-nodes parental list\r\n\r\n    // traverse parents\r\n    const L = ATON._queryDataSem.list;\r\n    let sp = h.object.parent;\r\n    while (sp){\r\n        if (sp.nid && sp.nid !== ATON.ROOT_NID) L.push(sp.nid);\r\n        sp = sp.parent;\r\n    }\r\n\r\n    const hsn = L[0];\r\n    if (hsn){\r\n        if (ATON._hoveredSemNode !== hsn){\r\n            if (ATON._hoveredSemNode){\r\n                ATON.fireEvent(\"SemanticNodeLeave\", ATON._hoveredSemNode);\r\n                let S = ATON.getSemanticNode(ATON._hoveredSemNode);\r\n                if (S && S.onLeave) S.onLeave();\r\n                \r\n                ATON._tHover = undefined;\r\n            }\r\n\r\n            ATON._hoveredSemNode = hsn;\r\n            ATON.fireEvent(\"SemanticNodeHover\", hsn);\r\n            let S = ATON.getSemanticNode(hsn);\r\n            if (S && S.onHover) S.onHover();\r\n\r\n            ATON._tHover = ATON._clock.elapsedTime;\r\n        }\r\n    }\r\n\r\n    //console.log(L);\r\n};\r\n\r\nATON._handleQueryUI = ()=>{\r\n    if (ATON.XR.isPresenting()){\r\n        ATON.XR.setupQueryRay(ATON._rcUI);\r\n    }\r\n    else \r\n        ATON._rcUI.setFromCamera( ATON._screenPointerCoords, ATON.Nav._camera );\r\n\r\n    ATON._hitsUI = [];\r\n    ATON._rcUI.intersectObjects( ATON._mainRoot.children, true, ATON._hitsUI );\r\n\r\n    // Process hits\r\n    const hitsnum = ATON._hitsUI.length;\r\n    if (hitsnum <= 0){\r\n        ATON._queryDataUI = undefined;\r\n\r\n        if (ATON._hoveredUI){\r\n            ATON.fireEvent(\"UINodeLeave\", ATON._hoveredUI);\r\n            const S = ATON.getUINode(ATON._hoveredUI);\r\n            if (S && S.onLeave) S.onLeave();\r\n        }\r\n        \r\n        ATON._hoveredUI = undefined;\r\n        ATON._tHover = undefined;\r\n        return;\r\n    }\r\n\r\n    const h = ATON._hitsUI[0];\r\n\r\n    // Occlusion\r\n    if (ATON._queryDataScene){\r\n        if (ATON._queryDataScene.d < h.distance){\r\n\r\n            ATON._queryDataUI = undefined;\r\n\r\n            if (ATON._hoveredUI){\r\n                ATON.fireEvent(\"UINodeLeave\", ATON._hoveredUI);\r\n                const S = ATON.getUINode(ATON._hoveredUI);\r\n                if (S && S.onLeave) S.onLeave();\r\n            }\r\n\r\n            ATON._hoveredUI = undefined;\r\n            ATON._tHover = undefined;\r\n            return;\r\n        }\r\n    }\r\n\r\n    ATON._queryDataUI = {};\r\n    ATON._queryDataUI.p = h.point;\r\n    ATON._queryDataUI.d = h.distance;\r\n    ATON._queryDataUI.o = h.object;\r\n    ATON._queryDataUI.list = []; // holds ui-nodes parental list\r\n\r\n    // traverse parents\r\n    const L = ATON._queryDataUI.list;\r\n    let sp = h.object.parent;\r\n    while (sp){\r\n        if (sp.nid && sp.nid !== ATON.ROOT_NID) L.push(sp.nid);\r\n        sp = sp.parent;\r\n    }\r\n\r\n    const hui = L[0];\r\n    if (hui){\r\n        if (ATON._hoveredUI !== hui){\r\n            if (ATON._hoveredUI){\r\n                ATON.fireEvent(\"UINodeLeave\", ATON._hoveredUI);\r\n                const S = ATON.getUINode(ATON._hoveredUI);\r\n                if (S && S.onLeave) S.onLeave();\r\n                \r\n                ATON._tHover = undefined;\r\n            }\r\n\r\n            ATON._hoveredUI = hui;\r\n            ATON.fireEvent(\"UINodeHover\", hui);\r\n            const S = ATON.getUINode(hui);\r\n            if (S && S.onHover) S.onHover();\r\n\r\n            ATON._tHover = ATON._clock.elapsedTime;\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport default ATON;\r\n\r\n\r\n"]}